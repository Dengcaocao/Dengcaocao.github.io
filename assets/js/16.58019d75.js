(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{282:function(t,a,s){"use strict";s.r(a);var e=s(13),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"clock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#clock"}},[t._v("#")]),t._v(" Clock")]),t._v(" "),a("p",[t._v("该对象用于跟踪时间。")]),t._v(" "),a("h3",{attrs:{id:"构造函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[t._v("#")]),t._v(" 构造函数")]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("THREE")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Clock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("autoStart"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("autoStart — (可选) 是否要在第一次调用 .getDelta() 时自动开启时钟。默认值是 true。")])]),t._v(" "),a("h3",{attrs:{id:"属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[t._v("#")]),t._v(" 属性")]),t._v(" "),a("h4",{attrs:{id:"autostart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#autostart"}},[t._v("#")]),t._v(" .autoStart")]),t._v(" "),a("p",[t._v("是否在第一次调用 .getDelta() 时开启时钟。默认值是 true。")]),t._v(" "),a("h4",{attrs:{id:"starttime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#starttime"}},[t._v("#")]),t._v(" .startTime")]),t._v(" "),a("p",[t._v("存储时钟最后一次调用 start 方法的时间。默认值是 0。")]),t._v(" "),a("h4",{attrs:{id:"oldtime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oldtime"}},[t._v("#")]),t._v(" .oldTime")]),t._v(" "),a("p",[t._v("存储时钟最后一次调用 start, .getElapsedTime() 或 .getDelta() 方法的时间。默认值是 0。")]),t._v(" "),a("h4",{attrs:{id:"elapsedtime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#elapsedtime"}},[t._v("#")]),t._v(" .elapsedTime")]),t._v(" "),a("p",[t._v("保存时钟运行的总时长。默认值是 0。")]),t._v(" "),a("h4",{attrs:{id:"running"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#running"}},[t._v("#")]),t._v(" .running")]),t._v(" "),a("p",[t._v("判断时钟是否在运行。默认值是 false。")]),t._v(" "),a("h3",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("h4",{attrs:{id:"start"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#start"}},[t._v("#")]),t._v(" .start ()")]),t._v(" "),a("p",[t._v("启动时钟。同时将 startTime 和 oldTime 设置为当前时间。 设置 elapsedTime 为 0，并且设置 running 为 true.")]),t._v(" "),a("h4",{attrs:{id:"stop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stop"}},[t._v("#")]),t._v(" .stop ()")]),t._v(" "),a("p",[t._v("停止时钟。同时将 oldTime 设置为当前时间。")]),t._v(" "),a("h4",{attrs:{id:"getelapsedtime"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getelapsedtime"}},[t._v("#")]),t._v(" .getElapsedTime ()")]),t._v(" "),a("p",[t._v("获取自时钟启动后的秒数，同时将 .oldTime 设置为当前时间。\n如果 .autoStart 设置为 true 且时钟并未运行，则该方法同时启动时钟。")]),t._v(" "),a("h4",{attrs:{id:"getdelta"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getdelta"}},[t._v("#")]),t._v(" .getDelta ()")]),t._v(" "),a("p",[t._v("获取自 .oldTime 设置后到当前的秒数。 同时将 .oldTime 设置为当前时间。\n如果 .autoStart 设置为 true 且时钟并未运行，则该方法同时启动时钟。")])])}),[],!1,null,null,null);a.default=r.exports}}]);