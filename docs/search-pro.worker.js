const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return R(e,t,s,n,i,1,o,""),n},R=(e,t,s,n,o,u,i,r)=>{const d=u*i;t:for(const l of e.keys())if(l===F){const a=o[d-1];a<=s&&n.set(r,[e.get(l),a])}else{let a=u;for(let h=0;h<l.length;++h,++a){const m=l[h],p=i*a,f=p-i;let c=o[p];const g=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let y=g;y<_;++y){const b=m!==t[y],z=o[f+y]+ +b,A=o[f+y+1]+1,w=o[p+y]+1,L=o[p+y+1]=Math.min(z,A,w);L<c&&(c=L)}if(c>s)continue t}R(e.get(l),t,s,n,o,a,i,r+l)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const d=e.get(u);if(r===u.length)e=d;else{const l=new Map;l.set(u.slice(r),d),e.set(t.slice(n,n+r),l),e.delete(u),e=l}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)W(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},W=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)W(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d}=u;return Math.log(1+(s-t+.5)/(t+.5))*(d+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof console?.[e]=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,d=new Map)=>{if(o==null)return d;for(const l of Object.keys(u)){const a=u[l],h=e._fieldIds[l],m=o.get(h);if(m==null)continue;let p=m.size;const f=e._avgFieldLength[h];for(const c of m.keys()){if(!e._documentIds.has(c)){gt(e,h,c,s),p-=1;continue}const g=i?i(e._documentIds.get(c),s,e._storedFields.get(c)):1;if(!g)continue;const _=m.get(c),y=e._fieldLength.get(c)[h],b=at(_,p,e._documentCount,y,f,r),z=n*a*g*b,A=d.get(c);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(l):A.match[s]=[l]}else d.set(c,{score:z,terms:[t],match:{[s]:[l]}})}}return d},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((c,g)=>({...c,[g]:N(n.boost,g)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:d}=n,{fuzzy:l,prefix:a}={...J.weights,...i},h=e._index.get(t.term),m=B(e,t.term,t.term,1,h,o,u,d);let p,f;if(t.prefix&&(p=e._index.atPrefix(t.term)),t.fuzzy){const c=t.fuzzy===!0?.2:t.fuzzy,g=c<1?Math.min(r,Math.round(t.term.length*c)):c;g&&(f=e._index.fuzzyGet(t.term,g))}if(p)for(const[c,g]of p){const _=c.length-t.term.length;if(!_)continue;f?.delete(c);const y=a*c.length/(c.length+.3*_);B(e,t.term,c,y,g,o,u,d,m)}if(f)for(const c of f.keys()){const[g,_]=f.get(c);if(!_)continue;const y=l*c.length/(c.length+_);B(e,t.term,c,y,g,o,u,d,m)}return m},X=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},h=t.queries.map(m=>X(e,m,a));return Y(h,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:d}=i,l=r(t).flatMap(a=>d(a)).filter(a=>!!a).map(ft(i)).map(a=>At(e,a,i));return Y(l,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:d}]of n){const l=r.length,a={id:e._documentIds.get(u),score:i*l,terms:Object.keys(d),match:d};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),d=n.get(r);d!=null?(d.score+=u,d.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:d}]of n)o.push({suggestion:u,terms:r,score:i/d});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if(t?.fields==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:d,serializationVersion:l},a)=>{if(l!==1&&l!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const h=new Et(a);h._documentCount=t,h._nextId=s,h._documentIds=k(n),h._idToShortId=new Map,h._fieldIds=o,h._fieldLength=k(u),h._avgFieldLength=i,h._storedFields=k(r),h._dirtCount=d||0,h._index=new C;for(const[m,p]of h._documentIds)h._idToShortId.set(p,m);for(const[m,p]of e){const f=new Map;for(const c of Object.keys(p)){let g=p[c];l===1&&(g=g.ds),f.set(parseInt(c,10),k(g))}h._index.set(m,f)}return h},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(l,a=!1)=>{let h="";i===0?h=l.length>20?`… ${l.slice(-20)}`:l:a?h=l.length+i>100?`${l.slice(0,100-i)}… `:l:h=l.length>20?`${l.slice(0,20)} … ${l.slice(-20)}`:l,h&&o.push(h),i+=h.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let d=s.indexOf(n,u);if(d===-1)return null;for(;d>=0;){const l=d+n.length;if(r(e.slice(u,d)),u=l,i>100)break;d=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,d=u.includes("@"),l=u.includes("#"),[a,h]=u.split(/[#@]/),m=i.sort((f,c)=>f.length-c.length).filter((f,c)=>i.slice(c+1).every(g=>!g.includes(f))),{contents:p}=n[a]??={title:"",contents:[]};if(d)p.push([{type:"customField",key:a,index:h,display:m.map(f=>o.c.map(c=>j(c,f))).flat().filter(f=>f!==null)},r]);else{const f=m.map(c=>j(o.h,c)).filter(c=>c!==null);if(f.length&&p.push([{type:l?"heading":"title",key:a,...l&&{anchor:h},display:f},r]),"t"in o)for(const c of o.t){const g=m.map(_=>j(c,_)).filter(_=>_!==null);g.length&&p.push([{type:"text",key:a,...l&&{anchor:h},display:g},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":492,\"nextId\":492,\"documentIds\":{\"0\":\"v-7f43ec30\",\"1\":\"v-7f43ec30#基本用法\",\"2\":\"v-7f43ec30#绘制图形\",\"3\":\"v-7f43ec30#闭合路径\",\"4\":\"v-7f43ec30#清除画布\",\"5\":\"v-7f43ec30#绘制方式\",\"6\":\"v-7f43ec30#矩形\",\"7\":\"v-7f43ec30#圆弧\",\"8\":\"v-7f43ec30#线段\",\"9\":\"v-7f43ec30#arcto画圆弧\",\"10\":\"v-7f43ec30#贝塞尔曲线\",\"11\":\"v-7f43ec30#path2d\",\"12\":\"v-7f43ec30#样式控制\",\"13\":\"v-7f43ec30#设置画笔颜色\",\"14\":\"v-7f43ec30#透明度\",\"15\":\"v-7f43ec30#线段样式\",\"16\":\"v-7f43ec30#阴影\",\"17\":\"v-7f43ec30#绘制图片-视频\",\"18\":\"v-7f43ec30#绘制文本\",\"19\":\"v-7f43ec30#变换\",\"20\":\"v-7f43ec30#合成\",\"21\":\"v-7f43ec30#刮刮乐\",\"22\":\"v-7f43ec30#裁剪\",\"23\":\"v-7f43ec30#画笔状态的保存与恢复\",\"24\":\"v-7f43ec30#像素操作\",\"25\":\"v-7f43ec30#封装和交互\",\"26\":\"v-7f43ec30#案例\",\"27\":\"v-7f43ec30#画布\",\"28\":\"v-7f43ec30#时钟\",\"29\":\"v-7f43ec30#pixijs\",\"30\":\"v-9cf5bc26\",\"31\":\"v-7a92c856\",\"32\":\"v-7a92c856#介绍下深度优先遍历和广度优先遍历-如何实现\",\"33\":\"v-6a804144\",\"34\":\"v-6a804144#内存管理\",\"35\":\"v-6a804144#垃圾回收与-gc-算法\",\"36\":\"v-6a804144#v8-引擎的垃圾回收\",\"37\":\"v-6a804144#performance-工具\",\"38\":\"v-6a804144#优化实例\",\"39\":\"v-5a14b585\",\"40\":\"v-5a14b585#外边距合并\",\"41\":\"v-5a14b585#嵌套块元素-父、子-垂直合并\",\"42\":\"v-5a14b585#相邻块元素垂直-兄弟-合并\",\"43\":\"v-5a14b585#行内元素特点\",\"44\":\"v-5a14b585#字体引入\",\"45\":\"v-5a14b585#空白格解析\",\"46\":\"v-5a14b585#背景\",\"47\":\"v-5a14b585#平铺-background-repeat\",\"48\":\"v-5a14b585#大小-background-size\",\"49\":\"v-5a14b585#定位-background-position\",\"50\":\"v-5a14b585#起始位置-background-origin\",\"51\":\"v-5a14b585#剪裁-background-clip\",\"52\":\"v-5a14b585#关联-background-attachment\",\"53\":\"v-5a14b585#圆角\",\"54\":\"v-5a14b585#渐变色\",\"55\":\"v-5a14b585#线性渐变\",\"56\":\"v-5a14b585#径向渐变\",\"57\":\"v-5a14b585#浮动\",\"58\":\"v-5a14b585#对比-inline-block\",\"59\":\"v-5a14b585#浮动带来的问题\",\"60\":\"v-5a14b585#解决高度塌陷\",\"61\":\"v-5a14b585#定位\",\"62\":\"v-5a14b585#动画\",\"63\":\"v-5a14b585#新颖的选择器\",\"64\":\"v-5a14b585#伪元素-伪类的区别\",\"65\":\"v-5a14b585#在线教程\",\"66\":\"v-7753ac04\",\"67\":\"v-7753ac04#起步\",\"68\":\"v-7753ac04#介绍-好处\",\"69\":\"v-7753ac04#eslint-包\",\"70\":\"v-7753ac04#vscode-中-eslint-扩展\",\"71\":\"v-7753ac04#配置文件\",\"72\":\"v-7753ac04#生成-eslint-配置文件\",\"73\":\"v-7753ac04#生成-eslint-配置文件报错\",\"74\":\"v-7753ac04#eslint-代码检查\",\"75\":\"v-7753ac04#eslint-配置项\",\"76\":\"v-7753ac04#配置文件格式\",\"77\":\"v-7753ac04#配置文件导出使用模式\",\"78\":\"v-7753ac04#env-节点\",\"79\":\"v-7753ac04#globals-节点\",\"80\":\"v-7753ac04#extends-节点\",\"81\":\"v-7753ac04#parseoptions-节点\",\"82\":\"v-7753ac04#rules-节点\",\"83\":\"v-7753ac04#eslint-检查语法的规则\",\"84\":\"v-7753ac04#eslint-语法规范本质\",\"85\":\"v-7753ac04#语法规范包类型\",\"86\":\"v-7753ac04#内置规范包\",\"87\":\"v-7753ac04#第三方规范包\",\"88\":\"v-7753ac04#包的使用\",\"89\":\"v-905b9e44\",\"90\":\"v-905b9e44#快速开始\",\"91\":\"v-905b9e44#jsx\",\"92\":\"v-905b9e44#列表渲染\",\"93\":\"v-905b9e44#通过-npm-创建-react-项目\",\"94\":\"v-905b9e44#组件\",\"95\":\"v-905b9e44#函数组件\",\"96\":\"v-905b9e44#类组件\",\"97\":\"v-905b9e44#state\",\"98\":\"v-905b9e44#props\",\"99\":\"v-905b9e44#useref\",\"100\":\"v-905b9e44#受控和非受控组件\",\"101\":\"v-905b9e44#插槽\",\"102\":\"v-905b9e44#createportal\",\"103\":\"v-905b9e44#css-module\",\"104\":\"v-905b9e44#fragment\",\"105\":\"v-905b9e44#context\",\"106\":\"v-905b9e44#副作用-setstate-执行流程\",\"107\":\"v-905b9e44#useeffect\",\"108\":\"v-905b9e44#其他-effect\",\"109\":\"v-905b9e44#usereducer\",\"110\":\"v-905b9e44#memo\",\"111\":\"v-905b9e44#usememo\",\"112\":\"v-905b9e44#usecallback\",\"113\":\"v-905b9e44#useimperativehanle\",\"114\":\"v-905b9e44#usedeferredvalue\",\"115\":\"v-905b9e44#usetransition\",\"116\":\"v-905b9e44#自定义-hook\",\"117\":\"v-905b9e44#redux\",\"118\":\"v-905b9e44#redux-toolkit-rtx\",\"119\":\"v-905b9e44#reactrouter\",\"120\":\"v-905b9e44#link-navlink\",\"121\":\"v-905b9e44#路由模式\",\"122\":\"v-905b9e44#路由组件参数\",\"123\":\"v-905b9e44#路由参数钩子\",\"124\":\"v-905b9e44#prompt\",\"125\":\"v-905b9e44#路由重定向\",\"126\":\"v-905b9e44#路由懒加载\",\"127\":\"v-905b9e44#reactrouter6\",\"128\":\"v-905b9e44#routes\",\"129\":\"v-905b9e44#路由参数钩子的变化\",\"130\":\"v-905b9e44#路由嵌套\",\"131\":\"v-905b9e44#navigate\",\"132\":\"v-905b9e44#navlink\",\"133\":\"v-905b9e44#服务器代理\",\"134\":\"v-f47328a0\",\"135\":\"v-f47328a0#安装\",\"136\":\"v-f47328a0#ts-node\",\"137\":\"v-f47328a0#类型声明\",\"138\":\"v-f47328a0#类型推断\",\"139\":\"v-f47328a0#类型\",\"140\":\"v-f47328a0#联合类型\",\"141\":\"v-f47328a0#类型断言\",\"142\":\"v-f47328a0#可选属性\",\"143\":\"v-f47328a0#类型别名\",\"144\":\"v-f47328a0#编译选项\",\"145\":\"v-f47328a0#自动编译\",\"146\":\"v-f47328a0#编译配置文件\",\"147\":\"v-f47328a0#include\",\"148\":\"v-f47328a0#exclude\",\"149\":\"v-f47328a0#extends\",\"150\":\"v-f47328a0#files\",\"151\":\"v-f47328a0#compileroptions\",\"152\":\"v-f47328a0#使用-webpack-打包-ts\",\"153\":\"v-f47328a0#类\",\"154\":\"v-f47328a0#修饰符\",\"155\":\"v-f47328a0#继承\",\"156\":\"v-f47328a0#多态\",\"157\":\"v-f47328a0#抽象类\",\"158\":\"v-f47328a0#存取器\",\"159\":\"v-f47328a0#接口\",\"160\":\"v-f47328a0#对象实现接口\",\"161\":\"v-f47328a0#类实现接口\",\"162\":\"v-f47328a0#函数类型接口\",\"163\":\"v-f47328a0#函数重载\",\"164\":\"v-f47328a0#泛型\",\"165\":\"v-06a9fc31\",\"166\":\"v-06a9fc31#介绍下深度优先遍历和广度优先遍历-如何实现\",\"167\":\"v-924fcf76\",\"168\":\"v-924fcf76#_1-2-3-map-parseint-what-why\",\"169\":\"v-924fcf76#什么是防抖和节流-有什么区别-如何实现\",\"170\":\"v-924fcf76#已知数组实现扁平化并去重\",\"171\":\"v-924fcf76#实现一个-new\",\"172\":\"v-7c8e245d\",\"173\":\"v-7c8e245d#css选择器及优先级\",\"174\":\"v-7c8e245d#bfc\",\"175\":\"v-7c8e245d#触发bfc的条件\",\"176\":\"v-7c8e245d#bfc可解决的问题\",\"177\":\"v-7c8e245d#盒模型-box-sizing\",\"178\":\"v-7c8e245d#css实现三角形\",\"179\":\"v-7c8e245d#定位-position\",\"180\":\"v-7c8e245d#清除浮动\",\"181\":\"v-7c8e245d#实现左侧固宽右侧自适应\",\"182\":\"v-7c8e245d#水平垂直居中\",\"183\":\"v-7c8e245d#display-none-和-visibility-hidden-的区别\",\"184\":\"v-7c8e245d#flex布局\",\"185\":\"v-7c8e245d#grid-布局\",\"186\":\"v-7c8e245d#viewport-视口窗口\",\"187\":\"v-7c8e245d#px、em、rem的区别\",\"188\":\"v-7c8e245d#缩小最小字体的方法\",\"189\":\"v-96a226ae\",\"190\":\"v-96a226ae#js数据类型\",\"191\":\"v-96a226ae#null和undefined的区别\",\"192\":\"v-96a226ae#深浅拷贝\",\"193\":\"v-96a226ae#什么是闭包-闭包的作用及注意点\",\"194\":\"v-96a226ae#call和apply的区别\",\"195\":\"v-96a226ae#箭头函数和普通函数的区别\",\"196\":\"v-96a226ae#三元表达式和if-else的区别\",\"197\":\"v-96a226ae#面向对象的理解\",\"198\":\"v-96a226ae#构造函数和实例对象的区别\",\"199\":\"v-96a226ae#作用域和作用域链\",\"200\":\"v-96a226ae#事件流\",\"201\":\"v-96a226ae#get和post的区别\",\"202\":\"v-96a226ae#http和https的区别\",\"203\":\"v-96a226ae#取消ajax请求\",\"204\":\"v-96a226ae#什么是跨域-什么情况会导致跨域-怎么解决\",\"205\":\"v-96a226ae#内存泄露\",\"206\":\"v-96a226ae#变量提升\",\"207\":\"v-96a226ae#原型、原型链\",\"208\":\"v-96a226ae#引用类型和值类型的区别\",\"209\":\"v-96a226ae#数组去重\",\"210\":\"v-96a226ae#for-in和for-of的区别\",\"211\":\"v-96a226ae#typeof-和-instanceof-的区别\",\"212\":\"v-96a226ae#判断两个对象是否相等\",\"213\":\"v-96a226ae#和-的区别\",\"214\":\"v-96a226ae#强制、隐式转换\",\"215\":\"v-96a226ae#判断一个变量准确的数据类型\",\"216\":\"v-96a226ae#cookies、sessionstorage、localstorage的区别\",\"217\":\"v-96a226ae#事件循环\",\"218\":\"v-96a226ae#promise\",\"219\":\"v-96a226ae#set、map、weakset-和-weakmap-的区别\",\"220\":\"v-96a226ae#es5-es6-的继承除了写法以外还有什么区别\",\"221\":\"v-96a226ae#settimeout、promise、async-await-的区别\",\"222\":\"v-96a226ae#js-异步解决方案的发展历程以及优缺点\",\"223\":\"v-661babdd\",\"224\":\"v-7c98cca1\",\"225\":\"v-7c98cca1#usememo-和-usecallback-有什么区别\",\"226\":\"v-7c98cca1#useeffect-和-uselayouteffect-有什么区别\",\"227\":\"v-7c98cca1#useeffect-的用法\",\"228\":\"v-7c98cca1#useeffect-第二个参数内部是怎么比较的\",\"229\":\"v-7c98cca1#介绍一下-hooks\",\"230\":\"v-7c98cca1#react-中-setstate-什么时候是同步的-什么时候是异步的\",\"231\":\"v-f7a5d28c\",\"232\":\"v-f7a5d28c#什么是单页面应用-spa\",\"233\":\"v-f7a5d28c#mvvm模型\",\"234\":\"v-f7a5d28c#vue响应式原理\",\"235\":\"v-f7a5d28c#首屏加载的优化方案\",\"236\":\"v-f7a5d28c#data为什么是一个函数\",\"237\":\"v-f7a5d28c#v-if和v-show的区别\",\"238\":\"v-f7a5d28c#v-if和v-for优先级\",\"239\":\"v-f7a5d28c#computed、watch和methods的区别\",\"240\":\"v-f7a5d28c#vue的生命周期\",\"241\":\"v-f7a5d28c#父子组件的挂载顺序\",\"242\":\"v-f7a5d28c#组件间的通信方式\",\"243\":\"v-f7a5d28c#key-的作用及不建议使用-index\",\"244\":\"v-f7a5d28c#虚拟dom\",\"245\":\"v-f7a5d28c#路由模式\",\"246\":\"v-f7a5d28c#路由跳转方式\",\"247\":\"v-f7a5d28c#路由钩子\",\"248\":\"v-f7a5d28c#vuex\",\"249\":\"v-f7a5d28c#客户端和服务端渲染的区别\",\"250\":\"v-f7a5d28c#怎么解决vue打包文件过大的问题\",\"251\":\"v-f7a5d28c#vue性能优化\",\"252\":\"v-f7a5d28c#怎么解决页面刷新vuex值被重置的问题\",\"253\":\"v-f7a5d28c#如何扩展组件\",\"254\":\"v-f7a5d28c#子组件能修改父组件的数据吗\",\"255\":\"v-f7a5d28c#权限管理\",\"256\":\"v-efffcd32\",\"257\":\"v-efffcd32#运营周报\",\"258\":\"v-564d948e\",\"259\":\"v-69ae3bca\",\"260\":\"v-69ae3bca#变量声明\",\"261\":\"v-69ae3bca#命名规则\",\"262\":\"v-69ae3bca#数据类型\",\"263\":\"v-69ae3bca#基本数据类型\",\"264\":\"v-69ae3bca#复杂数据类型\",\"265\":\"v-69ae3bca#日志打印与错误抛出\",\"266\":\"v-69ae3bca#流程控制\",\"267\":\"v-69ae3bca#语句块\",\"268\":\"v-69ae3bca#条件判断语句\",\"269\":\"v-69ae3bca#switch-语句\",\"270\":\"v-69ae3bca#循环\",\"271\":\"v-69ae3bca#for\",\"272\":\"v-69ae3bca#while-do-while\",\"273\":\"v-69ae3bca#for-in-for-of\",\"274\":\"v-69ae3bca#函数\",\"275\":\"v-69ae3bca#函数类型\",\"276\":\"v-69ae3bca#函数的输入与输出\",\"277\":\"v-69ae3bca#箭头函数\",\"278\":\"v-69ae3bca#形参默认值\",\"279\":\"v-69ae3bca#运算符\",\"280\":\"v-69ae3bca#算术运算符\",\"281\":\"v-69ae3bca#三目运算符\",\"282\":\"v-69ae3bca#逗号运算符\",\"283\":\"v-69ae3bca#逻辑运算符\",\"284\":\"v-69ae3bca#判断运算符\",\"285\":\"v-69ae3bca#运算符优先级\",\"286\":\"v-69ae3bca#类型转换\",\"287\":\"v-69ae3bca#转字符串\",\"288\":\"v-69ae3bca#转数值\",\"289\":\"v-69ae3bca#转布尔\",\"290\":\"v-69ae3bca#js全局方法\",\"291\":\"v-69ae3bca#作用域\",\"292\":\"v-69ae3bca#声明周期\",\"293\":\"v-69ae3bca#变量在作用域中的特点\",\"294\":\"v-69ae3bca#变量提升\",\"295\":\"v-69ae3bca#预编译阶段\",\"296\":\"v-69ae3bca#执行阶段\",\"297\":\"v-69ae3bca#立执行函数\",\"298\":\"v-69ae3bca#闭包\",\"299\":\"v-69ae3bca#深入函数\",\"300\":\"v-69ae3bca#属性\",\"301\":\"v-69ae3bca#this-对象\",\"302\":\"v-69ae3bca#改变-this-指向\",\"303\":\"v-69ae3bca#字符串\",\"304\":\"v-69ae3bca#charat\",\"305\":\"v-69ae3bca#chatcodeat\",\"306\":\"v-69ae3bca#string-fromcharcode\",\"307\":\"v-69ae3bca#concat\",\"308\":\"v-69ae3bca#includes\",\"309\":\"v-69ae3bca#indexof-lastindexof\",\"310\":\"v-69ae3bca#replace\",\"311\":\"v-69ae3bca#slice\",\"312\":\"v-69ae3bca#substr-substring\",\"313\":\"v-69ae3bca#split\",\"314\":\"v-69ae3bca#touppercase-tolowercase\",\"315\":\"v-69ae3bca#trim\",\"316\":\"v-69ae3bca#数组\",\"317\":\"v-69ae3bca#fill\",\"318\":\"v-69ae3bca#length\",\"319\":\"v-69ae3bca#concat-1\",\"320\":\"v-69ae3bca#flat\",\"321\":\"v-69ae3bca#reverse\",\"322\":\"v-69ae3bca#join\",\"323\":\"v-69ae3bca#push-unshift\",\"324\":\"v-69ae3bca#pop-shift\",\"325\":\"v-69ae3bca#splice\",\"326\":\"v-69ae3bca#foreach\",\"327\":\"v-69ae3bca#find\",\"328\":\"v-69ae3bca#every-some\",\"329\":\"v-69ae3bca#filter\",\"330\":\"v-69ae3bca#map\",\"331\":\"v-69ae3bca#reduce\",\"332\":\"v-69ae3bca#sort\",\"333\":\"v-69ae3bca#解构\",\"334\":\"v-69ae3bca#对象的解构\",\"335\":\"v-69ae3bca#使用解构进行变量交换\",\"336\":\"v-69ae3bca#数学对象-math\",\"337\":\"v-69ae3bca#三角函数-角度和边的比值关系\",\"338\":\"v-69ae3bca#定时器\",\"339\":\"v-69ae3bca#settimeout\",\"340\":\"v-69ae3bca#setinterval\",\"341\":\"v-69ae3bca#请求动画帧\",\"342\":\"v-bd88d16a\",\"343\":\"v-bd88d16a#回调地狱\",\"344\":\"v-bd88d16a#解决回调地狱的方法\",\"345\":\"v-bd88d16a#链式调用\",\"346\":\"v-bd88d16a#递归\",\"347\":\"v-bd88d16a#例子\",\"348\":\"v-bd88d16a#拷贝\",\"349\":\"v-bd88d16a#深拷贝\",\"350\":\"v-bd88d16a#浅拷贝\",\"351\":\"v-bd88d16a#节流和防抖\",\"352\":\"v-bd88d16a#防抖\",\"353\":\"v-bd88d16a#节流\",\"354\":\"v-bd88d16a#正则表达式\",\"355\":\"v-bd88d16a#正则声明\",\"356\":\"v-bd88d16a#匹配方法\",\"357\":\"v-bd88d16a#规则\",\"358\":\"v-bd88d16a#量词的选择量\",\"359\":\"v-bd88d16a#捕获\",\"360\":\"v-bd88d16a#断言\",\"361\":\"v-bd88d16a#面向对象\",\"362\":\"v-bd88d16a#构造函数\",\"363\":\"v-bd88d16a#实例化过程中new做了什么事情\",\"364\":\"v-bd88d16a#实例对象和构造函数的关系\",\"365\":\"v-bd88d16a#原型\",\"366\":\"v-bd88d16a#原型链\",\"367\":\"v-bd88d16a#查询原型链\",\"368\":\"v-bd88d16a#终点问题\",\"369\":\"v-bd88d16a#window、object、document的层级关系\",\"370\":\"v-bd88d16a#类、继承-es6\",\"371\":\"v-bd88d16a#静态方法\",\"372\":\"v-bd88d16a#symbol\",\"373\":\"v-bd88d16a#方法\",\"374\":\"v-bd88d16a#内置方法\",\"375\":\"v-bd88d16a#set\",\"376\":\"v-bd88d16a#方法-1\",\"377\":\"v-bd88d16a#封装set方法\",\"378\":\"v-bd88d16a#map\",\"379\":\"v-bd88d16a#方法-2\",\"380\":\"v-bd88d16a#对象方法\",\"381\":\"v-bd88d16a#object-assign\",\"382\":\"v-bd88d16a#object-create\",\"383\":\"v-bd88d16a#object-is\",\"384\":\"v-bd88d16a#object-defineproperty\",\"385\":\"v-bd88d16a#object-freeze\",\"386\":\"v-bd88d16a#模块化\",\"387\":\"v-bd88d16a#自定义属性\",\"388\":\"v-bd88d16a#promise\",\"389\":\"v-bd88d16a#回调函数参数\",\"390\":\"v-bd88d16a#promise-resolve\",\"391\":\"v-bd88d16a#promise-reject\",\"392\":\"v-bd88d16a#promise-all\",\"393\":\"v-bd88d16a#promise-race\",\"394\":\"v-bd88d16a#async-await\",\"395\":\"v-bd88d16a#ajax\",\"396\":\"v-bd88d16a#请求方式\",\"397\":\"v-bd88d16a#状态进程\",\"398\":\"v-bd88d16a#常见状态码\",\"399\":\"v-bd88d16a#例子-1\",\"400\":\"v-bd88d16a#跨域\",\"401\":\"v-bd88d16a#同源策略\",\"402\":\"v-bd88d16a#解决跨域的问题\",\"403\":\"v-bd88d16a#dom\",\"404\":\"v-bd88d16a#dom获取\",\"405\":\"v-bd88d16a#修改dom内容\",\"406\":\"v-bd88d16a#获取dom样式\",\"407\":\"v-bd88d16a#dom相关方法\",\"408\":\"v-bd88d16a#节点\",\"409\":\"v-bd88d16a#节点的操作\",\"410\":\"v-bd88d16a#元素尺寸信息\",\"411\":\"v-bd88d16a#事件\",\"412\":\"v-bd88d16a#事件绑定\",\"413\":\"v-bd88d16a#事件联动\",\"414\":\"v-bd88d16a#事件的冒泡与捕获\",\"415\":\"v-bd88d16a#事件委托\",\"416\":\"v-4424e700\",\"417\":\"v-4424e700#起步\",\"418\":\"v-4424e700#基本指令\",\"419\":\"v-45d9bf9f\",\"420\":\"v-45d9bf9f#vue2和vue3的区别\",\"421\":\"v-45d9bf9f#composition-api\",\"422\":\"v-45d9bf9f#setup\",\"423\":\"v-45d9bf9f#ref\",\"424\":\"v-45d9bf9f#reactive\",\"425\":\"v-45d9bf9f#vue2-vue3-响应式的比较\",\"426\":\"v-45d9bf9f#vue2\",\"427\":\"v-45d9bf9f#vue3\",\"428\":\"v-45d9bf9f#computed\",\"429\":\"v-45d9bf9f#watch\",\"430\":\"v-45d9bf9f#watcheffect\",\"431\":\"v-45d9bf9f#生命周期\",\"432\":\"v-45d9bf9f#hook\",\"433\":\"v-45d9bf9f#toref-torefs\",\"434\":\"v-45d9bf9f#toref\",\"435\":\"v-45d9bf9f#torefs\",\"436\":\"v-45d9bf9f#shallowreactive-shallowref\",\"437\":\"v-45d9bf9f#readonly-shallowreadonly\",\"438\":\"v-45d9bf9f#toraw-markraw\",\"439\":\"v-45d9bf9f#customref\",\"440\":\"v-45d9bf9f#provide-inject\",\"441\":\"v-45d9bf9f#响应式数据判断\",\"442\":\"v-45d9bf9f#fragment\",\"443\":\"v-45d9bf9f#teleport\",\"444\":\"v-45d9bf9f#suspense\",\"445\":\"v-45d9bf9f#其他改变\",\"446\":\"v-52deb5e2\",\"447\":\"v-52deb5e2#快速开始\",\"448\":\"v-52deb5e2#配置文件\",\"449\":\"v-52deb5e2#开发模式做的事\",\"450\":\"v-52deb5e2#处理样式资源\",\"451\":\"v-52deb5e2#处理css资源\",\"452\":\"v-52deb5e2#处理图片资源\",\"453\":\"v-52deb5e2#自定义文件输出目录-清空上次打包内容\",\"454\":\"v-52deb5e2#处理字体资源及其他资源\",\"455\":\"v-52deb5e2#处理js资源\",\"456\":\"v-52deb5e2#eslint\",\"457\":\"v-52deb5e2#webpack中使用\",\"458\":\"v-52deb5e2#babel\",\"459\":\"v-52deb5e2#具体配置\",\"460\":\"v-52deb5e2#处理html资源\",\"461\":\"v-52deb5e2#开发服务器-热更新\",\"462\":\"v-52deb5e2#区分开发和生产配置文件\",\"463\":\"v-52deb5e2#提取css文件\",\"464\":\"v-52deb5e2#处理css兼容及压缩\",\"465\":\"v-0035eb63\",\"466\":\"v-0035eb63#提升开发体验\",\"467\":\"v-0035eb63#sourcemap\",\"468\":\"v-0035eb63#提升打包构建速度\",\"469\":\"v-0035eb63#hotmodulereplacement\",\"470\":\"v-0035eb63#oneof\",\"471\":\"v-0035eb63#include-exclude\",\"472\":\"v-0035eb63#cache\",\"473\":\"v-0035eb63#thread\",\"474\":\"v-0035eb63#减少代码体积\",\"475\":\"v-0035eb63#tree-shaking\",\"476\":\"v-0035eb63#babel\",\"477\":\"v-0035eb63#image-minimizer\",\"478\":\"v-0035eb63#优化代码运行性能\",\"479\":\"v-0035eb63#code-split\",\"480\":\"v-0035eb63#使用方式\",\"481\":\"v-0035eb63#preload-prefetch\",\"482\":\"v-0035eb63#network-cache\",\"483\":\"v-0035eb63#core-js\",\"484\":\"v-0035eb63#pwa\",\"485\":\"v-e52c881c\",\"486\":\"v-15054f24\",\"487\":\"v-71b3ae87\",\"488\":\"v-c1b3734e\",\"489\":\"v-10b8267e\",\"490\":\"v-65f8848d\",\"491\":\"v-0df9f586\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[1,28],\"2\":[1],\"3\":[1,7],\"4\":[1,8],\"5\":[1,4],\"6\":[1,22],\"7\":[1,33],\"8\":[1,12],\"9\":[1,19],\"10\":[1,2],\"11\":[1,20],\"12\":[1],\"13\":[1,87],\"14\":[1,7],\"15\":[1,25],\"16\":[1,15],\"17\":[2,41],\"18\":[1,37],\"19\":[1,21],\"20\":[1,3],\"21\":[1,54],\"22\":[1,23],\"23\":[1,12],\"24\":[1,48],\"25\":[1,49],\"26\":[1],\"27\":[1,102],\"28\":[1,78],\"29\":[1],\"30\":[1],\"31\":[1],\"32\":[3,24],\"33\":[1],\"34\":[1,15],\"35\":[3,40],\"36\":[2],\"37\":[2],\"38\":[1],\"39\":[1],\"40\":[1],\"41\":[4,11],\"42\":[3,9],\"43\":[1,7],\"44\":[1,8],\"45\":[1,16],\"46\":[1],\"47\":[4,8],\"48\":[4,9],\"49\":[4,11],\"50\":[4,8],\"51\":[4,10],\"52\":[4,4],\"53\":[1,26],\"54\":[1],\"55\":[1,31],\"56\":[1,16],\"57\":[1,13],\"58\":[3,2],\"59\":[1,4],\"60\":[1,22],\"61\":[1,40],\"62\":[1,12],\"63\":[1,25],\"64\":[2,10],\"65\":[1],\"66\":[1],\"67\":[1],\"68\":[2,14],\"69\":[2,10],\"70\":[4,1],\"71\":[1],\"72\":[3,28],\"73\":[3,16],\"74\":[2,14],\"75\":[2],\"76\":[1,9],\"77\":[1,13],\"78\":[2,15],\"79\":[2,12],\"80\":[2,11],\"81\":[2,9],\"82\":[2,7],\"83\":[2],\"84\":[2,11],\"85\":[1],\"86\":[1,12],\"87\":[1,15],\"88\":[1,26],\"89\":[2],\"90\":[1,49],\"91\":[1,69],\"92\":[1,19],\"93\":[5,50],\"94\":[1],\"95\":[1,20],\"96\":[1,54],\"97\":[1,93],\"98\":[1,48],\"99\":[1,51],\"100\":[1,15],\"101\":[1,20],\"102\":[1,22],\"103\":[2,21],\"104\":[1,21],\"105\":[1,48],\"106\":[3,55],\"107\":[1,45],\"108\":[2,14],\"109\":[1,34],\"110\":[1,21],\"111\":[1,35],\"112\":[1,20],\"113\":[1,47],\"114\":[1,21],\"115\":[1,8],\"116\":[2,19],\"117\":[1,7],\"118\":[4,94],\"119\":[1,61],\"120\":[2,27],\"121\":[1,21],\"122\":[1,33],\"123\":[1,4],\"124\":[1,18],\"125\":[1,18],\"126\":[1,25],\"127\":[1,3],\"128\":[1,32],\"129\":[1,16],\"130\":[1,32],\"131\":[1,17],\"132\":[1,14],\"133\":[1,50],\"134\":[1,4],\"135\":[1,13],\"136\":[2,14],\"137\":[1,17],\"138\":[1,18],\"139\":[1,76],\"140\":[1,15],\"141\":[1,11],\"142\":[1,15],\"143\":[1,10],\"144\":[1],\"145\":[1,6],\"146\":[1,13],\"147\":[1,7],\"148\":[1,13],\"149\":[1,5],\"150\":[1,8],\"151\":[1,51],\"152\":[4,37],\"153\":[1,23],\"154\":[1,37],\"155\":[1,38],\"156\":[1,13],\"157\":[1,18],\"158\":[1,32],\"159\":[1,22],\"160\":[1,10],\"161\":[1,31],\"162\":[1,18],\"163\":[1,11],\"164\":[1,60],\"165\":[1],\"166\":[3,33],\"167\":[1],\"168\":[8,25],\"169\":[4,33],\"170\":[1,39],\"171\":[2,21],\"172\":[1],\"173\":[1,11],\"174\":[1,13],\"175\":[1,10],\"176\":[1,3],\"177\":[3,12],\"178\":[1,12],\"179\":[3,13],\"180\":[1,17],\"181\":[1,6],\"182\":[1,15],\"183\":[6,8],\"184\":[1,27],\"185\":[2,63],\"186\":[3,25],\"187\":[3,9],\"188\":[1,25],\"189\":[1],\"190\":[1,8],\"191\":[1,5],\"192\":[1,42],\"193\":[2,19],\"194\":[1,23],\"195\":[1,4],\"196\":[2,4],\"197\":[1,13],\"198\":[1,21],\"199\":[1,15],\"200\":[1,5],\"201\":[1,17],\"202\":[1,7],\"203\":[1,15],\"204\":[3,28],\"205\":[1,5],\"206\":[1,15],\"207\":[2,20],\"208\":[1,7],\"209\":[1,31],\"210\":[3,15],\"211\":[4,7],\"212\":[1,35],\"213\":[4,6],\"214\":[2,9],\"215\":[1,11],\"216\":[3,9],\"217\":[1,23],\"218\":[1,20],\"219\":[7,38],\"220\":[4,10],\"221\":[6,20],\"222\":[2,13],\"223\":[1,7],\"224\":[1],\"225\":[4,19],\"226\":[4,10],\"227\":[2,20],\"228\":[2,7],\"229\":[2,7],\"230\":[6,12],\"231\":[1],\"232\":[3,10],\"233\":[1,17],\"234\":[1,16],\"235\":[1,6],\"236\":[1,4],\"237\":[3,9],\"238\":[3,14],\"239\":[2,12],\"240\":[1,48],\"241\":[1,7],\"242\":[1,14],\"243\":[3,35],\"244\":[1,9],\"245\":[1,18],\"246\":[1,9],\"247\":[1,16],\"248\":[1,29],\"249\":[1,14],\"250\":[1,4],\"251\":[1,11],\"252\":[1,4],\"253\":[1,32],\"254\":[1,14],\"255\":[1,14],\"256\":[1],\"257\":[1,10],\"258\":[1,11],\"259\":[1,13],\"260\":[1,19],\"261\":[1,11],\"262\":[1],\"263\":[1,153],\"264\":[1,21],\"265\":[1,19],\"266\":[1],\"267\":[1,9],\"268\":[1,21],\"269\":[2,21],\"270\":[1],\"271\":[1,48],\"272\":[2,9],\"273\":[3,31],\"274\":[1,6],\"275\":[1,15],\"276\":[1,35],\"277\":[1,18],\"278\":[1,10],\"279\":[1],\"280\":[1,23],\"281\":[1,21],\"282\":[1,6],\"283\":[1,23],\"284\":[1,29],\"285\":[1,12],\"286\":[1,15],\"287\":[1,37],\"288\":[1,50],\"289\":[1,10],\"290\":[1,6],\"291\":[1,18],\"292\":[1,9],\"293\":[1,32],\"294\":[1,4],\"295\":[1,60],\"296\":[1,3],\"297\":[1,16],\"298\":[1,36],\"299\":[1],\"300\":[1,25],\"301\":[2,30],\"302\":[3,63],\"303\":[1,18],\"304\":[1,11],\"305\":[1,6],\"306\":[2,4],\"307\":[1,5],\"308\":[1,6],\"309\":[2,14],\"310\":[1,12],\"311\":[1,28],\"312\":[2,21],\"313\":[1,14],\"314\":[2,2],\"315\":[1,2],\"316\":[1,19],\"317\":[1,7],\"318\":[1,10],\"319\":[1,10],\"320\":[1,9],\"321\":[1,4],\"322\":[1,7],\"323\":[2,8],\"324\":[2,7],\"325\":[1,24],\"326\":[1,26],\"327\":[1,16],\"328\":[2,24],\"329\":[1,12],\"330\":[1,20],\"331\":[1,28],\"332\":[1,26],\"333\":[1,13],\"334\":[1,28],\"335\":[1,12],\"336\":[3,45],\"337\":[3,22],\"338\":[1,4],\"339\":[1,23],\"340\":[1,29],\"341\":[1,10],\"342\":[1],\"343\":[1,13],\"344\":[1,24],\"345\":[1,14],\"346\":[1,18],\"347\":[1,52],\"348\":[1],\"349\":[1,32],\"350\":[1,9],\"351\":[1,2],\"352\":[1,19],\"353\":[1,17],\"354\":[1,6],\"355\":[1,37],\"356\":[1,31],\"357\":[1,63],\"358\":[1,28],\"359\":[1,43],\"360\":[1,37],\"361\":[1,4],\"362\":[1,15],\"363\":[1,27],\"364\":[1,6],\"365\":[1,45],\"366\":[1,15],\"367\":[1,14],\"368\":[1,22],\"369\":[3,16],\"370\":[4,37],\"371\":[1,21],\"372\":[1,9],\"373\":[1,17],\"374\":[1,6],\"375\":[1,10],\"376\":[1,42],\"377\":[1,36],\"378\":[1,10],\"379\":[1,48],\"380\":[1],\"381\":[2,35],\"382\":[2,7],\"383\":[2,9],\"384\":[2,104],\"385\":[2,5],\"386\":[1,22],\"387\":[1,31],\"388\":[1,28],\"389\":[1,25],\"390\":[2,2],\"391\":[2,2],\"392\":[2,24],\"393\":[2,13],\"394\":[2,19],\"395\":[1,6],\"396\":[1,40],\"397\":[1,29],\"398\":[1,29],\"399\":[1,66],\"400\":[1,6],\"401\":[1,9],\"402\":[1,95],\"403\":[1,15],\"404\":[1,29],\"405\":[1,12],\"406\":[1,12],\"407\":[1,35],\"408\":[1,12],\"409\":[1,29],\"410\":[1,15],\"411\":[1,5],\"412\":[1,30],\"413\":[1,23],\"414\":[1,16],\"415\":[1,37],\"416\":[1],\"417\":[1,92],\"418\":[1,95],\"419\":[1,5],\"420\":[1,22],\"421\":[2],\"422\":[1,54],\"423\":[1,33],\"424\":[1,21],\"425\":[3],\"426\":[1,23],\"427\":[1,28],\"428\":[1,24],\"429\":[1,52],\"430\":[1,18],\"431\":[1,24],\"432\":[1,40],\"433\":[2],\"434\":[1,28],\"435\":[1,17],\"436\":[2,6],\"437\":[2,4],\"438\":[2,22],\"439\":[1,41],\"440\":[2,27],\"441\":[1,14],\"442\":[1,10],\"443\":[1,13],\"444\":[1,29],\"445\":[1,30],\"446\":[1,9],\"447\":[1,24],\"448\":[1,37],\"449\":[1,5],\"450\":[1,10],\"451\":[1,34],\"452\":[1,33],\"453\":[2,43],\"454\":[1,19],\"455\":[1,13],\"456\":[1,24],\"457\":[1,25],\"458\":[1,19],\"459\":[1,45],\"460\":[1,26],\"461\":[3,30],\"462\":[2,22],\"463\":[1,38],\"464\":[1,55],\"465\":[1,9],\"466\":[1],\"467\":[1,30],\"468\":[1],\"469\":[1,38],\"470\":[1,25],\"471\":[2,33],\"472\":[1,43],\"473\":[1,55],\"474\":[1],\"475\":[2,11],\"476\":[1,39],\"477\":[2,49],\"478\":[1],\"479\":[2,15],\"480\":[1,95],\"481\":[2,22],\"482\":[2,19],\"483\":[2,34],\"484\":[1],\"485\":[1],\"486\":[1],\"487\":[1],\"488\":[1],\"489\":[2],\"490\":[1],\"491\":[1]},\"averageFieldLength\":[1.4126016260162606,22.699622542508028],\"storedFields\":{\"0\":{\"h\":\"Canvas\"},\"1\":{\"h\":\"基本用法\",\"t\":[\"创建一个 canvas 标签，并通过 getContext 获取2d画笔。\",\"<canvas id=\\\"canvas\\\" width=\\\"600\\\" height=\\\"600\\\"></canvas> <script> const canvas = document.querySelector('#canvas') const ctx = canvas.getContext('2d') </script> \",\"兼容处理。可以在标签体内创建内容，与可以通过下面的方式处理。\",\"if (!canvas.getContext) return \"]},\"2\":{\"h\":\"绘制图形\"},\"3\":{\"h\":\"闭合路径\",\"t\":[\"在没使用闭合路径的情况下，接着绘制会使用的前面定义的样式，下一个图形开始路径会与当前图像结束路径相连。\",\"begin 开始路径\",\"close 闭合路径\"]},\"4\":{\"h\":\"清除画布\",\"t\":[\"使用 clearRect(x, y, w, h) 可清除画布上的内容。\"]},\"5\":{\"h\":\"绘制方式\",\"t\":[\"fill 填充绘制\",\"stroke 边框绘制\"]},\"6\":{\"h\":\"矩形\",\"t\":[\"以 x, y 为起点点画宽为 w， 高为 h 的一个矩形。\",\"绘制填充矩形 fillRect(x, y, w, h)。\",\"绘制描边矩形 strokeRect(x, y, w, h)。\",\"拆分绘制方式 rect(x, y, w, h)。\",\"ctx.strokeRect(287.5, 250, 25, 25) // 拆分方式 ctx.rect(287.5, 250, 25, 25) ctx.fill() \"]},\"7\":{\"h\":\"圆弧\",\"t\":[\"arc(x, y, r, p1, p2, false) 以 x, y 为圆心，画半径为 r 从弧度 p1 到弧度 p2 的圆弧，参数6表示是否逆时针。\",\"ctx.beginPath() ctx.arc(300, 300, 300, 0, Math.PI * 2) ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(300, 300, 200, 0, Math.PI) ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(150, 150, 50, 0, Math.PI * 2) ctx.stroke() ctx.closePath() ctx.beginPath() ctx.arc(450, 150, 50, 0, Math.PI * 2) ctx.stroke() ctx.closePath() \",\"使用 moveTo 可以将画笔抬起移至下一个绘制起点。将上面的闭合路径移除使用 moveTo。\",\"ctx.arc(300, 300, 300, 0, Math.PI * 2) ctx.moveTo(500, 300) // …… \"]},\"8\":{\"h\":\"线段\",\"t\":[\"lineTo(x, y) x, y 为下一个绘制点。\",\"ctx.moveTo(250, 300) ctx.lineTo(350, 300) ctx.lineTo(300, 200) ctx.lineTo(250, 300) ctx.stroke() \"]},\"9\":{\"h\":\"arcTo画圆弧\",\"t\":[\"arc(x1, y1, x2, y2, r) 以起始点与点1连接的线和点1与点2连接的线作为切线画半径为 r 的圆弧。\",\"ctx.moveTo(150, 430) ctx.arcTo(300, 500, 450, 430, 350) ctx.stroke() \"]},\"10\":{\"h\":\"贝塞尔曲线\",\"t\":[\"二次贝塞尔曲线\",\"三次贝塞尔曲线\"]},\"11\":{\"h\":\"path2D\",\"t\":[\"将路径进行封装，方便后面继续使用。\",\"const hartPath = new path2D() hartPath.moveTo(300, 450) hartPath.bezierCurveTo(325, 425, 350, 450, 300, 500) hartPath.bezierCurveTo(250, 450, 275, 425, 300, 450) ctx.stroke(hartPath) \"]},\"12\":{\"h\":\"样式控制\"},\"13\":{\"h\":\"设置画笔颜色\",\"t\":[\"strokeStyle 描边样式\",\"fillStyle 填充样式\",\"ctx.strokeStyle = 'red' ctx.fillStyle = 'rgba(255, 0, 0, 0.3)' \",\"创建渐变色。\",\"createLinearGradient(x1, y1, x2, y2) 创建一条从点1到点2的方向的线性渐变。\",\"createRadialGradient(x1, y1, r1, x2, y2, r2) 根据两个圆的位置创建径向渐变。\",\"createConicGradient(deg, x, y) 圆锥渐变，类似调色盘。\",\"返回一个渐变对象，通过 addColorStop(offset, color) 添加渐变色。\",\"// 线性 const linearGradient = ctx.createLinearGradient(300, 300, 300, 500) linearGradient.addColorStop(0, 'transparent') linearGradient.addColorStop(0.5, 'red') linearGradient.addColorStop(1, 'red') ctx.fillStyle = linearGradient ctx.fill() // 径向 const gradientL = ctx.createRadialGradient(150, 150, 20, 150, 150, 40) gradientL.addColorStop(0, '#000') gradientL.addColorStop(1, '#fff') ctx.fillStyle = gradientL ctx.fill() // 圆锥 const gradient = ctx.createConicGradient(0, 200, 200) for (let i = 0; i < 8; i++) { gradient.addColorStop(i / 7, `#${Math.random().toString(16).slice(-6)}`) } ctx.fillStyle = gradient ctx.arc(200, 200, 200, 0, Math.PI * 2) ctx.fill() \",\"使用 createPattern(img, repeat) 可进行图案填充。\",\"const img = new Image() img.src = '1.png' img.onload = () => { const pattern = ctx.createPattern(img, 'no-repeat') ctx.fillStyle = pattern ctx.fillRect(0, 0, 400, 400) } \"]},\"14\":{\"h\":\"透明度\",\"t\":[\"设置画笔全局透明度。\",\"ctx.globalAlpha = 0.5 \"]},\"15\":{\"h\":\"线段样式\",\"t\":[\"lineWidth 宽度，默认1px。\",\"lineCap 末端样式。\",\"butt 平角\",\"round 圆角\",\"square 方型\",\"lineJoin 连接处的样式\",\"mitter 平角\",\"round 圆角\",\"bevel\",\"miterLimit 超出斜接面限制剪裁\",\"setLineDash([x, y]) 虚线, x 线长度， y 空白长度\",\"lineDashOffset 偏移量\"]},\"16\":{\"h\":\"阴影\",\"t\":[\"shadowOffsetX[Y] 水平/垂直偏移量\",\"shadowBlur 模糊度\",\"shadowColor 阴影颜色\",\"ctx.shadowOffsetX = 1 ctx.shadowOffsetY = 1 ctx.shadowBlur = 10 ctx.shadowColor = '#000' \"]},\"17\":{\"h\":\"绘制图片/视频\",\"t\":[\"drawImage(img, cx, cy)\",\"drawImage(img, cx, cy, cw, ch)\",\"drawImage(img, x, y, [w], [h], [cx], [cy], [cw], [ch])\",\"x, y 表示图片绘制的起点\",\"w, h 绘制多宽多高\",\"cx, cy 画布绘制的起始点\",\"cw, ch 绘制到画布多宽多高的位置\",\"const img = new Image() img.src = '2.jpg' img.onload = () => { // ctx.drawImage(img, 0, 0) // ctx.drawImage(img, 0, 0, 400, 400) ctx.drawImage(img, 250, 350, 580, 580, 0, 0, 400, 400) } \",\"绘制视频。\",\"const render = () => { ctx.drawImage(video, 0, 0, 400, 400) // 添加水印 ctx.strokeText('dw', 30, 20) requestAnimationFrame(render) } video.addEventListener('play', render) \"]},\"18\":{\"h\":\"绘制文本\",\"t\":[\"fillText(text, x, y, [maxWidth])\",\"strokeText(text, x, y, [maxWidth])\",\"x, y 文本绘制的起始点，maxWidth 绘制最大宽度\",\"属性\",\"font 设置大小/字体\",\"textAlign 对齐方式，同 css\",\"textBaseline 基线对齐(垂直对齐方式)，同 css\",\"direction 绘制方向，rtl 反向绘制\",\"meassureText 预测量，返回宽度等信息\",\"ctx.font = '100px auto' ctx.textAlign = 'center' ctx.textBaseline = 'middle' ctx.direction = 'rtl' ctx.strokeStyle = 'red' ctx.strokeText('Canvas!', 200, 200) \"]},\"19\":{\"h\":\"变换\",\"t\":[\"translate 位移\",\"rotate 旋转\",\"scale 缩放\",\"可使用 transform 复合属性进行设置。\",\"ctx.translate(200, 200) ctx.rotate(Math.PI / 4) ctx.scale(1.5, 1.5) ctx.fillRect(-100, -25, 200, 50) \"]},\"20\":{\"h\":\"合成\",\"t\":[\"globalCompositeOperation 设置在绘制新形状时应用的合成操作的类型。\"]},\"21\":{\"h\":\"刮刮乐\",\"t\":[\"<div class=\\\"container\\\"> <p>一等奖</p> <canvas id=\\\"canvas\\\" width=\\\"400\\\" height=\\\"400\\\"></canvas> </div> <script> const canvas = document.querySelector('#canvas') const ctx = canvas.getContext('2d') // 蒙层 ctx.fillStyle = '#ccc' ctx.fillRect(0, 0, 400, 400) canvas.addEventListener('click', e => { const { clientX: x, clientY: y } = e ctx.globalCompositeOperation = 'destination-out' ctx.lineWidth = 20 ctx.lineCap = 'round' ctx.moveTo(x, y) canvas.addEventListener('mousemove', e => { const { pageX: mx, pageY: my} = e ctx.lineTo(mx, my) ctx.stroke() }) }) </script> \"]},\"22\":{\"h\":\"裁剪\",\"t\":[\"以当前路径进行裁剪，使路径外的画布不显示。\",\"ctx.arc(200, 200, 33, 0, Math.PI * 2) ctx.stroke() const img = new Image() img.src = '2.jpg' img.onload = () => { ctx.drawImage(img, 0, 0) } ctx.clip() \"]},\"23\":{\"h\":\"画笔状态的保存与恢复\",\"t\":[\"通过 save 方法可以保存当前画笔的状态，想要恢复之前的状态可使用 restore 方法。\",\"ctx.fillStyle = 'red' ctx.save() ctx.fillStyle = 'yellow' ctx.restore() \"]},\"24\":{\"h\":\"像素操作\",\"t\":[\"getImageData(x, y, w, h) 获取每个像素点信息，每4个值为一组，分别对应 rgba。\",\"putImageData(pixiData, dx, dy, x, y, w, h) 根据 pixiData 数据绘制到位图。\",\"dx, dy 源图像在画布中的偏移量\",\"const img = new Image() img.src = './2.jpg' img.onload = () => { ctx.drawImage(img, 0, 0, 400, 400) const imageData = ctx.getImageData(0, 0, 400, 400) console.log(imageData) for (let i = 0; i < imageData.data.length; i += 4) { const gay = (imageData.data[i] + imageData.data[i + 1] + imageData.data[i + 2]) / 3 imageData.data[i] = gay imageData.data[i + 1] = gay imageData.data[i + 2] = gay imageData.data[i + 3] = 255 } ctx.putImageData(imageData, 0, 0, 200, 200, 400, 400) } \"]},\"25\":{\"h\":\"封装和交互\",\"t\":[\"isPointInPath(path, x, y) 判断一个点是否在当前路径上。\",\"class CreateHeart { constructor(canvas, ctx) { this.canvas = canvas this.ctx = ctx this.color = 'pink' this.heartPath = new Path2D() } createPath (x, y) { this.heartPath.moveTo(x, y) this.heartPath.bezierCurveTo(x, y, x + 25, y - 25, x + 50, y) this.heartPath.bezierCurveTo(x + 50, y, x + 75, y + 25, x, y + 80) this.heartPath.moveTo(x, y) this.heartPath.bezierCurveTo(x, y, x - 25, y - 25, x - 50, y) this.heartPath.bezierCurveTo(x - 50, y, x - 75, y + 25, x, y + 80) this.draw(this.canvas.width, this.canvas.height) this.isHover() } isHover () { this.canvas.addEventListener('mousemove', e => { const { pageX, pageY } = e const bool = this.ctx.isPointInPath(this.heartPath, pageX, pageY) this.color = bool ? 'red' : 'pink' this.draw() }) } draw (w, h) { this.ctx.clearRect(0, 0, w, h) this.ctx.stroke(heart.heartPath) this.ctx.fillStyle = this.color this.ctx.fill(heart.heartPath) } } const heart = new CreateHeart(canvas, ctx) heart.createPath(200, 200) heart.createPath(100, 100) \"]},\"26\":{\"h\":\"案例\"},\"27\":{\"h\":\"画布\",\"t\":[\"canvas.toDataURL 方法可以将画布转换成一个图片地址。\",\"<canvas id=\\\"canvas\\\" width=\\\"600\\\" height=\\\"600\\\"></canvas> <div class=\\\"action\\\"> 线条：<input class=\\\"line\\\" type=\\\"range\\\" min=\\\"1\\\" max=\\\"10\\\" value=\\\"1\\\" /> 笔触：<input class=\\\"color\\\" type=\\\"color\\\" /> <button class=\\\"back\\\">橡皮擦</button> <button class=\\\"save\\\">保存签名</button> <button class=\\\"clear\\\">清空画布</button> </div> <script> const canvas = document.querySelector('#canvas') const ctx = canvas.getContext('2d') const lineDom = document.querySelector('.line') const colorDom = document.querySelector('.color') const backBtn = document.querySelector('.back') const saveBtn = document.querySelector('.save') const clearBtn = document.querySelector('.clear') lineDom.onchange = e => handleChange(e.target.value, 'line') colorDom.onchange = e => handleChange(e.target.value, 'color') const handleChange = (value, type) => { type === 'line' ? ctx.lineWidth = value : ctx.strokeStyle = value } backBtn.onclick = () => { ctx.globalCompositeOperation = ctx.globalCompositeOperation === 'destination-out' ? 'source-over' : 'destination-out' } clearBtn.onclick = () => { ctx.clearRect(0, 0, canvas.width, canvas.height) } saveBtn.onclick = () => { const dataUrl = canvas.toDataURL() const tag_a = document.createElement('a') tag_a.href = dataUrl tag_a.download = Math.random().toString(16).slice(-6) tag_a.click() } let isDraw = false canvas.onmousedown = e => { isDraw = true ctx.beginPath() const { clientX: x, clientY: y } = e ctx.moveTo(x, y) } canvas.onmouseup = () => { isDraw = false ctx.closePath() } canvas.onmousemove = e => { if (!isDraw) return const { clientX: x, clientY: y } = e ctx.lineTo(x, y) ctx.stroke() } </script> \"]},\"28\":{\"h\":\"时钟\",\"t\":[\"注意画笔状态的保存与恢复。\",\"<canvas id=\\\"canvas\\\" width=\\\"600\\\" height=\\\"600\\\"></canvas> <script> const canvas = document.querySelector('#canvas') const ctx = canvas.getContext('2d') const render = () => { ctx.clearRect(0, 0, canvas.width, canvas.height) ctx.save() ctx.translate(300, 300) ctx.rotate(-Math.PI / 2) ctx.save() // 刻度 const drawScale = (num, x, lineWidth, color) => { for (let i = 0; i < num; i++) { ctx.beginPath() ctx.lineWidth = lineWidth ctx.moveTo(x, 0) ctx.lineTo(300, 0) ctx.strokeStyle = color ctx.stroke() ctx.closePath() ctx.rotate(Math.PI * 2 / num) } } drawScale(12, 285, 10, 'gray') ctx.restore() ctx.save() drawScale(60, 290, 2, 'gray') ctx.restore() ctx.save() const drawPointer = (color, lineWidth, x, deg) => { ctx.rotate(deg) ctx.beginPath() ctx.lineWidth = lineWidth ctx.strokeStyle = color ctx.moveTo(-30, 0) ctx.lineTo(x, 0) ctx.closePath() ctx.stroke() } const draw = () => { // 指针 const time = new Date() const h = time.getHours() const m = time.getMinutes() const s = time.getSeconds() drawPointer('#000', 4, 210, Math.PI * 2 / 12 * h) ctx.restore() ctx.save() drawPointer('gray', 2, 230, Math.PI * 2 / 60 * m) ctx.restore() ctx.save() drawPointer('red', 1, 250, Math.PI * 2 / 60 * s) ctx.restore() ctx.restore() } draw() requestAnimationFrame(render) } render() </script> \"]},\"29\":{\"h\":\"pixiJs\"},\"30\":{\"h\":\"项目\"},\"31\":{\"h\":\"算法\"},\"32\":{\"h\":\"介绍下深度优先遍历和广度优先遍历，如何实现？\",\"t\":[\"深度优先: 首先访问顶点，然后依次从未被访问的邻节点出发进行访问，直到所有与顶点相通的节点被访问到。\",\"const dfs = (node, nodeList = []) => { if (node === null) return nodeList.push(node) for (let i = 0; i < node.children.length; i++) { dfs(node.children[i], nodeList) } return nodeList } \"]},\"33\":{\"h\":\"\"},\"34\":{\"h\":\"内存管理\",\"t\":[\"从申请 --> 使用 --> 释放的一个过程。\",\"// 申请 变量声明时自动分配 const obj = {} // 使用 obj.test = 'stack manage' // 释放 obj = null \"]},\"35\":{\"h\":\"垃圾回收与 GC 算法\",\"t\":[\"JS 中内存管理是自动的，当对象不再被引用或不能从根上访问(全局作用域)时就被标记为垃圾。\",\"可达对象：从根出发可访问到的对象。\",\"// { test: 'stack manage' } 仍然是个可达对象，因为从obj2上还能访问 let obj = { test: 'stack manage' } let obj2 = obj obj = null function objGroup (obj1, obj2) { obj1.next = obj2 obj2.pre = obj1 return { o1: obj1, o2: obj2 } } const obj = objGroup \",\"GC 垃圾回收机制的简称，可以找到内存中的垃圾进行释放和回收。\",\"不再需要使用的对象\",\"function a () { name = 'stack manage' return name + '8888' } console.log(name) // stack manage a() \",\"不能再访问到的对象\",\"function b () { const name = 'stack manage' return name + '9999' } b() \"]},\"36\":{\"h\":\"V8 引擎的垃圾回收\"},\"37\":{\"h\":\"performance 工具\"},\"38\":{\"h\":\"优化实例\"},\"39\":{\"h\":\"Css3\"},\"40\":{\"h\":\"外边距合并\"},\"41\":{\"h\":\"嵌套块元素(父、子)垂直合并\",\"t\":[\"取父、子中边距最大的一个。\",\"解决方案：\",\"给父元素内填充内容。\",\"给父元素添加 padding 属性。\",\"给父元素添加 border 属性。\",\"给父元素添加 overflow: hidden样式。\"]},\"42\":{\"h\":\"相邻块元素垂直(兄弟)合并\",\"t\":[\"上面的元素设置了 margin-bottom，小面的元素设置了 margin-top。由最大的 margin 值撑开。不能进行处理。\"]},\"43\":{\"h\":\"行内元素特点\",\"t\":[\"不能设置宽高，由内容撑开。\",\"不能设置上下外边距，但可以设置左边距。\",\"可与其他元素并列一排。不支持 auto\"]},\"44\":{\"h\":\"字体引入\",\"t\":[\" @font-face { /* 指定字体名称 */ font-famliy: \\\"\\\"; /* 字体文件路径 */ src:url() } \"]},\"45\":{\"h\":\"空白格解析\",\"t\":[\"html 会默认解析文档中多个空白格为单个空白格。行内元素会支持空白格解析。\",\"解决方案：\",\"并排展示或上一个行内元素结束标签与下一个行内元素开始标签并排。\",\"设置 font-size 的值为0。\",\"display 指定元素类型为块级元素。\",\"块级-block\",\"行内块级-inline-block\",\"行内-inline\"]},\"46\":{\"h\":\"背景\"},\"47\":{\"h\":\"平铺(background-repeat)\",\"t\":[\"no-repeat：不平铺\",\"round：改变图片大小，平铺整个盒子\",\"space：按相同的间距进行平铺\"]},\"48\":{\"h\":\"大小(background-size)\",\"t\":[\"contain：使图片长的一边完全展示\",\"cover：改变图片大小，使图片完全填充\",\"通过像素或百分比设置 x、y 的大小\"]},\"49\":{\"h\":\"定位(background-position)\",\"t\":[\"通过方向(top、left、right、bottom、center)的值盛泽 x、y 的位置\",\"通过像素或百分比设置 x、y 的位置\"]},\"50\":{\"h\":\"起始位置(background-origin)\",\"t\":[\"padding-box：从内边距开始，默认\",\"border-box：从边框开始\",\"content-box：从内容开始\"]},\"51\":{\"h\":\"剪裁(background-clip)\",\"t\":[\"border-box：从边框开始\",\"padding-box：从内边距开始\",\"content-box：从内容开始\",\"text：以文本内容剪裁，注意兼容\"]},\"52\":{\"h\":\"关联(background-attachment)\",\"t\":[\"scoll：随页面滚动而滚动\",\"fixed：固定位置\"]},\"53\":{\"h\":\"圆角\",\"t\":[\"boder-radius：px、em、%\",\"4个值：4个角\",\"3个值：左上、右上左下、右下(对角线)\",\"2个值：左上右下、右上左下(对角线)\",\"1个值：4个角相等\",\"可单独设置某个角\",\"border-top-left-radius\",\"...\",\" border-radius: 10px 20px 30px 40px/40px 30px 20px 10px; /* /前的四个数值表示圆角的水平半径，后面四个值表示圆角的垂直半径。 */ \"]},\"54\":{\"h\":\"渐变色\"},\"55\":{\"h\":\"线性渐变\",\"t\":[\"linear-gradient(direction, color1 [position], ...)\",\"direction：渐变方向。默认从上到下 to bottom\",\"方向值(to top left)\",\"角度值：0deg-top 90deg-right 180deg-bottom 270deg-left 360deg-top\",\"position：渐变开始位置(百分比、px)\",\"repeating-linear-gradient：重复线性渐变\",\"background-image: linear-gradient(to bottom, red , red 66px, yellow 33px); \"]},\"56\":{\"h\":\"径向渐变\",\"t\":[\"radial-gradient(shape size at position-1, start-color[position], ..., last-color[position])\",\"shape：指定渐变的形状\",\"size：定义渐变的大小\",\"position-1：x、y的值\",\"repeating-radial-gradient：重复径向渐变\"]},\"57\":{\"h\":\"浮动\",\"t\":[\"目的：实现文字环绕效果\",\"原理：改变元素的层级。普通层级为1，浮动层级1.5。浏览器层级渲染从低到高\",\"特性：\",\"设置浮动后会变成块级元素，拥有块级元素特性\",\"并排展示\",\"脱离文档流\"]},\"58\":{\"h\":\"对比 inline-block\",\"t\":[\"解析空白格\",\"未脱离文档流\"]},\"59\":{\"h\":\"浮动带来的问题\",\"t\":[\"高度塌陷\",\"可能会覆盖后面的元素\",\"元素高度不一时，元素会被卡住\"]},\"60\":{\"h\":\"解决高度塌陷\",\"t\":[\"在浮动元素后面添加一个空标签并设置 clear 属性（×）\",\"指定父元素高度（×）\",\"块级元素格式化上下文(BFC化)\",\"转为行内块级元素(inline-block)（×）\",\"overflow: hidden;（×）\",\"绝对定位\",\"伪元素（√）\",\" /* before\\\\after */ .clearFix::after { content: \\\"\\\"; display: block; clear: both; } \"]},\"61\":{\"h\":\"定位\",\"t\":[\"指定 top left right bottom 的位置。可通过 z-index 改变层级，默认为 0 可指定为负\",\"层级关系：块级 < 浮动 < 文本 < 定位\",\"fixed：固定定位。相对于窗口，不占据空间\",\"relative：相对定位。相对于自身位置，占据空间，不脱离文档流\",\"absolute：绝对定位。相对于定位元素，不占据空间，脱离文档流。配合绝对定位使用(父相子绝)，以最近的 relative 为准，默认窗口\",\"sticky：粘性定位。\"]},\"62\":{\"h\":\"动画\",\"t\":[\" /* 关键字形式 */ @keyframes mymove { from {top:0px;} to {top:200px;} } /* 百分比形式 */ @keyframes mymove { 0% {top:0px;} 100% {top:200px;} } \"]},\"63\":{\"h\":\"新颖的选择器\",\"t\":[\"a[href]：匹配所有带 href 属性的 a 标签\",\"a[href=\\\"#\\\"]：匹配所有 href=\\\"#\\\" 的 a 标签\",\"img[alt][src=\\\"./img.png\\\"]：匹配所有带 alt 并且 src=\\\"./img.png\\\" 的 img 标签\",\"img[src^=\\\".ima\\\"]：匹配所有 src 以 .ima 开头的 img 元素\",\"^ 表示以什么开头\",\"$ 表示以什么结尾\",\"~ 包含\"]},\"64\":{\"h\":\"伪元素&伪类的区别\",\"t\":[\"伪元素是创建了一个新元素，而伪类是通过特殊的类名对元素进行选择\",\"伪元素使用 : 或者 :: 声明(前者是css2的声明方式，后者是css3)，而伪类只能使用 :\",\"伪元素只能同时使用一个，伪类可以同时使用多个\"]},\"65\":{\"h\":\"在线教程\"},\"66\":{\"h\":\"Eslint\"},\"67\":{\"h\":\"起步\"},\"68\":{\"h\":\"介绍&好处\",\"t\":[\"eslint 是一个语法规范检查的包，内置 280 多个规则。\",\"好处 \",\"统一团队编码规范\",\"统一语法\",\"避免低级错误，减少 git 不必要的提交\",\"在编译时检查语法，而不是在运行时检查\"]},\"69\":{\"h\":\"Eslint 包\",\"t\":[\"安装方式 \",\"通过 npm 进行全局安装或本地安装（项目）npm i eslint -D\",\"项目创建时选择 eslint 包\"]},\"70\":{\"h\":\"VSCode 中 Eslint 扩展\",\"t\":[\"通过搜索插件的方式进行安装\"]},\"71\":{\"h\":\"配置文件\"},\"72\":{\"h\":\"生成 Eslint 配置文件\",\"t\":[\"eslint 可以创建独立的配置文件.eslintrc.js，也可以在 package 中配置\",\"初始化 eslint 配置文件\",\" 1. /node_modules/.bin/eslint --init 2. npx eslint --init \",\"配置选项选择 \",\"检查规则，找出问题，强制应用规则\",\"模块使用机制\",\"是否使用框架\",\"是否使用 TS\",\"规范之后的代码在哪里运行\",\"选择配置规则\",\"标准的那一套\",\"文件使用语言\"]},\"73\":{\"h\":\"生成 Eslint 配置文件报错\",\"t\":[\"在后面检查代码规范时，会导致检查失败：Invalid ecmaVersion\",\"原因：创建文件第一步时选择了强制应用规范，会降低 eslint 版本\",\"解决方案：修改配置文件，降低 ecmaVersion, 从 13 => 12\"]},\"74\":{\"h\":\"Eslint 代码检查\",\"t\":[\" // 目录路径检查目录下的所有文件 1. npx eslint [file path ｜ dir path] 2. npm ./node_modules/.bin/eslint [file path ｜ dir path] \"]},\"75\":{\"h\":\"Eslint 配置项\"},\"76\":{\"h\":\"配置文件格式\",\"t\":[\"javaScript\",\"YAML\",\"JSON\",\"eslint 加载优先级 js>yaml>json。所以最好选择 js 格式\"]},\"77\":{\"h\":\"配置文件导出使用模式\",\"t\":[\"JavaScript modules ES6 导入导出（import/exprot）\",\"commonJS（require/exprot）\",\"推荐使用commonJS\",\"vue 脚手架中，webpack 打包默认使用的是 commonJS\"]},\"78\":{\"h\":\"env 节点\",\"t\":[\" env: { browser: true, // 运行环境 commonjs: true, es2021: true } \",\"在 eslint 规范中，一般不允许使用在页面中未定义的变量\",\"在开发中常常需要用到运行环境中的全局变量或 api，在 env 中配置运行环境就可以使用全局变量或 api 了\"]},\"79\":{\"h\":\"globals 节点\",\"t\":[\"定义全局变量。在文件中访问未定义的变量时，no-undef规则会提示错误。\",\" globals: { \\\"_\\\": true // 可以读取，可以修改 \\\"$\\\": false // 可以读取，不能修改 } \"]},\"80\":{\"h\":\"extends 节点\",\"t\":[\"配置 eslint 在检查时使用的规范包。\",\"在使用第三方包时，可以省略前缀eslint-config-。\",\"可以是字符串形式，也可以是数组形式。\",\" extends: [ \\\"standard\\\" // \\\"eslint-config-standard\\\" ] \"]},\"81\":{\"h\":\"parseOptions 节点\",\"t\":[\"指定 eslint 解析代码时使用的 js 语法检查版本。\",\" parserOptions: { \\\"ecmaVersion\\\": 12 } \"]},\"82\":{\"h\":\"rules 节点\",\"t\":[\"配置 eslint 检查的规范。\",\"使用了第三方包时，rules中的规则会重写包中的规范。（具体配置规则看文档）\"]},\"83\":{\"h\":\"Eslint 检查语法的规则\"},\"84\":{\"h\":\"Eslint 语法规范本质\",\"t\":[\"eslint 内置 285 个规则，每条规则 都是一个 create 函数。\",\"在进行代码检查时，会进行转码。\"]},\"85\":{\"h\":\"语法规范包类型\"},\"86\":{\"h\":\"内置规范包\",\"t\":[\"随 eslint 一起下载\",\"eslint-all：使用了 eslint 全部的规则（280 多个）\",\"eslint-recommended：使用推荐的 50 多个规则\"]},\"87\":{\"h\":\"第三方规范包\",\"t\":[\"第三方包有很多，我们就拿标准的规范包eslint-config-standard来举例。\",\"检查包需要的 eslint 版本：npm info \\\"eslint-config-standard@latest\\\" peerDependencies\",\"下载包：npm i eslint-config-standard -D\"]},\"88\":{\"h\":\"包的使用\",\"t\":[\" module.exports = { env: { browser: true, commonjs: true, es2021: true, }, // \\\"extends\\\": \\\"eslint:all\\\", // 内置：所有规则 // \\\"extends\\\": \\\"eslint:recommended\\\", // 内置：推荐规则 extends: \\\"standard\\\", // 第三方：标准规则 // \\\"extends\\\": \\\"airbnb-base\\\", // 第三方：airbnb公司规则 parserOptions: { ecmaVersion: 12, }, rules: {}, }; \"]},\"89\":{\"h\":\"React 18\"},\"90\":{\"h\":\"快速开始\",\"t\":[\"引入 React。\",\"// 暴露 React <script src=\\\"https://unpkg.com/react/umd/react.development.js\\\" crossorigin></script> // 暴露 ReactDOM 用于操作dom。必须在 React 之后 <script src=\\\"https://unpkg.com/react-dom/umd/react-dom.development.js\\\" crossorigin></script> \",\"创建 React 元素。标签中的类名需要使用 className 来指定，设置事件时属性名应为驼峰形式。\",\"/** * 参数1: 标签名称 * 参数2: 标签属性 * 其他均为标签的子元素或内容 */ const dom = React.createElement( \\\"h1\\\", { className: \\\"h1\\\", onClick: () => alert(\\\"h1\\\"), }, \\\"hello react\\\" ); \",\"创建根元素。\",\"const root = ReactDOM.createRoot(DOM); \",\"将内容渲染到根元素中。渲染时会自动比价两次渲染的元素，只会更新发送变化的部分。\",\"root.render(dom); // 18之前的渲染方式 ReactDOM.render(dom, app); \"]},\"91\":{\"h\":\"JSX\",\"t\":[\"React 中可以使用 JSX 来创建 React 元素，JSX 就是元素节点碎片。\",\"JSX 需要通过 babel 编译(React.createElement)为 JS 代码后才能被 React 执行，并且需要指定类型为type=\\\"text/babel\\\"。\",\"JSX 中通过属性的方式进行事件绑定，和原生 JS 不同，在 React 中事件需要使用驼峰命名法onclick => onClick。 React 中的事件对象是经过 React 包装过的，无需考虑兼容性问题。\",\"注意点\",\"JSX 不是字符串，不需要加引号\",\"必须有且只有一个根标签\",\"可以使用插值表达式{}\",\"标签应为小写，大写会被认为是一个组件\",\"class 类名需要通过 className 来指定\",\"内联 style 使用对象的形式进行配置\",\"jsx 注释需写在{}中\",\"<script src=\\\"https://unpkg.com/babel-standalone@6/babel.min.js\\\"></script> <script type=\\\"text/babel\\\"> const h1 = ( <h1 className=\\\"h1\\\" style={{ backgroundColor: \\\"red\\\" }}> hello react </h1> ); </script> \"]},\"92\":{\"h\":\"列表渲染\",\"t\":[\"React 会自动将数组的元素遍历渲染页面中。必须使用一个唯一值作为列表key。\",\"const arr = [\\\"vue3\\\", \\\"typeScript\\\", \\\"react\\\"]; const list = ( <ul> {arr.map((item) => ( <li>{item}</li> ))} </ul> ); \"]},\"93\":{\"h\":\"通过 npm 创建 react 项目\",\"t\":[\"依赖下载。\",\"// react-scripts 提供react开发环境集成了webpack、babel等配置 npm i react react-dom react-scripts \",\"目录结构约定(约定优于配置)。\",\"根目录 - public：静态文件，不会被 webpack 打包 - index.html：首页模版(添加根标签<div id=\\\"root\\\"></div>) - src - App.js - index.js：打包入口文件 \",\"hello react。\",\"/** * client：浏览器渲染 * server：服务器渲染 */ import ReactDOM from \\\"react-dom/client\\\"; const App = <h1>hello react</h1>; const root = ReactDom.createRoot(document.querySelector(\\\"#root\\\")); root.render(App); \",\"配置脚步运行和打包 react。\",\"\\\"scripts\\\": { \\\"start\\\": \\\"react-scripts start\\\", \\\"build\\\": \\\"react-scripts build\\\", } \"]},\"94\":{\"h\":\"组件\"},\"95\":{\"h\":\"函数组件\",\"t\":[\"返回 jsx 的普通函数。组件的首字母必须大写。 通过函数名作为标签进行渲染时会调用此函数，将返回的 React 标签渲染成真实 DOM。\",\"function App() { return <h1>Hello React</h1>; } root.render(<App />); \"]},\"96\":{\"h\":\"类组件\",\"t\":[\"通过 ES6 定义类的方式继承React.Component类，必须实现render方法并返回一个 jsx。\",\"通过类名作为标签渲染时会new一个该类的实例，并调用实例上的render方法，将返回的 React 标签渲染成真实的 DOM。\",\"import React, { Component } from \\\"react\\\"; // 也可以直接继承Component class App extends React.Component { render() { return <h1>hello react</h1>; } } \",\"类中通过React.createRef方法获取 DOM 元素，跟函数中的 ref 一样。\",\"class App extends { h1Ref = React.createRef() render () { return <h1 ref={h1Ref}>Hello React</h1> } } \",\"类中构造器可有可无，但是一旦写了构造器就必须接收props并调用super(props)进行传递，否则会出现this.props未定义。\",\"class App extends { constructor (props) { super(props) } } \",\"注意\",\"类中方法是直接赋值给事件回调，调用时并不是通过实例调用而是直接调用， 所以会导致this指向错误的问题。\",\"解决方法： - 使用箭头函数。\",\"使用bind绑定this。\"]},\"97\":{\"h\":\"state\",\"t\":[\"在 React 中，当组件渲染完成后，再去修改组件中的数据，不会触发组件重新渲染。 React 会监听state对象，当状态更新时会自动触发组件重新渲染。\",\"函数组件\",\"使用钩子函数useState来创建 state，接收一个初始值作用参数并返回一个数组。\",\"第一个元素为当前状态，直接修改不会触发组件重新渲染。\",\"第二个元素是一个函数，用来修改当前状态的值(修改的是组件下次渲染的 state 值。)，会触发组件重新渲染，命名通常以set为前缀。\",\"import { useState } from \\\"react\\\"; const [count, setCount] = useState(3); setCount(count++); \",\"当 state 为一个对象时，监听的是一个引用地址，需要使用一个新的对象去替换。\",\"const [obj, setObj] = useState({ name: \\\"Hello react\\\", author: \\\"React\\\" }); // Error 引用地址未改变不会触发更新 // obj.name = 'React' // setObj(obj) // Error 会丢失author属性 // setObj({ name: 'Hello React' }) setObj({ ...obj, name: \\\"Hello React\\\" }); \",\"注意\",\"当使用一个新对象去覆盖时应当对之前的数据进行拷贝，然后单独设置某个属性，避免数据丢失\",\"setState 是异步的，修改过后并不会立刻渲染。当需要使用 state 之前的值进行计算时，可能会出现值计算错误的问题， 此时传递一个回调函数，将上一次的值作为参数可以完美解决。\",\"// Error 频繁调研此函数时，count会一直使用原来的值，导致计算错误 // function handleCount () { // setTimeout(() => setCount(count ++), 1000) // } function handleCount() { setTimeout(() => { setCount((preCount) => preCount++); }, 1000); } \",\"类组件\",\"类组件中 state 统一存储到实例对象的 state 属性中。通过this.setState方法进行修改，该过程是一个对象合并的过程而不是覆盖。\",\"注意\",\"在调用空的 setState 也会重新渲染组件，继承 React 下的 PureComponent 可以解决这个问题。\",\"class App extends Component { state = {}; changeState = () => { // 1). 对象形式state，cb 在状态更新完毕，render后才被调用。 setState({}, [cb]) // 2). 函数式state，依赖原状态 setState((state, props) => {}, [cb]) } } \"]},\"98\":{\"h\":\"props\",\"t\":[\"只读属性不能修改。\",\"函数数组\",\"在函数组件中，父子通信(标签属性传递)会被函数的参数props接收，包含了传递的所有参数。\",\"function Com(props) { return <h1>{props.title}</h1>; } root.render(<Com title=\\\"Hello React\\\" />); \",\"当组件中的参数名与传递的属性名相同时可以使用批量传递。\",\"const obj = { title: \\\"Hello React\\\", }; root.render(<Com {...obj} />); \",\"类组件\",\"类中的props是挂载到实例对象上的，可以直接访问。\",\"class App extends Component { const {} = this.props render () {} } \",\"兄弟组件通信(消息订阅-发布机制/PubSubJS)\",\"订阅消息 PubSub.subscribe(eventName, (msgName, data) => {})\",\"发布消息 PubSub.publish(eventName, data)\"]},\"99\":{\"h\":\"useRef\",\"t\":[\"获取 DOM 的钩子函数，返回一个普通 JS 对象。通过 ref 属性进行容器绑定，React 会自动将 DOM 对象设置到current属性上。\",\"import { useRef } from \\\"react\\\"; const h1Ref = useRef(); // { current: undefined } const dom = <h1 ref={h1Ref}>Hello React</h1>; \",\"useRef 返回的是一个普通对象，所以可以使用一个 JS 对象去代替 uesRef。\",\"// 也可以使用一个空的对象 const h1Ref = { current: undefined }; \",\"区别\",\"使用普通对象创建的，在组件每次渲染的时候都会创建一个新的对象。 useRef 创建的，可以确保每次渲染获取的都是同一个对象。\",\"通过回调函数的形式获取 DOM，节点或作为参数进行传递。\",\"如果回调函数是以内联形式定义的，在更新过程中会执行两次。 第一次会传入 null，第二次才会出入 dom 元素。这是因为在每次渲染时都会创建一个新的回调函数，清空旧的 ref。\",\"const dom = <h1 ref={(c) => (this.h1Ref = c)}>Hello React</h1>; \"]},\"100\":{\"h\":\"受控和非受控组件\",\"t\":[\"受控：可以使用 React 操控的数据。当输入表单项改变时，直接维护到状态中。使用onChange事件结合事件对象e.target。\",\"非受控：不受 React 控制的组件，需要使用原生 JS 进行操作。\"]},\"101\":{\"h\":\"插槽\",\"t\":[\"通过props下的children属性。不能进行 props 传递数据。\",\"通过renderProps属性绑定一个函数并返回一个组件，然后调用render方法进行渲染。可以进行 props 传递数据。\",\"<App render={(val) => <h1>{val}</h1>} />; this.props.render(\\\"Hello React\\\"); \"]},\"102\":{\"h\":\"createPortal\",\"t\":[\"传送门，将 DOM 节点渲染到指定位置。\",\"import ReactDOM from \\\"react-dom\\\"; const App = () => { return ReactDOM.createPortal( <h1>Hello React</h1>, document.querySelector(\\\"body\\\") ); }; \"]},\"103\":{\"h\":\"Css module\",\"t\":[\"解决类名冲突问题。使用过后，类名会自动计算生成一个唯一的类名。\",\"样式文件命名应遵循name.module.css。\",\"import classes from \\\"name.module.css\\\"; function App() { return <h1 className={calsses.h1}>Hello React</h1>; } \"]},\"104\":{\"h\":\"fragment\",\"t\":[\"专门用作父容器的组件，不会进行标签渲染。也可以使用标签<></>，空标签不能绑定 key 属性。\",\"import { fragment } from \\\"react\\\"; function App() { return ( <fragment> <h1>Hello React</h1> </fragment> ); } \"]},\"105\":{\"h\":\"Context\",\"t\":[\"向子孙组件传递数据，就不需要使用 props 逐层传递了。\",\"通过 createContext 方法创建 context，使用 context 下的 Consumer(消费者) 组件以函数的形式创建元素，并将数据作为参数进行传递。\",\"import React from \\\"react\\\"; const Context = React.createContext(\\\"Hello Rect\\\"); function App() { return ( <Context.Consumer> {(ctx) => { return <h1>{ctx}</h1>; }} </Context.Consumer> ); } \",\"通过钩子函数useContext使用 context，需要接收一个 context。\",\"import { useContext } from \\\"react\\\"; const ctx = useContext(context); \",\"使用 context 下的provider组件上的 value 属性可以指定 context 中的数据。就近原则。\",\"function App2() { return ( <Context.Provider value={\\\"Hello React\\\"}> <App /> </Context.Provider> ); } \"]},\"106\":{\"h\":\"副作用&setState 执行流程\",\"t\":[\"将修改 state 的逻辑直接写在组件中，就会使组件不断重复渲染，导致栈溢出Too many re-renders。\",\"React.StrictMode标签开启严格模式，会自动的检查组件中有副作用的代码。 在开发模式下，主动重复调用一些函数(组件函数体、setState、useState、useMemo、useReducer)使用副作用显现。\",\"执行 setState 会调用底层的 dispatchSetDate 方法，该方法会判断当前组件处于什么阶段。\",\"渲染阶段：不会检查 state 的状态是否相同，而是直接添加到渲染队列中等待渲染。\",\"非渲染阶段：会检查 state 的值是否相同，只有状态不相同时才会从新渲染组件。 在某些情况下(第一次相同时)会继续渲染当前组件，不会触发子组件的重新渲染，并且这次渲染不会进行任何操作。\",\"import { useState } from \\\"react\\\"; const [title, setTitle] = useState(\\\"Hello React\\\"); function App() { setTitle(\\\"Hello React --update\\\"); // Error Too many re-renders return <h1>{title}</h1>; } \"]},\"107\":{\"h\":\"useEffect\",\"t\":[\"模拟类组件中的生命钩子，接收一个回调和一个数组，在组件渲染完成后执行。 数组中指定 effect 的依赖数据，当数据方式改变时触发 effect 执行。 如果是一个空数组，effect 则在组件渲染完成后执行一次。\",\"/** * 当第二个参数未传递时，相对于ComponentDidMount、componentDidUpdate钩子 * 传入的是一个空数组，相当于componentDidMount 钩子。 * 如果传入的是当前状态，则对该状态进行监听，相当于componentDidUpdate 钩子。 * 卸载组件时相当于componentWillUnmount 钩子，返回一个函数。 * */ import { useEffect } from \\\"React\\\"; function App() { useEffect(() => { setTitle(\\\"Hello React --update\\\"); }, []); } \",\"在 effect 回调函数中可以指定一个函数作为返回值，这个函数(清理函数)会在下次 effect 执行前调用。\",\"useEffect(() => { const timer = setTimeout(() => { setTitle(\\\"Hello React --update\\\"); }, 1000); return () => clearTimeout(timer); }, []); \"]},\"108\":{\"h\":\"其他 Effect\",\"t\":[\"useInsertionEffect(18)\",\"在 DOM 改变前调用，可动态的插入标签等...\",\"useLayoutEffect\",\"在 DOM 改变后调用，可修改样式布局。在使用useEffect修改样式时会出现闪烁的情况，可使用useLayoutEffect进行替换。\",\"执行先后顺序\",\"useInsertionEffect => useLayoutEffect => useEffect\"]},\"109\":{\"h\":\"useReducer\",\"t\":[\"是一个钩子函数，将相关的 state 操作整合到一起，接收一个回调和一个 state 初始值，返回一个数组。回调返回的值就是 state 的值。 第一个元素是 state 的值，第二个元素是修改 state 的派发器，接收一个 action 指令，根据指令执行相应的操作。\",\"import { useReducer } from 'react' const [count, countDispatch] = useReducer((state, action) => { switch (action) { case: 'add' return state ++ case: 'sub' return state -- default: return state } }, 0) countDispatch('add') \"]},\"110\":{\"h\":\"memo\",\"t\":[\"高阶组件，接收一个组件作为参数，并返回一个包装过后具有缓存功能的新组件。 只有当 props 发生改变时才会触发组件的重新渲染，否则返回缓存中的内容。\",\"import React from \\\"react\\\"; function App() { return <h1>Hello React</h1>; } export default React.memo(App); \"]},\"111\":{\"h\":\"useMemo\",\"t\":[\"对一个函数进行缓存，当依赖项发生改变时才重新计算。接收一个回调和一个依赖数组，类似 memo。\",\"import { useMemo } from 'react' function Count ({ a, b }) { return <h1>{a + b}</h1></h1> } const count = useMemo(() => { return <Count a={4} b={18} /> }, [a, b]) function App () { return count } \",\"React.memo 和 useMemo 的区别\",\"前者是在组件自身中定义，后者是父组件中定义\"]},\"112\":{\"h\":\"useCallback\",\"t\":[\"创建 React 中的回调函数，不会在组件重新渲染时重新创建。接收一个回调和一个依赖数组。\",\"当数量依赖项发送变化才会重新创建，如果没有指定第二个参数，组件每次渲染时回调都会重新创建。\",\"useCallback 只会在初始化时创建一次，访问的变量也是初始化时的状态，所有使用到变量一定要在依赖数组中声明才能获取到最新的状态。\",\"import { useCallback } from \\\"react\\\"; const fn = useCallback(() => {}, []); \"]},\"113\":{\"h\":\"useImperativeHanle\",\"t\":[\"直接在组件上挂载ref是获取不到的，需要使用React.forwardRef指定返回的 DOM 元素。\",\"这种控制权就在自身而在其他组件中，不利于维护。\",\"// parent.jsx function App () { const cRef = useRef() <Children ref={cRef} /> } /** * children.jsx * 接收一个 props 和 一个 ref */ React.forwardRef(props, ref) { return <h1 ref={ref}>Hello React</h1> } \",\"使用useImperativeHanle配合React.forwardRef使用，向外部暴露操作子组件的方法。控制权在自己，更利于维护。\",\"React.forwardRef(props, ref) { const [title, setTitle] = useState('Hello React') // 接收一个 ref 和一个回调，回调返回的就是父组件中定义的ref useImperativeHanle(ref, () => { return { setTitle } }) return <h1>{title}</h1> } \"]},\"114\":{\"h\":\"useDeferredValue\",\"t\":[\"接收一个 state 值作为参数，为该 state 创建一个延长值。 当设置延迟值后，每次 state 改变都会触发两次重新渲染，第一次是旧值，第二次是新值会慢一步更新。\",\"function App() { const [count, setCount] = useState(0); const deferredValue = useDeferredValue(count); } \"]},\"115\":{\"h\":\"useTransition\",\"t\":[\"和useDeferredValue类似。\",\"const [isPending, startTransition] = useTransition(); startTransition(() => {}); \"]},\"116\":{\"h\":\"自定义 hook\",\"t\":[\"就是一个普通函数，命名必须使用use前缀，变量和方法必须返回出去。\",\"// useData.jsx const [data, setData] = useState([]); export default () => { return { data, setData, }; }; // 使用自定义 hook import useData from \\\"useData\\\"; const { data, setData } = useData(); \"]},\"117\":{\"h\":\"Redux\",\"t\":[\"Redux 是 JavaScript 应用的状态容器，提供可预测的状态管理仓库，用于组件间的数据共享。\"]},\"118\":{\"h\":\"Redux Toolkit(RTX)\",\"t\":[\"官方推荐的编写 Redux 逻辑的方法。RTX 提供了许多功能，使编写 Redux 更加容易。\",\"安装。在 react 使用 redux 还是 RTX，react-redux都是比不可少的。\",\"npm install react-reduxt @reduxjs/toolkit -S \",\"使用createSlic创建一个 reducer 切片，接收一个配置对象。\",\"import { createSlice } from \\\"@reduxjs/toolkit\\\"; const countReducer = createSlice({ name: \\\"count\\\", // 指定一个命名空间 initialState: { // 初始化 state 的值 count: 0, }, reducers: { // 定义操作 state 的方法 addCount: (state, action) => { /** * state 当前 state 的值。是一个代理对象，可以直接修改 * action 动作对象。{ type: name/methodName, payload: 传递的参数 } */ state.count++; }, }, }); // countReducer.actions存储的是 action 创建器，调用会自动创建 action 对象。 export const { addCount } = countReducer.actions; \",\"使用configureStore创建一个 store 对象并返回。\",\"const store = configureStore({ reducer: { // 配置各切片对象的 reducer countStore: countReducer.reducer, }, }); export default store; \",\"在 React 中使用。通过provider组件包裹 App 组件，并将 stroe 作为 props 传入。\",\"import store from \\\"store\\\"; import { Provider } from \\\"react-redux\\\"; <Provider store={store}> <App /> </Provider>; \",\"在组件中使用 store。使用useSelector钩子函数可以获取 store 中的数据，useDispatch获取派发器对象。\",\"import { useSelector, useDispatch } from \\\"react-redux\\\"; // 传递一个回调，store 作为参数，返回需要的获取 reducer 切片 const countStore = useSelector((store) => store.countStore); const dispatch = useDispatch(); \"]},\"119\":{\"h\":\"ReactRouter\",\"t\":[\"安装 React 路由包。\",\"<!-- 版本5 --> npm i react-router-dom@5 \",\"将路由挂载到 React 上。\",\"// index.js import { BrowserRouter as Rouer } from \\\"react-router-dom\\\"; root.render( <Router> <App /> </Router> ); \",\"对路由进行映射。\",\"import { Router } from \\\"react-router-dom\\\"; /** * path 路由地址 * component 渲染的组件 * exact 是否严格匹配 */ <Router path=\\\"/\\\" component={component}></Router>; // 同上 { /* <Router path='/'> <Component /> </Router> */ } \",\"通过 render 的形式对路由进行映射。传递一个回调，返回一个渲染组建，路由参数作为回调的参数。需手动传入路由参数。\",\"/** * 也可以通过 children 指定 * 1. 回调形式：路径无论是否匹配都会挂载，尽量不使用 * 2. 组建形式 children={<Home />} */ <Router path=\\\"/\\\" render={(routeProps) => <Home {...routeProps} />} /> \"]},\"120\":{\"h\":\"Link&NavLink\",\"t\":[\"进行路由链接创建，通过to属性指定路由。\",\"NavLink 只是比 Link 多了激活后的样式的指定。\",\"import { Link, NavLink } from 'react-router-dom' return ( <Link to=\\\"/\\\">首页</Link> // 还可以使用activeStyle直接指定内联样式 <NavLink to=\\\"/about\\\" activeClassName={active}>关于</NavLink> ) \",\"注意\",\"使用 a 标签创建的路由链接会自动向服务器发送请求重新加载页面\"]},\"121\":{\"h\":\"路由模式\",\"t\":[\"和 Vue 的路由模式一样。\",\"HashRouter\",\"BrowserRouter\",\"进行路由跳转时，并没有发送服务器请求。当刷新页面时，会从新向服务器发送请求(未经过 React Router)，这会导致请求的资源地址不存在，返回 404 的问题。\",\"解决方法：\",\"使用 HashRouter\",\"修改服务器配置，将所有的请求都转发到index.html\"]},\"122\":{\"h\":\"路由组件参数\",\"t\":[\"通过路由渲染的组件会自动传入props中。\",\"match 匹配信息\",\"isExact 是否严格匹配\",\"params 路由参数\",\"path 设置的路由地址\",\"url 匹配的地址\",\"location 地址信息\",\"hash hash 值\",\"search 查询字符串\",\"history 控制路由跳转\",\"push 追加一个路由，回退返回上一个路由\",\"replace 替换当前路由，回退返回上一个之前的路由\",\"const App = (props) => { this.props.history.push({ pathname: \\\"/\\\", }); }; \"]},\"123\":{\"h\":\"路由参数钩子\",\"t\":[\"useRouteMatch\",\"useLocation\",\"useHistory\",\"useParams\"]},\"124\":{\"h\":\"Prompt\",\"t\":[\"路由离开时弹出确认操作。\",\"import { Prompt } from \\\"react-router-dom\\\"; // 当 when 为 true 的时候才会弹出确认 <Prompt when={true} message=\\\"是否离开\\\" />; \"]},\"125\":{\"h\":\"路由重定向\",\"t\":[\"import { Redirect } from \\\"react-router-dom\\\"; /** * 默认使用 replace 的方式 * to 重定向路由地址 * from 访问的路由 */ <Redirect psuh to=\\\"/about\\\" />; \"]},\"126\":{\"h\":\"路由懒加载\",\"t\":[\"匹配到该路由了才会去加载该组件。\",\"// 1. 通过react的lazy函数配合import函数，实现路由分包。 const component = lazy(() => import(component path)) // 2. 通过react Suspense组件fallback属性指定路由加载完成之前显示的页面（loading） <Suspense fallback={component}> <Switch> <Route></Route> </Switch> </Suspense> \"]},\"127\":{\"h\":\"ReactRouter6\",\"t\":[\"V6 中默认开始严格匹配。\"]},\"128\":{\"h\":\"Routes\",\"t\":[\"V6 中新增的组件，用于 Route 的容器，Routes 中的 Route 只会有一个匹配结果。\",\"路由组件不再是通过 component、render、children 指定，而是通过element指定。\",\"import { Routes, Route } from \\\"react-router-dom\\\"; <Routes> <Route path=\\\"/\\\" element={<Home />}></Route> <Route path=\\\"/about\\\" element={<About />}></Route> </Routes>; \"]},\"129\":{\"h\":\"路由参数钩子的变化\",\"t\":[\"useMatch\",\"检查当前路由是否与某个路由匹配，并返回匹配信息，否则返回 null。\",\"const match = useMatch(\\\"/about/:id\\\"); \",\"useNavigate\",\"获取一个用于路由跳转的函数，替代了useHistory。\",\"// 路由参数信息可以通过第二个参数进行配置 const nav = useNavigate(); nav(\\\"/about\\\", {}); \"]},\"130\":{\"h\":\"路由嵌套\",\"t\":[\"可以在组件内部继续使用路由映射，但不是很好。可以使用Outlet组件进行嵌套路由站位。\",\"import { Outlet } from \\\"react-router-dom\\\"; <Routes> <Route path=\\\"/about\\\" element={<About />}> <Route path=\\\"react\\\" element={<React />}></Route> </Route> </Routes>; // react.jxs function React() { return ( <div> <h1>Hello React</h1> <Outlet /> </div> ); } \"]},\"131\":{\"h\":\"Navigate\",\"t\":[\"跳转到指定路由，默认使用 push 跳转，与Redirect类似。\",\"import { Navigate } from \\\"react-router-dom\\\"; <Navigate to=\\\"/about\\\" replace />; \"]},\"132\":{\"h\":\"NavLink\",\"t\":[\"行内样式不再使用activeStyle，而是通过style指定一个回调函数，接收一个是否激活的对象。设置类名同理。\",\"<NavLink to='/about' style={({ isActive }) => isActive && { color: 'red' }}>链接<NavLink> \"]},\"133\":{\"h\":\"服务器代理\",\"t\":[\"方式一 在 package.json 中配置 \\\"proxy\\\": \\\"targer url\\\"。请求的地址还是当前服务器的地址(可省略host)。\",\"方式二\",\"在根目录下新建 setupProxy.js 文件，react 会自动读取配置。\",\"引入内置模块 http-proxy-middleware。\",\"暴露一个函数，接收一个服务器对象(app)。\",\"使用 app.use 中间件调用 proxy 方法，可配置多个。\",\" proxy(prefix, { target: '', // 目标服务器 changeOrigin: true, // 为true时，服务端拿到的主机地址是自己的，否则是前端的。 pathRewrite: {'^prefix': ''} // 重写路径 }) // setupProxy.js const proxy = require('http-proxy-middleware') module.exports = app => { app.use( proxy('/api', { target: 'http://localhost:8888', changeOrigin: true, pathRewrite: { '^/api': '' } }) ) } \"]},\"134\":{\"h\":\"TypeScript\",\"t\":[\"为 javaScript 添加了强大的类型校验。\"]},\"135\":{\"h\":\"安装\",\"t\":[\"npm i -g typescript \",\"浏览器不支持 TS 的解析，需要将其转为 JS。\",\"tsc [file path] \"]},\"136\":{\"h\":\"ts-node\",\"t\":[\"直接在 node 中运行 TS 文件。内部将其转换为 JS 文件。\",\"npm i -g ts-node ts-node [file path] \"]},\"137\":{\"h\":\"类型声明\",\"t\":[\"是一种为变量、参数或函数返回值添加的一种类型约束。 指定类型后，TS 编译器(静态分析)会自动检测值是否符合类型声明。\",\"const age: string age = '23' const name = 'dw'; function (name: string, age: number): string { ... } \"]},\"138\":{\"h\":\"类型推断\",\"t\":[\"当变量声明和赋值同时进行 TS 编译器会自动判断数据类型，此时可以省略类型声明。\",\" // 推断出为number类型，后面只能赋值为number类型的数据 const num = 10 // 推断出为string类型，后面只能赋值为string类型的数据 const str = \\\"dw\\\" // any 类型 const a \"]},\"139\":{\"h\":\"类型\",\"t\":[\"类型\",\"例子\",\"描述\",\"number\",\"const a: number\",\"任意数字，可使用进制表示\",\"string\",\"const a: string\",\"任意字符串\",\"boolean\",\"const a: boolean\",\"true/false\",\"字面量\",\"const a: 10\",\"设置字面量后只能是字面量的值\",\"any\",\"let a: any\",\"任意类型，设置 any 后相当于关闭了 TS 类型检查\",\"unknown\",\"const a: unknown\",\"未知类型，安全的 any 类型\",\"void\",\"function(): void{}\",\"无返回值 undefined/null\",\"never\",\"throw new Error\",\"不能是任何值，用于错误抛出\",\"object\",\"const a: { name: string }\",\"任意 js 对象。不建议使用 object，一般用于限制对象中的属性\",\"array\",\"const a: number[] / Array<number>\",\"任意 js 数组\",\"function\",\"const a: (arg1: string) => void\",\"定义函数类型，类型就是该函数本身\",\"tuple\",\"const a: [string, number]\",\"元组，TS 新增类型，固定长度的数组\",\"enum\",\"enum name { A, B }/ enum name { A = 1, B }\",\"枚举，TS 中新增类型。值默认从 0 开始依次递增，可根据特定的名称得到对应的枚举值\",\"提示\",\"null、undefined 是所有类型的子类型\",\"any 和 unknown 的区别\",\"使用 any 定义的类型赋值时不会进行类型检查，会导致其他变量类型检查失效。 unknown 赋值时会进行类型检查，可以判断类型后进行赋值。\"]},\"140\":{\"h\":\"联合类型\",\"t\":[\"使用 | 可以连接多个类型，可以取其中一种类型。\",\"使用 & 连接的类型必须同时满足。\",\"// ｜ const name: 'js' | 'ts' const name: string | boolean // & const obj: { name: string } & { author: string } \"]},\"141\":{\"h\":\"类型断言\",\"t\":[\"告诉解析器我是一个确切的类型。以便使用该类型下的方法或属性。\",\"const name: unknown // 方式一 name as string // 方式二 <string>name \"]},\"142\":{\"h\":\"可选属性\",\"t\":[\"可有可无的属性，使用 ? 进行可选配置。\",\"提示\",\"使用[propName: string]: any可以定义任意属性\",\"const obj = { name: string, author?: string } const obj2 = { name: string, [propName: string]: any } \"]},\"143\":{\"h\":\"类型别名\",\"t\":[\"可以简化联合类型。\",\"type name = string | number | boolean const name: name \"]},\"144\":{\"h\":\"编译选项\"},\"145\":{\"h\":\"自动编译\",\"t\":[\"监听单个文件变化后自动进行编译。\",\"tsc [file path] -w \"]},\"146\":{\"h\":\"编译配置文件\",\"t\":[\"配置文件(tsconfig.js)生成。\",\"tsc --init \",\"配置文件生成后可对整个项目下的 TS 文件进行监听编译。\",\"tsc -w \",\"提示\",\"**表示任意目录，*表示任意文件\"]},\"147\":{\"h\":\"include\",\"t\":[\"指定需要编译的 TS 文件路径。默认值：[\\\"**/*\\\"]。\",\"\\\"include\\\": [ \\\"./src/**/*\\\" ] \"]},\"148\":{\"h\":\"exclude\",\"t\":[\"排除不需要编译的 TS 文件。默认值：[\\\"node_modules\\\", \\\"bower_components\\\", \\\"jspm_packages\\\"]。\",\"\\\"exclude\\\": [ \\\"./dist/**/*\\\" ] \"]},\"149\":{\"h\":\"extends\",\"t\":[\"设置继承的配置文件。\",\"\\\"extends\\\": \\\"./configs/base\\\" \"]},\"150\":{\"h\":\"files\",\"t\":[\"指定编译的文件列表。适合少量文件。\",\"\\\"files\\\": [ \\\"core.ts\\\", \\\"sys.ts\\\", \\\"types.ts\\\", \\\"...\\\" ] \"]},\"151\":{\"h\":\"compilerOptions\",\"t\":[\"小提示\",\"通过配置错误的值可以查看可配置的选项\",\"编译器的选项。\",\"target：指定 TS 被编译为 ES 的版本。\",\"moudel：指定需要使用的模块规范。\",\"lib：指定代码运行时所包含的库(宿主环境)，一般情况下不用动。\",\"outDir：指定编译后文件所在目录。\",\"outDir: './dir' \",\"outFile：将代码合并为一个文件。\",\"outFile: './dir/app.js' \",\"allowJs：是否对 js 进行编译，默认false。\",\"checkJs：是否检查 js 代码语法规范。\",\"removeComments：是否移除注释。\",\"noEmit & noEmitOnError：是否生成编译后对文件。后者是存在语法错误时不生成编译后对文件。\",\"strict：是否开启严格检查。开启后以下4个都为 true。\",\"alwaysStrict：编译后的文件是否使用严格模式。\",\"noImplicitAny：是否允许隐式的 any 类型。\",\"noImplicityThis：是否允许不明确类型的 this。\",\"strictNullChecks：是否严格检查空值。\"]},\"152\":{\"h\":\"使用 webpack 打包 TS\",\"t\":[\"ts-loader配置\",\"npm install --save-dev typescript ts-loader webpack webpack-cli \",\"// webpack.config.js const path = require('path') module.exports = { entry: './src/index.ts', output: { path: path.resolve(__dirname, 'dist'), filename: 'bundle.js' }, module: { rules: [ { test: /\\\\.ts$/, use: 'ts-loader', exclude: /node_modules/ } ] }, resolve: { // 设置可以作为模块导入的文件 extendsions: ['.ts', '.js'] } } \"]},\"153\":{\"h\":\"类\",\"t\":[\"语法与 JavaScript 语法一样，只是多了类型注解。\",\"类的三大特点：封装、继承、多态。\",\"class Animal { // 成员 name: string // 构造函数 constructor(name: string) { this.name = name } // 方法 say(): string { return this.name + '我可以发出声音' } } \"]},\"154\":{\"h\":\"修饰符\",\"t\":[\"类中成员(属性、构造函数、方法)的可访问性。\",\"修饰符\",\"描述\",\"example\",\"public\",\"公共的。默认修饰符，任何位置都可以访问。\",\"public age: number\",\"private\",\"私有的。只能在类的内部进行访问。\",\"private age: number\",\"protected\",\"受保护的。只能在当前类和子类中进行访问。\",\"protected age: number\",\"readonly\",\"只读。修饰后不能在外部随意修改,只能在构造函数中修改。\",\"readonly age: number\",\"static\",\"静态成员。使用时必须通过类名进行调用。\",\"Animal.age\",\"提示\",\"如果构造函数形参使用修饰符后，那么类中会自动添加该属性成员。\",\"class Person { constructor(readonly name: string) {} } \"]},\"155\":{\"h\":\"继承\",\"t\":[\"使用关键字extends，继承后子类会拥有父类的所有属性和方法。 继承的类又称子类、派生类，被继承的又称父类、基类、超类。\",\"如果子类中存在与父类同名的方法，子类会覆盖掉父类中的方法，又称方法重写。\",\"提示\",\"如果子类中重写了类的构造函数，必须通过 super 调用父类中的构造器。\",\"super 表示当前类的父类，可用通过 super 调用父类中的方法和属性super.[fn | propName]。\",\"... class Pig extends Animal { desc: string constructor (name: string, desc: string) { // 调用父类构造器 super(name) this.desc = desc } // 重写父类的方法 say(): string { return `${this.name}我属性最好` } } \"]},\"156\":{\"h\":\"多态\",\"t\":[\"父类型的引用指向子类型的对象，不同类型的对象针对相同方法产生的不同行为。\",\"... const p: Animal = new Pig('🐷', '我属相最好') // 调用各自的方法 p.say() \"]},\"157\":{\"h\":\"抽象类\",\"t\":[\"使用关键字abstract定义。做为其他派生类的基类使用，让子类实现实例化和抽象方法。\",\"抽象类不能实例化，必须由子类继承实现。\",\"抽象方法只能存在于抽象类且不能写具体实现，必须由子类重写。\",\"astract class Animal { abstract say () } class dog extends Animal { say () { console.log('重写抽象方法') } } \"]},\"158\":{\"h\":\"存取器\",\"t\":[\"TS 支持通过 setters 和 getters 来截取对对象成员的访问和修改。能有效的控制对象成员的访问。\",\"class Person { firstName: string lastName: string constructor(fistName: string, lastName: string) { this.name = firstName this.lastName = lastName } get fullName() { return `${this.firstName}-${this.lastName}` } set fullName(v) { this.firstName = v.firstName this.lastName = v.lastName } } const p = new Person('d', 'w') p.fullName p.fullName = { firstName: \\\"d\\\", lastName: \\\"gg\\\" } \"]},\"159\":{\"h\":\"接口\",\"t\":[\"使用关键字interface。接口是对象的状态（属性）和行为（方法）的一种抽象（描述）。 是一种类型、规范、规则、约束，接口只定义对象的结构，不考虑具体的值，实现接口时必须与接口的数据结构一一对应。\",\"接口中定义的方法都是抽象方法，必须在实现接口时具体实现。\",\"interface IPerson { name: string, getName(): string } \"]},\"160\":{\"h\":\"对象实现接口\",\"t\":[\"const person: IPerson = { name: 'dw', getName () { return this.name } } \"]},\"161\":{\"h\":\"类实现接口\",\"t\":[\"可以通过实现接口来定义类的数据结构。接口和接口之间叫继承（关键字extends），类和接口之间叫实现（关键字implements）。\",\"interface ICar { name: string, pay: number, buy(): string } class Car implements ICar { name: string pay: number constructor(name: string, pay: number) { this.name = name this.pay = pay } buy() { return `购买${this.name}你需要支付${this.pay}元` } } \",\"类实现多个接口。\",\"interface ICarInfo { showInfo(): string } // 实现多接口 class Car implements ICar, ICarInfo { ... showInfo () { return 'carInfo' } } \",\"接口继承多个接口。\",\"interface IAllInfo extends ICar, ICarInfo {} \"]},\"162\":{\"h\":\"函数类型接口\",\"t\":[\"接口约束函数需要给接口定义一个调用签名（只有参数列表和返回值类型的函数定义）。\",\"// 定义函数类型的接口 interface IFun { (name: string, id: number): string; } // 实现函数类型的接口 const fun: IFun = (name: string, id: number) => `${id}_${name}`; \"]},\"163\":{\"h\":\"函数重载\",\"t\":[\"函数名相同，参数的个数、类型不同。可以更友好的提示错误信息。\",\"function add(x: string, y: string) {} function add(x: number, y: number) {} \"]},\"164\":{\"h\":\"泛型\",\"t\":[\"在定义函数、接口、类时不能确定使用的数据类型，可以使用一个变量代替数据类型，使用时以传入的类型为准。\",\"// 声明泛型 <propName> function test<T> (name: T): T { return name } test<string>('TS') \",\"使用多个泛型参数。\",\"function test<T1, T2> (name: T1, age: T2): T1 { return `${name} ${age}` } test<string, number>('TS', 8) \",\"泛型接口。 在定义接口时，为接口中的属性或方法定义泛型类型。\",\"interface IExm<T> { data: Arrary<T>, add: (data: T) => T } \",\"泛型类。\",\"class Animal<T> { name: T getName (firstName: T, lastName: T) { return `${firstName}${lastName}` } } const dog: Animal<string> = new Animal<string>() \",\"泛型通过继承接口可对属性进行约束。 获取泛型参数某个属性时，会因为泛型不确定是否有这个属性而报错。\",\"interface Lengthwise { length: number; } // 指定泛型约束 function fn<T extends Lengthwise>(x: T) { console.log(x.length) } \"]},\"165\":{\"h\":\"算法\"},\"166\":{\"h\":\"介绍下深度优先遍历和广度优先遍历，如何实现？\",\"t\":[\"深度优先: 首先访问顶点，然后依次从未被访问的邻节点出发进行访问，直到所有与顶点相通的节点被访问到。\",\"const dfs = (node, nodeList = []) => { if (node === null) return nodeList.push(node) for (let i = 0; i < node.children.length; i++) { dfs(node.children[i], nodeList) } return nodeList } \",\"广度优先: 从顶点出发，依次访问顶点未被访问的邻节点，然后从邻节点出发依次访问它们的邻节点。\",\"const bfs = (node) => { if (node === null) return const nodeList = [] const stack = [] stack.push(node) while (stack.length) { const item = stack.shift() const children = item.children nodeList.push(item) for (let i = 0; i < children.length; i++) { stack.push(children[i]) } } return nodeList } \"]},\"167\":{\"h\":\"代码题\"},\"168\":{\"h\":\"['1', '2', '3'].map(parseInt) what & why ?\",\"t\":[\"['1', '2', '3'].map(parseInt) // => [1, NaN, NaN] /** * parseInt 解析字符串为指定基数(进制)的整数。parseInt(string, radix) * radix 为0时，且 string 参数不以“0x”和“0”开头时，按照10为基数处理。 * 当 radix 为2、3时无法被解析，返回 NaN。 */ \"]},\"169\":{\"h\":\"什么是防抖和节流？有什么区别？如何实现？\",\"t\":[\"防抖：触发高频操作后，只执行最后一次。\",\"function debounce (fn) { let timer = null return function () { clearTimeout(timer) setTimeout(() => { fn.apply(this, arguments) // 绑定上下文环境，直接调用 this 将指向 window }, 800) } } \",\"节流：在 N 秒内只执行一次，稀释函数执行的频率。\",\"function throttle (fn) { let canRun = true return function () { if (!canRun) return canRun = false setTimeout(() => { canRun = true fn.apply(this, arguments) }, 800) } } \"]},\"170\":{\"h\":\"已知数组实现扁平化并去重\",\"t\":[\"// 已知 const arr = [ [1, 2, 2], [3, 4, 5, 5], [6, 7, 8, 9, [11, 12, [12, 13, [14] ] ] ], 10] const float = (arr, newArr = []) => { arr.forEach(item => { Array.isArray(item) ? float(item, newArr) : newArr.push(item) }) return [...new Set(newArr)] } // 技巧 Array.from(new Set(arr.toString().split(',').sort((a, b) => a - b))) Array.from(new Set(arr.flat(Infinity).sort((a, b) => a - b))) \"]},\"171\":{\"h\":\"实现一个 new\",\"t\":[\"function _new(fn, ...arg) { const obj = Object.create(fn.prototype) const res = fn.apply(obj, arg) // 返回 null 和 undefined 不处理，依然返回obj return res instanceof Object ? res : obj } \"]},\"172\":{\"h\":\"Css\"},\"173\":{\"h\":\"Css选择器及优先级\",\"t\":[\"!important > 行内样式 > ID选择器 > 类/伪类/属性选择器 > 标签/伪元素选择器 > 关系选择器\"]},\"174\":{\"h\":\"BFC\",\"t\":[\"BFC 全称为块级格式化上下文 (Block Formatting Context) ，它决定了元素如何进行定位以及与其他元素的关系和相互作用。BFC 提供了一个环境，HTML元素在这个环境中按照规则进行布局，一个环境中的元素不会影响到其它环境中的布局。可以说BFC就是一个作用范围、独立的容器，并且这个容器的布局与这个容器外的布局互不影响。\"]},\"175\":{\"h\":\"触发BFC的条件\",\"t\":[\"浮动（float）\",\"定位（position）\",\"弹性盒模型（flex）\",\"行内块元素（inline-block）\",\"overflow\"]},\"176\":{\"h\":\"BFC可解决的问题\",\"t\":[\"解决外边距合并（overflow）\",\"清除浮动\"]},\"177\":{\"h\":\"盒模型 box-sizing\",\"t\":[\"普通盒模型：content-box。内容实际大小，随边距、边框的值增加而增大。\",\"怪异盒模型：border-box。内容 + padding + border。\"]},\"178\":{\"h\":\"css实现三角形\",\"t\":[\"设置width为0，然后添加边框。\",\" width: 0; border: 20px solid transparent; border-bottom-color: red; \"]},\"179\":{\"h\":\"定位(position)\",\"t\":[\"static：默认值。\",\"relative：相对定位。以当前位置为基准进行偏移，任占据原来的空间。\",\"absolute：绝对定位。相对于最近的父级进行定位(relative)，不存在则相对于html定位。\",\"fixed：相对于浏览器窗口。\"]},\"180\":{\"h\":\"清除浮动\",\"t\":[\"浮动会导致高度塌陷。\",\"给父级元素添加伪类。\",\" .selector:after { content: \\\"\\\"; display: block; clear: both; } \",\"父级元素设置overflow: hidden。\",\"在浮动元素后添加一个块级元素，然后使用clear: both。缺点：出现空白标签。\",\"设置固定高度。\"]},\"181\":{\"h\":\"实现左侧固宽右侧自适应\",\"t\":[\"float + margin\",\"flex\",\"position\",\"calc\"]},\"182\":{\"h\":\"水平垂直居中\",\"t\":[\"transform\",\" margin-top: 50%; margin-left: 50%; transform: translate(-50%, -50%); \",\"position(绝对定位)，需给父元素设置相对定位。\",\" position: absolute; top: 0; left: 0; right: 0; bottom: 0; margin: auto; \",\"flex\"]},\"183\":{\"h\":\"display: none 和 visibility: hidden 的区别\",\"t\":[\"两者都是隐藏元素。\",\"前者不占据空间，从渲染树中消失，是非继承属性\",\"后者隐藏后占据原来的空间，保留渲染数，是继承属性。\"]},\"184\":{\"h\":\"Flex布局\",\"t\":[\"flex-direction：设置主轴排列方向\",\"flex-warp：空间不够是否换行\",\"justitfy-content：主轴对齐方式\",\"align-item：交叉轴对齐方式\",\"align-self：项目对齐方式\",\"flex-grow：项目放大比例，默认为0\",\"flex-shrink：项目缩小比例，默认为1等比缩小\",\"flex：项目在空间中的占比\",\"⚠️注意：当项目设置flex为1后，内容超出元素会被拉伸。\",\"解决方案\",\"设置width为0\",\"超出元素进行隐藏overflow: hidden\"]},\"185\":{\"h\":\"Grid 布局\",\"t\":[\"容器。\",\"grid-template-rows/grid-template-columns：设置行/列数。 \",\"repeat(row/columns, height/width) \",\"row/columns \",\"数字\",\"auto-fill：根据容器大小自动填充。\",\"height/width \",\"像素值\",\"(n)fr：均等分，可单独设置。n表达占据的比例。\",\"minmax(最小值, 占比)\",\"row-gap/columns-gap：设置行/列之间的间距，复合属性gap。\",\"grid-template-areas：为每个项目划分区域并对应一个标识符。\",\"grid-auto-flow：排列方向。 \",\"row：默认，从左到右。\",\"row dense：当后面项目在这放不下，会将能放下的项目移动到这。\",\"cloumns：从上到下。\",\"justify-items/align-items：每个项目在网格中(主轴/交叉轴)的对齐方式，复合属性place-items。\",\"justify-content/align-content：控制整个内容区域在容器里的对齐方式。\",\"项目。\",\"grid-row-start/grid-row-end：设置跨行开始和结束的网格线，复合属性grid-row。\",\"grid-column-start/grid-column-end：设置跨列开始和结束的网格线，复合属性grid-column。\",\"grid-area：指定项目的区域位置，配合grid-template-areas使用。\",\"justify-self/align-self：单独设置项目在主轴/交叉轴上的对齐方式。\"]},\"186\":{\"h\":\"viewport(视口窗口)\",\"t\":[\"可视区域，用于移动端适配。\",\" <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"> \",\"width：控制viewport的宽度大小(可以是定值)，默认为设备的宽度(device-width)\",\"initial-scale：页面初始加载时的缩放比例\",\"maximum-scale：允许用户缩放的最大比例\",\"minimum-scale：允许用户缩放的最小比例\",\"user-scalable：是否允许用户缩放\"]},\"187\":{\"h\":\"px、em、rem的区别\",\"t\":[\"px是一个绝对单位。\",\"em、rem是一个相对单位。em相对于当前元素的字体大小，rem相对于根元素(html、body)的字体大小。\"]},\"188\":{\"h\":\"缩小最小字体的方法\",\"t\":[\"浏览器可渲染的最小字号为 12px。\",\"transform: scale(0.5)\",\"单独用标签包裹文字进行缩放。\",\"将整个父元素尺寸放大2倍再进行缩放。\",\"SVG矢量图设置text\",\" <!-- 可以设置1-12px任意字号 y：字号大小 不支持多行文本 --> <svg> <text x=\\\"\\\" y=\\\"10\\\">10px</text> </svg> \"]},\"189\":{\"h\":\"JavaScript\"},\"190\":{\"h\":\"JS数据类型\",\"t\":[\"基本数据类型：Number、String、Null、Undefined、Boolean 引用类型：Object\"]},\"191\":{\"h\":\"null和undefined的区别\",\"t\":[\"undefined表示变量声明后未进行初始化，是变量声明的默认值。\",\"null表示一个不存在的值或空对象，可用于主动释放引用。\"]},\"192\":{\"h\":\"深浅拷贝\",\"t\":[\"浅拷贝：直接将变量的值进行赋值操作(assign、concat、slice、解构)。\",\"深拷贝：改变引用内存地址。\",\"通过JSON.stringify转换成JSON字符串，然后使用JSON.parse转换成对象。\",\"⚠️注意：在转换字符串时会过滤掉值为undefined的属性。\",\"递归遍历对象。\",\" const checkType = data => { return ({}).toString.call(data).slice(8, -1).toLowerCase() } const deepClone = data => { let cloneObj = null if (!['array', 'object'].includes(checkType(data))) return data if (checkType(data) === 'object') { cloneObj = {} for (let i in data) { cloneObj[i] = deepClone(data[i]) } } if (checkType(data) === 'array') { cloneObj = [] data.forEach(item => { cloneObj.push(deepClone(item)) }) } return cloneObj } \"]},\"193\":{\"h\":\"什么是闭包，闭包的作用及注意点\",\"t\":[\"闭包就是一个高阶函数，执行后返回一个新的函数，这个函数可以访问其内部的变量。\",\"形成了一个独立的作用域，保证了变量的私有性。\",\"闭包会把函数中变量保存到内存中，使用过多内存消耗就会过大容易导致内存泄露。\",\" function fn() { let a = 10 return () => { a-- } } const changeA = fun() \"]},\"194\":{\"h\":\"call和apply的区别\",\"t\":[\"两者都能改变this的指向，区别在于call传递的实参可以是多个，而apply传递的实参是一个数组，每一项对应一个参数。\",\" const obj = { firstName: 'd', lastName: 'w' } function getFullName(a, b) { return this.firstName + this.lastName + a + b } getFullName.call(obj, 1, 2) getFullName.apply(obj, [1, 2]) \"]},\"195\":{\"h\":\"箭头函数和普通函数的区别\",\"t\":[\"箭头函数的this是绑定到上下文中的且没有prototype原型。而普通函数的this是指向被调用的主体，默认情况下指向window。\"]},\"196\":{\"h\":\"三元表达式和if…else的区别\",\"t\":[\"三元表达式有返回值，后者没有返回值。两者是可以相互转换的。\"]},\"197\":{\"h\":\"面向对象的理解\",\"t\":[\"面向对象是一种编程思想，将复杂的问题转化为对象的问题。\",\"ES5使用构造函数进行定义，ES6中使用关键字class进行定义\",\"面向对象的三大特点：\",\"封装：将属性、方法封装到类内部\",\"继承：子类可继承父类的属性和方法\",\"多态：子类可重写父类中的方法，实现不同的行为\"]},\"198\":{\"h\":\"构造函数和实例对象的区别\",\"t\":[\"实例对象是通过new关键字执行构造函数创建出来的，是一个实例化的过程。\",\"在 new 的过程中会将 this 指向这个实例对象，将构造函数的原型 prototype 传递给实例对象的隐式原型 proto。\",\"instanceof 判断数据类型，a instaceof A。\",\"原理：用while去遍历实例对象，判断对象上的__proto__是否等于prototype。\"]},\"199\":{\"h\":\"作用域和作用域链\",\"t\":[\"作用域：描述一个变量的可访问性。分为全局、块级、函数作用域。\",\"在预编译阶段会把变量提升到当前作用域的最前面（函数会将整体提升到最前面）\",\"作用域链：作用域是可以发生嵌套和向外延伸的，当发生多个作用域嵌套形成的一个链表。\",\"当访问一个变量时，首先会在当前作用域中查找，然后依次向外层作用域中查找直到全局作用域。这样由多个作用域构成的链表叫作用域链。\"]},\"200\":{\"h\":\"事件流\",\"t\":[\"执行事件的顺序。\",\"冒泡流：从目标元素向顶层元素传递\",\"捕获流：从顶层元素向目标元素传递\"]},\"201\":{\"h\":\"get和post的区别\",\"t\":[\"post 请求相对于 get 请求是比较安全的，get 参数是可见的， post 是不可见。\",\"请求参数传递的方式不同，get 请求的参数是拼接在 url 地址后面的，psot 请求的参数是存放在请求体中的\",\"get 传递的数据比 post 的小，因为 url 是有长度限制的。\"]},\"202\":{\"h\":\"http和https的区别\",\"t\":[\"http 是以明文的方式传输的，https是http协议更加安全的版本，通过SSL进行加密传输。\",\"http默认端口是80，​https默认端口是443。\"]},\"203\":{\"h\":\"取消ajax请求\",\"t\":[\"原生请求XHR使用对象的abort方法。\",\"axios通过实例下的CancelToken.source方法创建一个取消请求的实例， 然后通过实例的cancel方法取消请求。\",\"通过定时器setTimeout和clearTimeout取消ajax请求。\",\" let timer = nll clearTimeout(timer) timer = setTimeout(() => { // 发送请求 }, 800) \"]},\"204\":{\"h\":\"什么是跨域，什么情况会导致跨域，怎么解决\",\"t\":[\"出于浏览器同源策略限制和安全性考虑，当请求的地址与当前地址的协议、域名、端口号不一致时会出现跨域的行为。\",\"JSONP\",\"前端事先定义好一个用于获取响应数据的回调函数，通过 script 标签（没有同源策略的限制）发起一个请求并将回调函数作为查询参数传递过去， 然后服务端返回这个回调函数的执行将响应数据作为参数传递给回调。\",\"CORS（跨域资款共享）\",\"需要浏览器和服务器同时支持。服务器端需要设置响应头信息来允许跨域请求。Access-Control-Allow-Origin 是必须的，要么是请求头的 Origin 字段的值，要么是一个 *（表示接受任意域名的请求）。\",\"配置反向代理\",\"通过打包工具进行反向代理服务器的配置。\"]},\"205\":{\"h\":\"内存泄露\",\"t\":[\"当一块内存地址使用完成未被释放，随着程序执行，内存不断堆积。\",\"错误的调用递归方法\",\"闭包\"]},\"206\":{\"h\":\"变量提升\",\"t\":[\"js在执行时分为预编译阶段和执行阶段。\",\"变量提升发生在预编译阶段，在各自作用域最前面声明所有变量，var会忽略块级作用域提升到上一层作用域。此时只提升了变量并没有初始化。\",\"let、const变量也进行了提升，但只能在初始化时才能访问，在这之前是暂时性死区。\",\"函数声明会将整个函数提升到最前面，函数在声明的时候就已经赋值了。函数提升会跳出块级作用域，但内容还保留在里面。函数表达式提升时不会将整体提升。\"]},\"207\":{\"h\":\"原型、原型链\",\"t\":[\"原型：原型是一种实现面向对象编程的的技术，实现对象之间的继承关系。每个函数上都存在一个原型对象 prototype，实例化时，会将 prototype 传递给实例原型(隐士原型) __proto__。\",\"原型链：原型链是对象继承特性的实现方式。当试图访问一个对象属性时，如果对象自身没有这个属性，就会去原型中寻找这个属性，如果原型中也不存在，就会继续在原型的原型中寻找，直到找到该属性或到达原型链的尽头。这样由多个原型对象构成的链表叫原型链。\"]},\"208\":{\"h\":\"引用类型和值类型的区别\",\"t\":[\"值类型存储在栈中，是一个简单的赋值过程。\",\"引用类型存储在堆中，保存的是内存地址。当一个属性值被修改后，其他被引用的地方也会改变。\"]},\"209\":{\"h\":\"数组去重\",\"t\":[\"使用ES6的Set构造函数，然后使用Array.from或结构可以得到一个去重的数组。\",\" Array.from(new Set([1,2,2,3])) [...new Set([1,2,2,3])] \",\"定义一个空的新数组，然后通过遍历原数组，用indexOf/includes判断新数组中是否存在，不存在就push进去。\",\" const arr = [1,2,2,3] const newArr = [] arr.forEach(item => { if(newArr.indexOf(item) === -1) newArr.push(item) // if(!newArr.includes(item)) newArr.push(item) }) \",\"使用filter过滤。\",\" const arr = [1,2,2,3] arr.filter((item, index) => arr.indexOf(item) === index) \"]},\"210\":{\"h\":\"for...in和for...of的区别\",\"t\":[\"for...in用于可枚举(enumerable)类型的数据(对象，数组，字符串)，遍历的是key，遍历类数组(dom节点列表...)时会遍历到原型中去。\",\"for...of用于可迭代(iterator)类型的数据(数组，字符串)，遍历的是value。\"]},\"211\":{\"h\":\"typeof 和 instanceof 的区别\",\"t\":[\"两者都是判断数据类型的方法。\",\"typeof返回的是变量的数据类型，不能准确的判断引用类型的数据(除function)。\",\"instanceof返回的是布尔值，可以准确的判断引用类型数据。\"]},\"212\":{\"h\":\"判断两个对象是否相等\",\"t\":[\"使用JSON.stringify转换成JSON字符串再进行比较(注意值为undefined的属性)。\",\"递归。\",\" function checkObj(obj1,obj2){ if(typeof obj1 != 'object' || typeof obj2 != 'object') return false // 内存地址相同直接返回true if(obj1 === obj2) return true // 获取对象的所有属性 const obj1Keys = Object.getOwnPropertyNames(obj1) const obj2Keys = Object.getOwnPropertyNames(obj2) if (obj1Keys.length !== obj2Keys.length) return false for (let i = 0; i < obj1Keys.length; i++) { if (obj2Keys.includes(obj1Keys[i])) { if (typeof obj1[obj1Keys[i]] === 'object') { return checkObj(obj1[obj1Keys[i]], obj2[obj1Keys[i]]) } else { if (obj1[obj1Keys[i]] !== obj2[obj1Keys[i]]) return false } } else { return false } } return true } \"]},\"213\":{\"h\":\"== 和 === 的区别\",\"t\":[\"==会进行类型转换，===不会进行类型转换。\",\"==先进行类型转换再进行值的比较。\",\"===会先判断数据类型是否相等，再判断两边的值是否相等。\"]},\"214\":{\"h\":\"强制、隐式转换\",\"t\":[\"强制：Number、String、toString、parseInt… 隐式：+、-、*、/、==…\"]},\"215\":{\"h\":\"判断一个变量准确的数据类型\",\"t\":[\"// 1 ({}).toString.call(obj).toLowerCase().slice(8, -1) // 2 Object.prototype.toString.call(obj).toLowerCase().slice(8, -1) \"]},\"216\":{\"h\":\"cookies、sessionStorage、localStorage的区别\",\"t\":[\"cookies是网站标记用户身份的一段加密的数据，最大4k，最多20个。\",\"sessionStorage浏览器本地存储的一种方式，以键值对的形式进行存储，在浏览器关闭时会自动删除\",\"localStorage~存储的是持久化的数据，不主动删除，数据会一直保留\"]},\"217\":{\"h\":\"事件循环\",\"t\":[\"js是单线程任务，异步和多线程是通过Event Loop机制实现的。 由调用栈、消息队列(宏任务)、微任务队列组成。执行时会从全局栈中一行一行的执行， 遇到函数执行会压入调用栈中，函数执行返回后从栈中弹出。遇到fatch、事件回调、setTimeOut、setInterval 会加入到消息队列中，在调用栈清空的时候执行。遇到promise、async、await会加入到微任务队列中，在调用栈清空的时候立即执行， 处理期间加入的微任务会一同执行。\",\"微任务的优先级高于宏任务。\"]},\"218\":{\"h\":\"promise\",\"t\":[\"三种状态：pending(进行中)、resolved(成功)、rejected(失败)。\",\"当promse调用后，会以进行中的状态开始，最终会以成功或失败的状态结束，并在完成时调用相应的回调函数(then/catch)。 接收resolve、reject两个回调，前者触发成功，后者触发失败并改变promise转态，且以第一次触发的为准。throw会触发reject回调。\"]},\"219\":{\"h\":\"Set、Map、WeakSet 和 WeakMap 的区别？\",\"t\":[\"ES6 新增数据结构，都可以存储不重复的值。\",\"Set/WeakSet 是一种集合类型的数据结构，类似数组，成员是唯一且无序的，key 和 value 是相同的。\",\"Set 和 WeakSet 的区别\",\"WeakSet 只能储存对象引用，不能存放值，而 Set 可以存放任何值。\",\"WeakSet 存储的对象是弱引用，会被垃圾回收机制回收。\",\"WeakSet 不能被遍历。\",\"Map/WeakMap 是一种字典类型的数据结构，任何值都可以作为 key，且是有序的。\",\"Map 与 WeakMap、Set、Object 的区别\",\"WeakMap 只接受对象类型作为键名(弱引用，可被垃圾回收机制回收)，Map 可以是任何值。\",\"WeakMap 不能被遍历。\",\"Set 以健值对 [value, value] 的形式存储元素，Map 则是以健值对 [key, value] 的形式进行存储。\",\"Map/WeakMap 是有序的，Object 是无序的。\"]},\"220\":{\"h\":\"ES5/ES6 的继承除了写法以外还有什么区别？\",\"t\":[\"class 声明会进行变量提升，在声明之前访问会出现暂时性死区。\",\"class 内部默认开启严格模式。\",\"class 所有的方法都不可枚举。\",\"必须使用 new 关键字调用。\",\"class 内部不能重写类名。\"]},\"221\":{\"h\":\"setTimeout、Promise、Async/Await 的区别？\",\"t\":[\"setTimeout 是一个异步代码，Promise 和 Async/Await 是将异步代码改写为同步代码的解决方式。\",\"Promise 本身是同步代码的立即执行函数，在处理成功/错误回调时才是异步操作。\",\"Async 只是将函数的返回值设置为一个 Promise 函数，不会将函数变为异步函数。 Await 等待一个 Promise 函数执行结果，等待完成后才执行后面的代码。\",\"注意\",\"在 Await 语句后所有代码都将变为异步代码。\"]},\"222\":{\"h\":\"JS 异步解决方案的发展历程以及优缺点\",\"t\":[\"回调函数。最大问题是回调地狱，不能捕获错误和 return。\",\"Promise。解决了回调地狱，数据依赖过多会导致链式调用冗长。\",\"Async/await。代码清晰，没有数据依赖时使用 await 会导致性能降低。\"]},\"223\":{\"h\":\"更多\",\"t\":[\"掘金 前端 100 问：能搞懂 80% 的请把简历给我\"]},\"224\":{\"h\":\"React\"},\"225\":{\"h\":\"useMemo 和 useCallback 有什么区别\",\"t\":[\"这两个钩子都是组件优化的一种方式，使用 memoization(空间换时间) 的思想。\",\"useMemo 缓存的是函数的返回值，并保证返回值的引用地址不变。当依赖项变化时才会重新计算函数的返回值。\",\"useCallback 缓存的是函数的本体。\",\"memo 缓存组件的渲染结果，减少主线程的阻塞。当 props 未发生改变时，组件不会重新渲染。\"]},\"226\":{\"h\":\"useEffect 和 useLayoutEffect 有什么区别\",\"t\":[\"useEffect 在组件渲染完成后异步执行，不会阻塞浏览器渲染。\",\"useLayoutEffect 在 DOM 变更之后，浏览器绘制之前同步执行，会阻塞渲染。\"]},\"227\":{\"h\":\"useEffect 的用法\",\"t\":[\"接收一个回调和一个依赖项，只能在组件的顶层或自己的钩子中调用。可以替代 class 中的以下生命周期。\",\"componentDidMount 组件挂载完成(获取数据、DOM)。依赖项为空数组或不存在。\",\"componentDidUpdate 组件更新完成(获取更新后的数据)。依赖项发生改变。\",\"componentWillUnmount 组件卸载之前(清除定时器、事件监听)。回调返回一个函数。\"]},\"228\":{\"h\":\"useEffect 第二个参数内部是怎么比较的\",\"t\":[\"使用 for 循环结合 Object.is 方法进行浅比较。\"]},\"229\":{\"h\":\"介绍一下 Hooks\",\"t\":[\"本质上是一个纯函数，允许在函数式组件中使用 state、生命周期及其他特性。hooks 只能在组件的顶层中使用。\"]},\"230\":{\"h\":\"React 中 setState 什么时候是同步的，什么时候是异步的？\",\"t\":[\"setState 执行的过程是同步的，只是合成事件和钩子调用顺序在更新之前，导致没法立即拿到更新的值。\\n异步是指执行 setState 时，会将需要更新的 state 浅合并后加入状态队列中，不会立即更新，后面通过批量处理更新 state。\"]},\"231\":{\"h\":\"Vue\"},\"232\":{\"h\":\"什么是单页面应用(SPA)\",\"t\":[\"只有一张Web页面的应用。加载单个HTML页面，在用户与应用程序时动态更新局部模块。\",\"优点\",\"用户操作体验好，不会频繁的刷新页面。\",\"前后端分离开发\",\"缺点\",\"SEO不友好\",\"首页加载缓慢\"]},\"233\":{\"h\":\"MVVM模型\",\"t\":[\"即model(数据访问层)-view(视图层)-viewmodel(数据连接层)的响应式框架。 通过数据驱动应用，数据变化，视图更新，视图变化，数据更新。\",\"优势\",\"低耦合：视图可独立于model的变化和修改\",\"可复用性\",\"分离开发\"]},\"234\":{\"h\":\"vue响应式原理\",\"t\":[\"监听数据变化做出响应的一种机制。\",\"vue2：采用数据劫持结合发布者-订阅者模式，通过Object.defineProperty劫持各个属性的getter、setter， 并创建收集依赖的dep对象。在获取属性值的时候会先判断是否有target标识，然后标识进行依赖收集， 当数据发生变化时触发watcher事件发布消息给订阅者，然后根据依赖收集去通知页面更新。\",\"vue3：通过Proxy代理拦截对象属性的操作，然后通过Reflect对源对象的属性进行操作最后反射出去。\"]},\"235\":{\"h\":\"首屏加载的优化方案\",\"t\":[\"使用路由懒加载\",\"Vue 异步组件\",\"Webpack开启gzip压缩\",\"使用link标签的rel属性设置 prefetch\"]},\"236\":{\"h\":\"data为什么是一个函数\",\"t\":[\"确保每个组件中data的数据是独立、互不影响的。如果是个普通对象将会影响到其他组件的数据。\"]},\"237\":{\"h\":\"v-if和v-show的区别\",\"t\":[\"v-if：动态的添加或移除DOM元素，是一个销毁重建的过程，切换消耗较高。\",\"v-show：使用display样式控制DOM元素的显示和隐藏，初始渲染消耗较高。\"]},\"238\":{\"h\":\"v-if和v-for优先级\",\"t\":[\"两者同时使用是不推荐的，优先级不够明显。\",\"vue2：v-for比v-if的优先级更高，不管是否渲染都会遍历整个列表，比较浪费性能。\",\"vue3：v-if比v-for的优先级更高，这会导致无法访问到v-for中定义的变量。\"]},\"239\":{\"h\":\"computed、watch和methods的区别\",\"t\":[\"computed 有缓存机制，当依赖的数据发生改变时才会重新计算，必须return出去。\",\"watch 监听已存在的属性是否发生改变，然后相应的逻辑，不要return。\",\"methods 没有缓存，每次调用都会执行一次。\"]},\"240\":{\"h\":\"vue的生命周期\",\"t\":[\"实例从创建到销毁的一个过程(数据观测、模版编译、实例挂载、DOM更新)。Vue3 中的生命周期比 Vue2 的快。\",\"大体分为以下三个阶段。\",\"挂载 beforeCreate、created、beforeMount、mounted\",\"更新 beforeUpdate、updated\",\"销毁 beforeDestroy、destroyed\",\"2.x\",\"3.x\",\"描述\",\"用途\",\"beforeCreate\",\"setup\",\"实例创建前\",\"loading的加载、插件的挂载...\",\"created\",\"setup\",\"实例创建完成\",\"发送ajax请求...\",\"beforeMount\",\"onBeforeMount\",\"实例挂载前\",\"mounted\",\"onMounted\",\"实例挂载后\",\"可获取DOM节点、发送ajax请求\",\"beforeUpdate\",\"onBeforeUpdate\",\"数据更新前\",\"获取更新前各种状态\",\"updated\",\"onUpdated\",\"数据更新后\",\"beforeDestroy\",\"onBeforeUnmount\",\"销毁之前\",\"定时器的清除、移除事件监听...\",\"destroyed\",\"onUnmounted\",\"销毁完成\",\"移除事件监听\"]},\"241\":{\"h\":\"父子组件的挂载顺序\",\"t\":[\"父组件\",\"beforeCreate > created > beforeMount\",\"子组件\",\"beforeCreate > created > beforeMount > mounted\",\"父组件\",\"mounted\"]},\"242\":{\"h\":\"组件间的通信方式\",\"t\":[\"父向子\",\"props、refs、attrs(所以未被props定义的属性)\",\"子向父\",\"emit、parent\",\"兄弟组件\",\"vuex、$parent、\",\"跨层级(祖孙组件)\",\"vuex、provide+inject\"]},\"243\":{\"h\":\"key 的作用及不建议使用 index\",\"t\":[\"为虚拟 DOM 添加唯一的标识符，依靠 key 能更准确，更快的拿到 oldVnode 中对应的 vnode 节点。 当数据变化时，diff 算法根据新旧虚拟 DOM 的 key 进行比较， 如果找到了相同的 key 但内容未变，直接复用之前的 DOM，内容发生变化则创建新的 DOM。如果未找到相同的 key 则创建新的真实 DOM。\",\"使用 index 作为 key 时，当向列表前面添加或删除数据时会导致后面的 key 发生改变，而 重新创建 DOM，不能极大的复用。同时存在输入类的 DOM 会产生错误 DOM 更新。\"]},\"244\":{\"h\":\"虚拟DOM\",\"t\":[\"用js对象模拟DOM结构。\",\"主要解决浏览器性能的问题。当视图更新后台，虚拟DOM不会立即更新，而是将它记录在一个js 对象中，最后将这个对象一次性的添加到DOM树中，避免了大量重复的DOM操作。\"]},\"245\":{\"h\":\"路由模式\",\"t\":[\"hash模式\",\"在地址栏中会有一个#，可用location.hash获取hash值。 当hash值改变时不会触发http请求，不会重新加载页面。\",\"history模式\",\"利用H5的historyAPI。通过pushState、replaceState方法向当前浏览器会话的历史堆栈中添加或替换一个状态， 不会触发popstate事件，只有在做出浏览器动作(go、back、forward)时，才会触发该事件。\"]},\"246\":{\"h\":\"路由跳转方式\",\"t\":[\"声明式导航：<router-link :to=\\\"...\\\" />\",\"编程式导航：router.push()...\"]},\"247\":{\"h\":\"路由钩子\",\"t\":[\"路由钩子分为：\",\"全局守卫\",\"beforeEach：进入路由之前。可进行用户身份的校验。\",\"afterEach：进入路由之后\",\"路由独享守卫(beforeEnter)\",\"组件内守卫\",\"beforeRouteEnter：路由进入前\",\"beforeRouteUpdate：路由更新\",\"beforeRouteLeave：路由离开\"]},\"248\":{\"h\":\"vuex\",\"t\":[\"vuex是一种状态管理模式，用于集中式状态管理、数据共享的仓库。\",\"state：定义数据状态\",\"getters：获取state中的数据，会进行缓存，变化时会重新计算。\",\"mutations：修改state中的数据唯一方法是提交(commit) mutation，必须是同步函数。\",\"actions：主要用来处理一些异步操作，通过dispatch来分发任务提交mutations，不能直接变更状态。\",\"module：\",\"将store分成多个模块，每个模块都拥有自己的state、getters、mutations、actions。\",\"通过namespaced:true开启命名空间，提交分发时带上命名空间名称。避免多个模块对同一个mutation 或 action 作出响应。\"]},\"249\":{\"h\":\"客户端和服务端渲染的区别\",\"t\":[\"客户端\",\"用户输入地址向服务器发送请求后，传给浏览器相应的网页文件并解析，然后将数据渲染到页面。在客户端生成DOM，不利于SEO优化。\",\"服务端\",\"在服务端操作网页文件，通过render函数渲染好整个页面，最后发送给客户端。在服务端生成DOM，有利于SEO优化、爬虫。\"]},\"250\":{\"h\":\"怎么解决Vue打包文件过大的问题\",\"t\":[\"不常用的库通过CDN的方式引入。\",\"使用路由懒加载。\",\"开启gzip压缩。\"]},\"251\":{\"h\":\"Vue性能优化\",\"t\":[\"使用for循环时绑定key，尽量不是用index作为key。\",\"路由懒加载。\",\"使用v-show、KeepAlive复用DOM。\",\"打包去掉map文件。\",\"通过CDN引入第三方库。\",\"避免DOM的操作。\",\"减少页面Ajax请求的数量。\"]},\"252\":{\"h\":\"怎么解决页面刷新Vuex值被重置的问题\",\"t\":[\"将Vuex值保存到浏览器缓存中。\",\"页面刷新再次发送请求，动态更新Vuex。\"]},\"253\":{\"h\":\"如何扩展组件\",\"t\":[\"常见的扩展方法有 mixins、extends、slots。\",\"slots 属于内容扩展，精确分发时使用具名插槽。\",\"extends 类似 mixins。与 Vue.extend 不同的是 Vue.extend 创建的是一个实例。\",\"混入(mixins)是分发组件可复用的功能非常灵活的方式。混入对象可包含组件任意选项。在混入时可能导致变量冲突。\",\" // 复用代码：它是一个配置对象，选项和组件里面一样 const mymixin = { methods: { dosomething(){} } } // 全局混入：将混入对象传入 Vue.mixin(mymixin) // 局部混入：做数组项设置到mixins选项，仅作用于当前组件 const Comp = { mixins: [mymixin] } \"]},\"254\":{\"h\":\"子组件能修改父组件的数据吗\",\"t\":[\"vue 中数据传递是单向的，父级状态的更新会向下流到的子组件中（props自动刷新），反之则不行。 这样防止了子组件意外变更父组件状态时导致数据流向难以理解的问题。\",\"解决方法：通过 emit 分发一个事件去修改父组件的状态。\",\"虽然不能直接修改传递过来的 props，但是可以修改内嵌的对象或属性。\"]},\"255\":{\"h\":\"权限管理\",\"t\":[\"权限管理分为页面权限和按钮权限的管理。\",\"首先在路由 meta 信息中配置 roles 字段用于权限匹配，并把所有的路由信息配置成一个路由表，\\n然后通过路由守卫钩子验证用户身份，根据返回身份信息与路由中的 roles 字段匹配过滤路由表，\\n最后通过路由的 addRoute 方法动态添即可。\"]},\"256\":{\"h\":\"\"},\"257\":{\"h\":\"运营周报\",\"t\":[\"对各渠道下的用户活跃度、流失率、留存率、新增率进行监控。\",\"主要功能包括渠道管理、渠道分组、指标管理(根据CRM标签计算生成)、指标记录和导出等功能。\"]},\"258\":{\"h\":\"表格固定定位导致表单校验失效\",\"t\":[\"最近在做一个表格时，内容可以通过 input 框进行修改。由于表格的列太多，所以对操作的那一列进行了固定，但是到了保存校验时发现 表单校验没了，操作输入框校验是存在的。\",\"未定位的校验\",\"定位后的校验\"]},\"259\":{\"h\":\"基础\",\"t\":[\"javaScript 是基于原型的动态类型的弱类型脚本解释性语言。是一个单线程的运行环境，从上往下依次执行的，且前面的没有执行完后面的就不能执行。\",\"弱类型：声明变量的时候不需要给定类型，代码执行的时候灵活的改变他的类型。\",\"动态类型：类型之间没有严格的隔离，使用不同类型进行运算-最终结果一定是6大类型之一。\"]},\"260\":{\"h\":\"变量声明\",\"t\":[\"变量必须先声明再使用。声明关键字 var(ES5)、let(ES6)、const(ES6)。\",\"var、let用于变量的声明，后面可重新赋值。 const用于常量的声明，必须初始化，声明后不可修改(只读)，使用大写字母进行命名。\",\" let name = 'dw' const NAME = 'dw' \"]},\"261\":{\"h\":\"命名规则\",\"t\":[\"变量必须以字母开头\",\"变量也能以 $ 和 _ 符号开头（不过我们不推荐这么做）\",\"变量名称对大小写敏感\",\"驼峰命名：MyCoupon\",\"小驼峰命名：myCoupon\"]},\"262\":{\"h\":\"数据类型\"},\"263\":{\"h\":\"基本数据类型\",\"t\":[\"字符串（String）\",\"语法形式\",\"双引号：\\\"\\\"\",\"单引号：''\",\"反引号：``。 ES6模板字符串。可以使用 ${} 更友好的拼接变量。\",\"转义字符\",\"将 \\\\ 后面的特殊字符转为普通字符\",\"\\\\n：换行\",\"\\\\\\\"：双引号\",\"数字（Number）\",\"js 中数值并不是一个准确的值，而是一个近似值，存在一定的误差。Number.MAX_VALUE js最大能表示的值。\",\"0.1 + 0.2 = 0.30000000000000004 \",\"解决误差\",\"在整数上进行处理 - 倍数的乘积使其变成整数再进行操作。\",\"科学计数法：133e+33 表示 133 * 10^33次方\",\"特殊数值\",\"NaN：不是一个数字或算不出的一个值（Not a Number）。\",\"0 / 0 Infinity / Infinity \",\"Infinity/-Infinity：正负无穷大，不能进行表示的非常大/小的值。\",\"常用进制\",\"十进制\",\"二进制 0b\",\"八进制 0\",\"十六进制 0x：满16进1。0-f。\",\"toSring 方法能将十进制转成任意进制。\",\"// 转十进制 100 --> 1 * 10^2 + 0 * 10^1 + 0 * 10^0 // 十进制转十进制 1010 --> 1 * 2^3 + 0 * 2^2 + 1 * 2^1 + 0 * 2^0 // 二进制转十进制 41 --> 4 * 8^1 + 1 * 8^0 // 八进制转十进制 \",\"由上得出转十进制通用公式\",\"n：当前进制，abc：当前进制数。\",\"得出 a * n^2 + b * n^1 + c * n^0\",\"// 十进制转其他进制（连续取余） 48 --> 110000 // 转二进制 48 % 2(商 24 余 0) --> 24 % 2(商 12 余0) --> 12 % 2(商 6 余 0) 6 % 2(商 3 余 0) --> 3 % 2(商 1 余 1) --> 1 % 2(商 0 余 1) 48 --> 60 // 转八进制 48 % 8(商 6 余 0) --> 6 % 8(商 0 余 6) \",\"提示\",\"进制转换是个入栈的过程，所以取值应遵循出栈规则\",\"// 二、八、十六进制相互转换 2^3 = 8 // 二进制转八进制 10111001 --> 001 111 10(271) 001 --> 0 * 2^2 + 0 * 2^1 + 1 * 2^0(1) 111 --> 1 * 2^2 + 1 * 2^1 + 1 * 2^0(7) 10 --> 1 * 2^1 + 0 * 2^0(2) 2^4 = 16 // 二进制转十六进制 10111001 --> 1001 1011(B9) 1001 -> 1 * 2^3 + 0 * 2^2 + 0 * 2^1 + 1 * 2^0(9) 1011 -> 1 * 2^3 + 0 * 2^2 + 1 * 2^1 + 1 * 2^0(11 - B) \",\"提示\",\"二进制转八、十六进制时，2的幂数等于转其他进制需要的位数进行分离， 然后通过转十进制的方法进行计算最后拼接。\",\"布尔（Boolean）\",\"只有两个值：ture/false, 常用于状态设置和条件判断。\",\"条件判断的两种形式：\",\"==：等于。不会对类型进行比较。\",\"===：恒/全等于。会进行类型比较。\",\"提示\",\"所有表达式都有返回值，浏览器判断代码是否执行完的唯一标准是是否有返回值。\",\"Undefined\",\"未定义，表示不存在或未被初始化（赋值）的一个内容。返回当前类型的值。\",\"Null\",\"指向一个不存在的空间或空的对象。返回当前类型的值。\"]},\"264\":{\"h\":\"复杂数据类型\",\"t\":[\"对象（Object）\",\"除简单类型外，其余都是 Object 类型。\",\"判断数据类型：\",\"typeof 变量 / typeof(变量)。\",\"利用对象的 toSring 方法改变 this 指向，可以判断出具体的数据类型。\",\"({}).toSring().call(property).slice(8, -1).toLowerCase() \"]},\"265\":{\"h\":\"日志打印与错误抛出\",\"t\":[\"alert：弹窗。\",\"console.log：日志输出。\",\"console.dir：以目录（对象）的形式进行输出。\",\"console.error：打印错误。\",\"console.warn：打印警告。\",\"throw new Error：抛出一个错误。与上两个的区别是该语句会终止代码执行。\"]},\"266\":{\"h\":\"流程控制\"},\"267\":{\"h\":\"语句块\",\"t\":[\"又称代码块。由最基本的语句组成，用一对大括号定界。一般情况下有和没有无本质区别，通常用于流程控制。\",\"{ statement_1 ... statement_n } \"]},\"268\":{\"h\":\"条件判断语句\",\"t\":[\"if...else\",\"if (condition) { statement_1 } else { statement_2 } // 语句 else 可选 \",\"当条件表达式 condition 为 ture 执行 if 语句，否则（false）执行else语句。条件表达式最终返回一个 Boolean 类型的值。\",\"也可以进行组合使用。\",\"if (condition_1) { statement_1 }else if (condition_2) { statement_2 }else { statement_last } \"]},\"269\":{\"h\":\"switch 语句\",\"t\":[\"对表达式（expression）进行求值，并进行 case 语句匹配，匹配成功执行对应语句。未匹配到执行 default 语句。\",\"default break 是可选的。break 是用于语句执行完成后跳出 swicth 语句。否则会继续执行后面的语句。\",\"switch (expression) { case label_1: statements_1 [break;] ... default: statements_def [break;] } \"]},\"270\":{\"h\":\"循环\"},\"271\":{\"h\":\"for\",\"t\":[\"用于次数确定的循环。\",\"for ([initialExpression]; [condition]; [incrementExpression]) { statement } // eg for (let i = 0; i < 3; i++) { console.log(i) } \",\"initialExpression 初始化表达式的值，可以声明变量。必须的。\",\"condition 计算表达式的值（true/false）。如果 condition 表达式整个都被省略掉了，condition 的值会被认为是 true。\",\"incrementExpression 更新表达式。可选。\",\"continue 可结束本次循环。\",\"continue 和 break 的区别\",\"continue：for 循环内部关键字。跳过本次循环，继续执行后面的循环。\",\"break：结束循环，后面的循环不再执行。只会跳出最近的这层循环，也可跳出指定循环。\",\"// 跳出指定循环 loop1: for (let i = 0; i < 3; i++) { console.log(i, 'i') loop2: for (let j = 0; j < 3; j++) { if (j > 1) break loop1 console.log(j, 'j') } } \"]},\"272\":{\"h\":\"while & do...while\",\"t\":[\"适用于次数未知的循环。\",\"while (condition) { statement } do { statement } while (condition) \",\"两者区别\",\"do...while 至少循环一次，while 一次都不执行。\"]},\"273\":{\"h\":\"for...in & for...of\",\"t\":[\"遍历对象。\",\"for...in用于可枚举(enumerable)类型的数据(对象，数组，字符串)，遍历的是key，遍历类数组(dom节点列表...)时会遍历到原型中去。\",\"// eg const domarr = document.querySelectorAll('input') for (let i in domarr) { console.log(i) // length、entries、values... } \",\"for...of用于可迭代(iterator)类型的数据(数组，字符串)，遍历的是value。\"]},\"274\":{\"h\":\"函数\",\"t\":[\"将一系列代码（逻辑）打包成一个整体，实现分步解决问题，将复杂的问题简单化。\"]},\"275\":{\"h\":\"函数类型\",\"t\":[\"函数声明\",\"开头以关键字 function 声明。\",\"function name () {} \",\"函数表达式\",\"与运算符一起使用的函数为函数表达式。\",\"const fun = function name() {} \",\"函数执行\",\"又称函数调用 fun()\",\"注意\",\"在进行一些函数赋值的时候注意区分函数执行 name() 和函数 name\"]},\"276\":{\"h\":\"函数的输入与输出\",\"t\":[\"输入：函数调用时向函数内部传递数据（实参），在函数声明或表达式中通过变量进行接收（形参）。 此处的变量不需要声明，会自动在函数内部声明。\",\"形参和实参一一对应，实参比形参多，多余的部分会被舍去。形参比实参多，会在函数中定义但不会接收参数。\",\"剩余参数：在形参最后面，通过 ...声明 的形式对未被形参接收的实参进行打包。\",\"function name (name, ...params) { // typeof params Array } name('dw', 23, 'shanghai') \",\"输出：函数的返回值。使用 return 进行返回，默认返回 undefined。函数一旦返回内容表示函数执行完成，后面的代码将不再执行。\"]},\"277\":{\"h\":\"箭头函数\",\"t\":[\"简化了函数，降低了书写成本。\",\"// 普通函数 function name(params) {} // 箭头函数 (params) => {} \",\"当 return 只有一条语句时可以省略 return。可删除 {} 或改为 ()。\",\"参数只有一个时可省略参数的 ()。\",\"function name() { return 'dw' } const name = () => 'dw' const name = name => name \"]},\"278\":{\"h\":\"形参默认值\",\"t\":[\"调用函数时，未对其传参会使用参数的默认值。\",\"const name = (name = 'dw') => name \",\"提示\",\"函数在执行时才会去访问变量。\"]},\"279\":{\"h\":\"运算符\"},\"280\":{\"h\":\"算术运算符\",\"t\":[\"算术运算符使用数值 (字面量或者变量) 作为操作数并返回一个数值。标准的算术运算符就是加减乘除 (+ - * /)。\",\"Operator\",\"Description\",\"求余 (%)\",\"二元运算符。返回相除之后的余数。\",\"自增 (++)\",\"一元运算符。操作数加一。\",\"自减 (--)\",\"一元运算符。操作数减一。\",\"++i 和 i++ 的区别\",\"++i 是先自加再使用，i++ 先使用再自加。\"]},\"281\":{\"h\":\"三目运算符\",\"t\":[\"又称条件运算符，是 JavaScript 中唯一需要三个操作数（三元）的运算符。运算的结果根据给定条件在两个值中取其一。 表达式为 true 返回值1，否则返回值2。\",\"// 条件 ? 值 1 : 值 2 const age = age > 23 ? 23 : age \"]},\"282\":{\"h\":\"逗号运算符\",\"t\":[\"对两个操作数或表达式进行求值并返回最终操作数或表达式的值。\",\"(3, 33) // 33 3 === 3, 3 === 33 // false \"]},\"283\":{\"h\":\"逻辑运算符\",\"t\":[\"&&（与）\",\"得出一个布尔值，两个条件同时满足才为 true。\",\"底层运算：（A&&B）A 为真返回 B，A 为假返回 A。\",\"||（或）\",\"只要一个表达式为真则为真，两个表达式同时为假则为假。\",\"底层运算：（A||B）A 为真返回 A，A 为假返回 B。\",\"!（非）\",\"取反，强制返回布尔类型。\",\"惰性判断法则\",\"已经能得出结果（或里遇到真，与里遇到假），绝不会编译执行后面的代码。\"]},\"284\":{\"h\":\"判断运算符\",\"t\":[\"标准的大于、小于、等于、大于等于、小于等于（>、<、==/===、>=、<=）。返回布尔类型值，优先转为数值进行比较。 字符串进行比较时通过 ASCLL 码进行比较。\",\"数字 < 大写字母 < 小写字母\",\"等于（==）和全等于（===）的区别\",\"== 会进行类型转换，=== 不会进行类型转换。\",\"== 先进行类型转换再进行比较。\",\"=== 会先判断数据类型是否相等，再判断两边的值是否相等（对象数据类型判断时判断是内存地址，是否指向同一个内存区域）。\"]},\"285\":{\"h\":\"运算符优先级\",\"t\":[\"运算符的优先级，用于确定一个表达式的计算顺序。在你不能确定优先级时，可以通过使用 () 增加优先级。\",\"与或非 < 判断 < 加减 < 乘除、% < ++...\"]},\"286\":{\"h\":\"类型转换\",\"t\":[\"类型转换分为隐式转换（自动转换）和显示转换（强制转换）。隐式转换通常发生在算术表达式中， 操作数类型不一样自动转换成能够计算的类型，本质不会改变变量原来的值。而显示转换需要手动调用一些方法进行转换。 例如 Number、Boolean、parseInt、parseFloat 等。\"]},\"287\":{\"h\":\"转字符串\",\"t\":[\"可通过 String 方法进行强制转换。\",\"除复杂类型外其他类型转字符串都是直接加上引号。\",\"原理(复杂类型转字符串)\",\"任何对象身上都有一个 toString 方法，对象转字符串的本质是调用 toString（可重写toString方法）， 对象和数组 toString 返回的内容不一样。\",\"普通对象\",\"大多数情况下对象转字符串的值为 \\\"[object Object]\\\"。DOM 结构转字符串会得到 \\\"[object HTMLHeadElement]\\\"。\",\"对象调用方法首先会调用自身的，自身没有其次再是原型。\",\"const obj = {} obj.toString() // \\\"[object Object]\\\" const obj = { toString () { return 1 } } obj.toString() // 1 \",\"数组：直接返回数组中的内容。\",\"函数：直接返回函数整体，底层还是调用 toString。\",\"function myToString () {} // 重写函数中的toString myToString.toString = () => {} \"]},\"288\":{\"h\":\"转数值\",\"t\":[\"可通过 Number、parseInt、parseFloat 方法进行强制转换。\",\"字符串转数值\",\"使用运算符（+、-、*、/）进行转换，如果操作数不是个数字返回 NaN。 对空字符串或 null 操作时返回 0。\",\"+ '3' // 3 - '3' // -3 '6' * 1 // 6 '9' / 1 // 9 + 'jbk' // NaN \",\"布尔转数值\",\"// true 为 1，false 为 0。 + true // 1 + false // 0 \",\"对象转数值\",\"对象一般是不能转数值的。在进行转数值时首先会尝试调用 valueOf 的方法，然后再去调用 toString。valueOf 优先级高于 toString。 代码底层还是调用的 toString。\",\"const obj = {} obj + 1 // [object Object]1 const obj = { valueOf () { return 33 } } obj + 1 // 34 \",\"数组在进行转数值时，先执行 toString 方法（在这之前也会先调用 valueOf），然后尝试字符串转数值。\",\"const arr = [] arr + 1 // '1' arr.valueOf = () => 33 arr + 1 // 34 \",\"函数转不了数值。\"]},\"289\":{\"h\":\"转布尔\",\"t\":[\"可通过 Boolean、!(取反) 方法进行强制转换。\",\"转布尔类型的六大假值：''、0、null、undefined、false、 NaN\"]},\"290\":{\"h\":\"js全局方法\",\"t\":[\"Number、Boolean、String、parseInt、parseFloat...\"]},\"291\":{\"h\":\"作用域\",\"t\":[\"变量生效的范围，不能对外延生。只要作用域还能被访问，那么这个作用域就不会消失。\",\"作用域在变量声明阶段就已经确定了。\",\"分为：\",\"全局作用域：当前文件都能访问。\",\"块级作用域：只能在当前代码块中访问。\",\"函数作用域：只能在当前函数中访问。\",\"层级关系\",\"全局 > (块级、函数)\"]},\"292\":{\"h\":\"声明周期\",\"t\":[\"当进入作用域时作用域瞬间出现，程序执行完离开作用域消失（所有内容都会消失，保证了内存空间的充足）。作用域不会立即消失，js 的垃圾回收机制会判断作用域里的变量是否被引用，没有则回收该作用域。\"]},\"293\":{\"h\":\"变量在作用域中的特点\",\"t\":[\"{ var name = 'dw' // 提升到全局作用域 } function getName () { var name = 'dw' // 受限于函数作用域，外部不能进行访问 } \",\"var、let、const的区别\",\"var 是ES5的内容。会忽略块级作用域，自动提升到上一层作用域；受限于函数作用域。\",\"let、const 是ES6的内容，会识别块级和函数作用域。\",\"变量的访问\",\"首先会在当前作用域进行查找 true 返回，false 继续向上层作用域查找，直至顶层作用域，最终 false 抛出一个错误。\",\"作用域链：访问一个变量时，首先会在当前作用域中查找，然后依次向上层作用域中查找直到顶层作用域。这样由多个作用域构成的链表叫作用域链。\"]},\"294\":{\"h\":\"变量提升\",\"t\":[\"javascript 代码执行是从上往下依次执行的。本质上的执行是分为两个阶段的。\"]},\"295\":{\"h\":\"预编译阶段\",\"t\":[\"此阶段会进行内存空间的开辟、变量存储位置的分配、校验语法错误、确定作用域之间的关系...， 读取变量声明，对变量进行提升（在当前作用域最前面声明所有变量，var 会忽略块级作用域，提升到上一层作用域）。 只是对变量进行提升了并没有赋值，赋值在执行阶段。\",\"let、const 也会进行变量提升，只是在初始化（执行阶段）时才能访问，在这之前是锁死的状态（暂时性死区）。\",\"{ console.log(name) // undefined var name = 'dw' // 等价于 var name console.log(name) name = 'dw' //console.log(name, name2) //报错，暂时性死区 let name = 'dw' const name2 = 'dgg' console.log(name, name2) } \",\"函数声明提升时会将函数整体提升到最前面(函数一等公民，在声明的时候就已经赋值)。 函数在变量提升时会跳出块级作用域，但函数内容还保留在块级作用域中。\",\"getName() // dw function getName () { return 'dw' } console.log(getName) // undefined { function getName () { console.log('dw') } } getName() // dw // 特殊列子 if(function getName(){console.log(666)}){ console.log(getName) //报错，function dw10(){console.log(666)} 是表达式,不会变量提升 } \",\"函数表达式和函数提升的区别\",\"函数表达式不会进行变量提升（不会将函数体提升），而函数会（整体提升）。\",\"总结\",\"变量提升的位置：作用域最前面。\",\"var在提升时会跳出块级作用域，不会跳出函数作用域。\",\"let、const提升时不会跳出块级作用域，更不会跳出函数作用域。\",\"函数提升时会跳出块级作用域，函数变量进行了提升，函数体仍保留在块级作用域中。\"]},\"296\":{\"h\":\"执行阶段\",\"t\":[\"读取一行解释一行，严格遵循执行循序。\"]},\"297\":{\"h\":\"立执行函数\",\"t\":[\"将匿名函数或函数声明转化成函数表达式，再在函数后加()让其立即执行。执行完立即销毁。\",\"// 建议在前面加上分号，防止表达式拼接报错 ;(function () { // 匿名函数 return 'dw' })() // 接收参数 ;(function (name) { return name })('dw') \",\"优点：创建了一个私有作用域，不会造成变量污染。\"]},\"298\":{\"h\":\"闭包\",\"t\":[\"一个函数 A 保留另一个函数 B 的作用域，且 A 还能被访问，则 B 的作用域就被保留了。次数 A 称为闭包函数。\",\"function getPassword () { let pwd = '0418' return () => { return pwd } } \",\"优点\",\"函数在执行后作用域被保留了，保留了某些特定的状态。\",\"不会形成变量污染，拥有独立作用域，保证了变量的私有性。\",\"缺点\",\"作用域没有消失，内存被占用了。闭包使用过多会导致内存不足造成内存泄露（递归）。\",\"解决方案： \",\"主动刷新 window.onload()\",\"移除引用 = null\"]},\"299\":{\"h\":\"深入函数\"},\"300\":{\"h\":\"属性\",\"t\":[\"length：函数形参的个数。\",\"arguments：以数组的形式存储函数的实参，只能在函数中访问 arguments，且访问是当前函数的 arguments。arguments.callee 指代的是参数所属的函数（本体）。\",\"注意\",\"箭头函数是没有 arguments 属性的，会去外层寻找。 [[Scopes]] 函数的作用域\",\"name：函数名称，不能修改。匿名函数的名称是空字符串，可通过arguments.callee.name获取。\",\"(function () { console.log(arguments.callee.name) })() \"]},\"301\":{\"h\":\"this 对象\",\"t\":[\"存在于函数中，指向调用函数的主体对象（谁调用 this 指向谁）。全局中 this 默认指向 window 对象。\",\"console.log(this) // window function getName () { console.log(this) // window } getName() \",\"注意\",\"箭头函数的 this 绑定在上下文中（即上层函数或window），且不能改。\",\"回调函数的 this 默认指向 window。可使用箭头函数、bind(返回一个函数)改变this指向。\",\"const obj = { name: 'this.name' } function fun (cb) { cb() } fun ((function () { console.log(this.name) // this.name }).bind(obj)) // bind 返回一个函数 \"]},\"302\":{\"h\":\"改变 this 指向\",\"t\":[\"call\",\"/** * call 的参数 * 1. 需要绑定的this的主体对象，主动传入会指向传入的那个对象 * 不传入或写null会指向window。 * 2. 传递的参数，可以是多个 */ const obj = { name: 'dw', age: 23 } function getName (work) { console.log(this.name) // dw } getName.call(obj, 'it') \",\"apply\",\"/** * 参数： * 1. 需要绑定的this的主体对象，主动传入会指向传入的那个对象， * 不传入或写null会指向window。 * 2. 函数的参数，数组形式 */ const obj = { name: 'dgg', age: 23 } function getName (a, b, c) { console.log(this.name, a, b, c) // dgg 1, 2, 3 } getName.apply(obj, [1, 2, 3]) \",\"call 和 apply 的区别\",\"函数参数接收不同，apply 以数组的形式进行参数接收，call 则除了第一个参数外其余全是函数的参数（单个参数形式进行接收）。\",\"bind\",\"返回一个待执行的函数，该函数执行完 this 才算改变完成。\",\"特点：\",\"会强行改变this，改变之后无法修改回来。\",\"调用 bind 时可传入部分参数 A，执行返回函数是可传入部分参数 B，最终执行结果会将A，B合并到一起整体执行。\",\"/** * 参数： * 1. 需要绑定的this的主体对象，主动传入会指向传入的那个对象， * 不传入或写null会指向window。let 和 const 定义的变量不属于顶层对象 window。 * 2. 函数的参数，同call */ const obj = { name: 'xww', age: 23 } function getName (age, date) { console.log(this.name, age, date) } const fun = getName.bind(obj, obj.age) fun('2022-8-29') \"]},\"303\":{\"h\":\"字符串\",\"t\":[\"字符串声明见数据类型。本质是通过 new String 方法创建一个对象（包装对象），对这个对象进行求值（valueOf）。 操作的是该包装对象下的方法，操作完自动消失，再次操作时从新创建一个新的包装对象。\",\"字符串的访问是从下标0开始的。length 属性可获取字符串的长度（只读不可修改），转义字符 \\\\ 是不会统计到长度中的。\"]},\"304\":{\"h\":\"charAt\",\"t\":[\"获取下标对应的字符。\",\"'dw'.charAt(1) // w // 会自动转为数值类型 'dw'.charAt('1') // w // 不传&空字符串&非数值字符串返回一个字符 'dw'.charAt() // d \"]},\"305\":{\"h\":\"chatCodeAt\",\"t\":[\"获取下标对应字符的 ASCII 码，参数同 charAt。\"]},\"306\":{\"h\":\"String.fromCharCode\",\"t\":[\"获取 ASCII 码对应的字符。\"]},\"307\":{\"h\":\"concat\",\"t\":[\"拼接字符串。与 + 拼接同效。\"]},\"308\":{\"h\":\"includes\",\"t\":[\"判断字符串是否包含该字符串。\",\"'this name'.includes('name') // true \"]},\"309\":{\"h\":\"indexOf / lastIndexOf\",\"t\":[\"获取字符对应的下标，未查询到返回 -1。\",\"/** * lastIndexOf 同 indexOf * 区别：lastIndexOf 从后往前查询 */ 'this name'.indexOf('name') // 5 // 指定位置查询 'this name'.indexOf('name', 6) // -1 \"]},\"310\":{\"h\":\"replace\",\"t\":[\"替换满足条件的第一个元素，返回修改后的字符串。可使用正则匹配。\",\"/** * 参数： * 1. 要替换的字符串 * 2. 替换的目标字符串 */ 'this name'.replace(' ', '.') // this.name \"]},\"311\":{\"h\":\"slice\",\"t\":[\"截取字符串，返回截取的内容。推荐使用。\",\"/** * 参数： * 1. 截取开始下标 * 2. 截取结束下标，不包含当前下标位置的字符 */ 'this name'.slice(5, 9) // name // 未传入参数截取全部字符 'this name'.slice() // this name // 传入一个非负数的值，从当前位置截取到最后 'this name'.slice(5) // name // 传入一个负数的值，截取字符串后面整数位的字符 'this name'.slice(-4) // name // 特殊：参数一为整数/0，参数二为负数。意为排除前面几位并且排除后面几位。 'this name'.slice(1, -1) // his nam \"]},\"312\":{\"h\":\"substr / substring\",\"t\":[\"截取字符串，返回截取的内容。不传参返回全部内容。\",\"/** * substr 参数： * 1. 截取的开始位置，可正可负。负数返回字符串后面的内容。 * 2. 截取的长度 */ 'this name'.substr(5, 4) // name 'this name'.substr(-4) // name /** * substring 参数： * 1. 截取的开始位置，可正可负。负数从0开始截取 * 2. 截取的结束位置，不包含当前下标位置的字符 */ 'this name'.substring(5, 9) // name 'this name'.substring(-9, 4) // this \"]},\"313\":{\"h\":\"split\",\"t\":[\"以指定字符切割字符串，返回一个数组。\",\"'this name'.split('') // [\\\"t\\\", \\\"h\\\", \\\"i\\\", \\\"s\\\", \\\" \\\", \\\"n\\\", \\\"a\\\", \\\"m\\\", \\\"e\\\"] 'this name'.split(' ') // ['this', 'name'] \"]},\"314\":{\"h\":\"toUpperCase / toLowerCase\",\"t\":[\"大小写转换。\"]},\"315\":{\"h\":\"trim\",\"t\":[\"去除字符串首位空格。\"]},\"316\":{\"h\":\"数组\",\"t\":[\"包含了多个值的一个集合或列表。\",\"// 1. 语法糖形式 const arr = [] /** * 2. new 的方式创建 * 参数：如果是数值类型且个数为1会创建一个该参数长度的数组，其他形式会以参数作为值创建数组 */ const arr = new Array() new Array(3) // [empty × 3] new Array('this', 'name') // ['this', 'name'] \"]},\"317\":{\"h\":\"fill\",\"t\":[\"填充数组每一项，返回原数组。\",\"new Array(33).fill(33) // [33, 33, ...33] \"]},\"318\":{\"h\":\"length\",\"t\":[\"获取数组的长度。可以修改，大于原有长度会创建 n 个 empty 元素；小于原有长度会移除多出的元素， 修改回来无法再访问之前的元素。\"]},\"319\":{\"h\":\"concat\",\"t\":[\"拼接数组。返回一个新数组，原数组不变。\",\"['this'].concat('name') // ['this', 'name'] // 数组会拆分再进行拼接 ['this'].concat(['name', 'hello world']) // ['this', 'name', 'hello world'] \"]},\"320\":{\"h\":\"flat\",\"t\":[\"对数组进行扁平化。只会处理一层，不会深层处理。\",\"['this', ['name', ['d', 'w']]].flat() // [\\\"this\\\", \\\"name\\\", ['d', 'w']] \"]},\"321\":{\"h\":\"reverse\",\"t\":[\"反转数组。对原数组进行操作，返回数组反转后的结果。\"]},\"322\":{\"h\":\"join\",\"t\":[\"将数组以某种字符进行拼接，默认逗号，返回拼接后的字符串。\",\"['this', 'name'].join('.') // this.name \"]},\"323\":{\"h\":\"push / unshift\",\"t\":[\"向数组添加元素。操作原数组，返回数组改变后的长度。支持多个参数。\",\"push 向末尾添加，unshift 向数组开头添加\"]},\"324\":{\"h\":\"pop / shift\",\"t\":[\"删除数组元素。操作原数组，返回被删除的那一项。\",\"pop 删除数组最后一项，shift 删除数组第一项\"]},\"325\":{\"h\":\"splice\",\"t\":[\"对数组进行增、删、改（先删除后添加），原数组上操作。返回删除的内容。\",\"/** * 参数说明： * 1. 操作开始的位置（下标），包含下标的元素。 * 2. 删除的个数（0不删除） * 3. 新元素，可多个 */ [1, 2, 3].splice(0, 1) // [2, 3] [1, 2, 3].splice(3, 0, 1, 2, 3) // [1, 2, 3, 1, 2, 3] // 负数表示从后面开始 [1, 2, 3].splice(-1) // [1, 2] [1, 2, 3].splice(-1, 0) // [1, 2, 3] // 从下标（包含）开始删除后面全部元素 [1, 2, 3].splice(0) // [] \"]},\"326\":{\"h\":\"forEach\",\"t\":[\"遍历数组。\",\"/** * 参数说明： * 1. 回调函数（函数以参数的形式传给函数。保证代码的执行顺序） * item：数组每一项 * index：当前项在数组中的下标 * array：当前循环的数组 * 2. 回调函数的this指向，默认window。当回调是箭头函数时遵循箭头函数的绑定法则。 */ ['this', 'name'].forEach((item, index, array) => {}, window) \",\"注意\",\"类数组不能使用数组的方法。可通过改变 this 指向的方法进行访问。\"]},\"327\":{\"h\":\"find\",\"t\":[\"查找满足条件的第一项并返回，遇到 true 直接结束该函数不会继续判断。参数同 forEach\",\"[{ name: 'dw' }, { name: 'name' }].find((item, index, array) => { return item.name === 'dw' }) // { name: 'dw' } \"]},\"328\":{\"h\":\"every / some\",\"t\":[\"every 判断数组中的每一项是否满足条件，返回一个布尔值。 在执行过程中遇到 false 直接结束该函数（整体为 true 才返回 true）。参数同 forEach。\",\"some 则与 every 相反。判断数组中是否至少有一项满足条件。遇到 true 直接结束该函数。\",\"[1, 3, '3'].every(item => typeOf item === 'number') // false [1, 3, '3'].some(item => typeOf item === 'number') // true \"]},\"329\":{\"h\":\"filter\",\"t\":[\"筛选满足条件的所有元素，返回一个新数组。参数同 forEach。\",\"[1, 3, 3, 168].filter(item => item === 3) // [3, 3] \"]},\"330\":{\"h\":\"map\",\"t\":[\"对数组每一项进行操作（修改），返回修改过后的新数组。return 出去的元素就是新数组的元素。 注意：操作对象（属于引用类型，对应的是内存中的地址）时，原数组也会改变\",\"[1, 2, 3].map(item => item * 3) // [3, 6, 9] \"]},\"331\":{\"h\":\"reduce\",\"t\":[\"对数值进行累加，返回最终累加的值。 迭代时以初始值作为起点，每次迭代值依次与初始值进行计算，并将结果作为新的初始值。\",\"/** * 参数说明： * 1. 回调函数 * 迭代体。每次计算的结果 * item：数组每一项 * index：当前项在数组中的下标 * array：当前循环的数组 * 2. 迭代初始值 * 未传初始值默认数组的第一项（第一次迭代会从第二项开始） */ [1, 2, 3].reduce((sum, item) => sum + item, 0) // 6 \"]},\"332\":{\"h\":\"sort\",\"t\":[\"对数组进行排序，对原数组进行操作，返回排序后的数组。a - b 升序；b - a 降序。\",\"根据回调函数返回值进行排序：\",\">= 0 a b 两项不交换位置\",\"< 0 a b两项交换位置\",\"/** * 参数说明： * 1. 回调函数 * a：数组当前项 * b：数组下一项 */ [1, 3].sort((a, b) => a - b) // [1, 3] [1, 3].sort((a, b) => b - 1) // [3, 1] \",\"打乱一个数组\",\"[...].sort(() => Math.random() - 0.5)\"]},\"333\":{\"h\":\"解构\",\"t\":[\"以 ... 的形式进行解构。写入时进行打包（剩余参数），读取时进行分解展开。解构的元素不能单独存在，必须由对象或数组包裹。 对实际数组或对象使用时，拆分数组（按下标解构）或对象中的每一个元素，字符串也可以解构。\"]},\"334\":{\"h\":\"对象的解构\",\"t\":[\"在读取时结构。\",\"核心：左右结构一样，如果属性名匹配上，那么属性值完成匹配。\",\"语法糖：如果声明的变量与属性名同名 name:name 可简写为 name。\",\"例子\",\"// 是一条赋值语句。如果传入的是变量，会根据下标匹配值 let [...arr] = [1,2,3] // [1,2,3]。类似剩余参数 let [arr] = [1,2,3] // 1 // 对象解构 const { name, age } = { name: 'name', age: 23 } // name, 23 // 会解构成以下标为属性，1,2，3为值的对象 let {...arr} = [1,2,3] // {0: 1, 1: 2, 2: 3} \"]},\"335\":{\"h\":\"使用解构进行变量交换\",\"t\":[\"// 数组解构是按位置传的（效率比较低） [a,b] = [b,a] // 借助第三个变量 let temp = arr[1] arr[1] = arr[3] arr[3] = temp \"]},\"336\":{\"h\":\"数学对象(Math)\",\"t\":[\"PI：圆周率。\",\"E：自然常数。\",\"abs：绝对值。整数的绝对值是本身，负数的绝对值是相反数。常用做求距离。\",\"floor：向下取整，返回一个不大于它的最大整数。\",\"ceil：向上取整，返回一个比他大的最小整数。\",\"round：四舍五入。\",\"trunc：去除小数，返回一个整数。\",\"random：随机数，返回一个0-1之间的16位数（包括0不包括1）[0,1)。\",\"min/max：求最小/大值，返回最小/大的那一个数。至少两个参数。\",\"pow(a, b)：求次方数。a 是底数， b 是指数。Math.pow(3, 2) -> 9\"]},\"337\":{\"h\":\"三角函数(角度和边的比值关系)\",\"t\":[\"用弧度值单位表示（360deg = 2Math.PI）。\",\"勾股定理：a^2 + b^2 = c^2\",\"sin：对边比斜边。\",\"cos：邻边比斜边。\",\"tan：对边比邻边。\",\"特殊的等腰三角形比值关系\",\"1:1:Math.pow(2,1/2)\"]},\"338\":{\"h\":\"定时器\",\"t\":[\"定时器属于异步代码。同步代码执行完成后异步代码才开始计时执行，异步代码根据时间或触发先后循序执行。\"]},\"339\":{\"h\":\"setTimeout\",\"t\":[\"延迟执行。本质是去异步队列注册一个任务，并反该唯一任务id，随着注册次数的增加而增加。 可通过 clearTimeout 方法传入任务 id 进行定时器的清除。\",\"/** * 参数说明： * 1：回调函数 * 2：延迟执行时间，毫秒值。 */ const timer = setTimeout (() => {}, 3000) // 清除定时器 clearTimeout(timer) \"]},\"340\":{\"h\":\"setInterval\",\"t\":[\"每间隔一段时间执行一次。同 setTimeout。间隔时间必须大于等于 1，不能是 0。 可通过 clearInterval 方法传入任务 id 进行定时器的清除。 做动画欠佳，可能会出现卡顿、掉帧、延迟。\",\"/** * 参数说明： * 1：回调函数 * 2：间隔时间，毫秒值。 */ const timer = setInterval (() => {}, 3000) // 清除定时器 clearInterval(timer) \"]},\"341\":{\"h\":\"请求动画帧\",\"t\":[\"requestAnimationFrame 等待一次渲染，在下次渲染时继续执行。严格的与页面刷新频率一致。\",\"function fn () { console.log('半导体明天大涨~') requestAnimationFrame (fn) } fn() \"]},\"342\":{\"h\":\"进阶\"},\"343\":{\"h\":\"回调地狱\",\"t\":[\"回调函数中嵌套回调函数。代码可读性差。\",\"setTimeout(() => { console.log(1) setTimeout(() => { console.log(2) setTimeout(() => { console.log(3) }, 3000) }, 2000) }, 1000) \"]},\"344\":{\"h\":\"解决回调地狱的方法\",\"t\":[\"1. Promise\",\"new Promise((resolve, reject) => { console.log(1) resolve() }).then(() => { console.log(2) return new Promise(resolve => { resolve() }) }).then(() => { console.log(3) }).catch(() => { }).finally(() => { }) \",\"2. async/await\",\"async function test() { const a1 = await new Promise(resolve => resolve(1)) const a2 = await new Promise(resolve => resolve(2)) const a3 = await new Promise(resolve => resolve(3)) } \"]},\"345\":{\"h\":\"链式调用\",\"t\":[\"让代码拥有执行循序。调用方法执行时返回当前调用方法的主体对象，使其可继续调用。\",\"const sum = { num: 0, add (add_num) { this.num += add_num return this }, sub (sub_num) { this.num -= sub_num return this }, sum () { return this.num } } \"]},\"346\":{\"h\":\"递归\",\"t\":[\"函数自己调用自己的过程。递归没有出口（无限递归）会导致栈溢出报错。\",\"栈溢出：作用域和调用栈越来越大，导致内存溢出。\",\"解决办法：搞清楚递归的结束条件，一开始就写出结束条件。\",\"递归思想：抽象问题（简单化），反向思考(从后往前)，不必考虑具体细节（交给函数实现）。\"]},\"347\":{\"h\":\"例子\",\"t\":[\"/** * 1. 1-n的阶乘 */ const jc = n => { if (n === 1) return 1 return n * jc(n - 1) } /** * 1-n的和及1-n的奇数和 */ const sum = n => { if (n === 1) return 1 return n + sum(n - 1) } const oddSum = n => { if (n % 2 === 0) n -= 1 if (n === 1) return 1 return n + oddSum(n - 1) } /** * 斐波拉契求和(第n项的值) * 后一项等于前两项的和 * 1 1 2 3 5 8 13... */ const fblq = n => { if (n === 2 || n === 1) return 1 return fblq(n - 1) + fblq(n - 2) } /** * 汉罗塔 * n个盘子 从A经过B移动到C * 1个盘子： A -> C * 2个盘子：A -> B、A -> C、B -> C * n个盘子：1个盘子 和 （n-1）个盘子 * f(1) = 1 * A -> C * f(n-1):看做一个整体 * （n-1）：A -> B * 1：A -> C * （n-1）：B -> C */ // start:起始位置 temp: 跳板 end:结束位置 const hlt = (n, start, temp, end) => { if (n === 1) return console.log(`${start} --> ${end}`) hlt(n - 1, start, end, temp) hlt(1, start, temp, end) hlt(n - 1, temp, start, end) } \"]},\"348\":{\"h\":\"拷贝\"},\"349\":{\"h\":\"深拷贝\",\"t\":[\"返回一个新的对象，对象之间的内存地址不存在引用关系。\",\"利用递归遍历对象的每一个属性，把每一个属性进行拷贝。\",\"const checkType = data => { return ({}).toString.call(data).slice(8, -1).toLowerCase() } const deepClone = data => { let cloneObj = null if (!['array', 'object'].includes(checkType(data))) return data if (checkType(data) === 'object') { cloneObj = {} for (let i in data) { cloneObj[i] = deepClone(data[i]) } } if (checkType(data) === 'array') { cloneObj = [] data.forEach(item => { cloneObj.push(deepClone(item)) }) } return cloneObj } \"]},\"350\":{\"h\":\"浅拷贝\",\"t\":[\"直接引用另一个对象的内存地址 let obj2 = obj，对象之间存在引用关系。 当一个对象中的属性值改变后，另一个对象中的值也会随之改变。\"]},\"351\":{\"h\":\"节流和防抖\",\"t\":[\"利用定时器解决高频操作存在的操作无效的问题。\"]},\"352\":{\"h\":\"防抖\",\"t\":[\"将高频率的操作结束或停顿下来，以最后一次为准（数据提交，请求服务器、实时搜索）。\",\"let timer = null document.onclick = () => { clearTimeout(timer) timer = setTimeout(() => { console.log('节流') }, 2000) } \"]},\"353\":{\"h\":\"节流\",\"t\":[\"将高频率的操作以均匀的时间进行触发。\",\"let switchStatus = false document.onclick = () => { if (switchStatus) return switchStatus = true setTimeout(() => { switchStatus = false }, 2000) console.log('防抖') } \"]},\"354\":{\"h\":\"正则表达式\",\"t\":[\"描述一个规则，用来跟字符串进行匹配。严格区分大小写、循序、空格。\"]},\"355\":{\"h\":\"正则声明\",\"t\":[\"new regExp()\",\"同构造函数进行创建。这种形式可以拼接字符串，但写着比较繁琐。\",\"参数说明：\",\"正则表示式规则。\",\"匹配模式。 i：不区分大小写； g：全局搜索，通过循环可以遍历所有的匹配结果。正则表达式能记录状态，lastIndex 属性表示下次匹配开始的位置； m：换行匹配；\",\"const reg = new regExp('this.name', 'i') reg.test('THIS.NAME = testname') // true \",\"语法糖//\",\"将规则写于 // 之间，匹配模式写在最后。特殊字符使用反斜杠 \\\\ 进行转义。 这种形式简单明了，但不能拼接变量。\",\"const reg = /this.name/i reg.test('THIS.NAME') // true \"]},\"356\":{\"h\":\"匹配方法\",\"t\":[\"test：匹配字符串是否满足条件，返回一个布尔类型的值。\",\"exec：匹配字符串，返回第一个满足条件的相关描述信息（数组），会保留上次匹配的结果从当前下标继续匹配直到为 null，未匹配到返回 null。\",\"const str = 'adjfkajefaefkjif' const reg = /a/g while(result = reg.exec(str)){ // [\\\"a\\\", index: 9, input: \\\"adjfkajefaefkjif\\\", groups: undefined] console.log(result) } \",\"test 与 exec的区别\",\"参数都是与规则进行匹配的字符串，单两者返回的内容不一样。\"]},\"357\":{\"h\":\"规则\",\"t\":[\"表达式\",\"描述\",\"列子\",\"^\",\"指定字符开头\",\"/^dw/.test('dw this is name')\",\"$\",\"指定字符结尾\",\"/dw$/.test('my name is dw')\",\"[]\",\"匹配 [] 中任意一位字符。[] 中使用 ^ 表示取反，排除字符。[0-9]、[a-z]、[A-Z]。\",\"/[0-9]/.test('num is 418')\",\"\\\\d\",\"匹配单个任意数字\",\"/\\\\d/.test(418)\",\"\\\\D\",\"匹配单个任意非数字\",\"/\\\\D/.test('opk')\",\"\\\\s\",\"匹配任意空格\",\"/\\\\s/.test('a b')\",\"\\\\S\",\"匹配任意非空格\",\"/\\\\s/.test('a++b')\",\"\\\\w\",\"匹配任意数字、字母、下划线\",\"/\\\\w/.test('_')\",\"\\\\W\",\"匹配任意非数字、字母、下划线\",\"/\\\\W/.test('#')\",\".\",\"任意字符\",\"/./.test('sdfajdsfoie9320#$&*')\",\"* 或 {0,}\",\"至少出现0次\",\"/a*/.test('sdfajdsfoie9320#$&*')\",\"+ 或 {1,}\",\"至少出现1次\",\"/a+/.test('sdfajdsfoie9320#$&*')\",\"? 或 {0,1}\",\"出现0次或出现1次\",\"/a?/.test('sdfajdsfoie9320#$&*')\",\"{n}\",\"出现n次\",\"/a{3}/.test('sdfajdsfoie9320#$&*')\",\"{n,}\",\"出现0次或出现1次\",\"/a{1,}/.test('sdfajdsfoie9320#$&*')\",\"{,n}\",\"最多出现n次\",\"/a{, 3}/.test('sdfajdsfoie9320#$&*')\",\"()\",\"将 () 内的内容作为一个整体进行匹配。在里面使用 `\",\"` 做或的选择\"]},\"358\":{\"h\":\"量词的选择量\",\"t\":[\"贪婪模式。尽可能多的匹配结果，默认匹配方式。\",\"非贪婪模式。尽可能少的匹配结果，量词 {} 后面加 ?。\",\"const str = 'dwwwww' const reg = /dw{2,5}/ // 默认进行贪婪模式匹配 const reg2 = /dw{2,5}?/ // 在量词后面加？就会进行非贪婪模式匹配 reg.exec(str6) // [\\\"dwwwww\\\", index: 0, input: \\\"dwwwww\\\", groups: undefined] reg2.exec(str6) // [\\\"dww\\\", index: 0, input: \\\"dwwwww\\\", groups: undefined] \"]},\"359\":{\"h\":\"捕获\",\"t\":[\"() 表示捕获组。(?<name>) 的方式进行捕获组命名。\",\"非命名捕获组：使用 $num (num从1开始) 的方式进行获取。\",\"命名捕获组：使用 $<name> 的方式进行获取。\",\"const date = '2020-3-28' const reg = /(?<year>\\\\d{4})-(?<month>\\\\d{1,2})-(?<day>\\\\d{1,2})/ // 非命名 date.replace(reg,'$3-$2-$1') // 28-3-2020 // 命名 date.replace(reg,'$<day>-$<month>-$<year>') // 28-3-2020 //replace第二个参数可以是一个函数,用一个剩余参数接收正则表达式的匹配的结果 console.log(date.replace(reg,function(...result){ console.log(result) console.log(`${result[2]}-${result[1]}-${result[3]}`) })) \"]},\"360\":{\"h\":\"断言\",\"t\":[\"断言在前\",\"肯定断言：（?<=约束条件）规则\",\"否定断言：（?<!约束条件）规则\",\"断言在后\",\"肯定断言：规则（?=约束条件）\",\"否定断言：规则（?!约束条件）\",\"const str = 'sherry(13344445555);阿飞(14455556666);银时(15566666666);' const reg = /(?<=sherry\\\\()\\\\d{11}(?=\\\\))/ reg.exec(str) const str2 = '银时.mp3;银时.mp4;银时.mp4;阿飞.avi;' const reg2 = /(?<=银时).*?(?=;)/g let res = null while (res = reg2.exec(str2)) { console.log(res) } \"]},\"361\":{\"h\":\"面向对象\",\"t\":[\"思想：以对象作为主要的操作核心，复杂的问题转换为对象的问题。\"]},\"362\":{\"h\":\"构造函数\",\"t\":[\"通过 new 关键字执行的函数，返回一个实例对象。构造函数首字母大写（一种约定）。 函数都是通过 Function 构造函数创建出来的。\",\"function GetObj () {} const obj = new GetObj() \"]},\"363\":{\"h\":\"实例化过程中new做了什么事情\",\"t\":[\"将 this 指向实例对象，将实例对象的隐式原型指向构造函数的原型然后并返回一个对象。\",\"function Foo(name,age){ this.name = name this.age = age } Function.prototype.new = function(...rest){ //let obj = {} let obj = Object.create(Foo) //以Foo作为原型创建一个对象 //obj.__proto__ = this.prototype //this指向Foo，开发中不用直接访问和修改__proto__原型 this.apply(obj,rest) //Foo执行，this指向obj return obj } \"]},\"364\":{\"h\":\"实例对象和构造函数的关系\",\"t\":[\"实例对象是通过new关键字执行构造函数创建出来的，这过程叫实例化。\",\"在new的过程中会将this指向这个实例对象，将构造函数的原型prototype传递给实例对象的原型__proto__。\"]},\"365\":{\"h\":\"原型\",\"t\":[\"原型 prototype 只存在于函数中。函数的原型是prototype，对象的原型是__proto__。在创建实例对象时函数原型prototype会传递给实例对象的原型__proto__，即实例对象的原型等于构造函数的原型。通过constructor可以访问实例的构造器。\",\"可在原型上添加方法和属性，以供所有实例对象调用。\",\"fn._proto_：是fn函数创建者的原型\",\"fn.prototype：是fn作为构造函数的基因库\",\"//添加到函数的原型中，让所有的实例对象都可以用 Array.prototype.sum = function () { let result = 0 for(let i = 0; i < this.length; i++){ result += this[i] } return result } [1,2,3,4,5,6].sum() \",\"注意\",\"fn.prototype.name：向原型中添加属性。fn.prototype = {}：改变了原型的指向，不推荐。 开发中应当避免直接访问和修改 __proto__ 属性。\"]},\"366\":{\"h\":\"原型链\",\"t\":[\"每个构造函数都有一个原型对象，原型对象都包含一个指向构造函数的指针，而实例都包含一个指向原型对象的内部指针。那么假如我们让原型对象等于另一个类型的实例，结果会怎样？显然，此时的原型对象将包含一个指向另一个原型的指针，相应地，另一个原型中也包含着一个指向另一个构造函数的指针。假如另一个原型又是另一个类型的实例，那么上述关系依然成立。如此层层递进，就构成了实例与原型的链条。这就是所谓的原型链的基本概念。\"]},\"367\":{\"h\":\"查询原型链\",\"t\":[\"判断一个原型是否在另一个原型链中。关键字 instanceof。 代码底层调用的是 Symbol.hasInstance，实际上是访问构造函数的 Symbol.hasInstance 属性，传入一个对象，给据返回结果来判断。\",\"A instanceof B //A 的原型链中是否有B \"]},\"368\":{\"h\":\"终点问题\",\"t\":[\"任何普通函数都是由 Object 构造函数创建出来的，终点都是 Object.prototype。 任何函数都是由 Function 构造函数创建出来的，终点都是 Function.prototype。\",\"function Test () {} const t = new Test() t.constructor // ƒ Test () {} \",\"属性访问规则\",\"先访问对象自己的属性，如果没有去__proto__中找，没有继续向原型上层寻找。\"]},\"369\":{\"h\":\"window、Object、document的层级关系\",\"t\":[\"document 是 window 对象下的一个文档对象。\",\"window 对象是由 Object 创建的 Window 构造函数生成的一个对象。\",\"Function和Object的关系：Object 创建了 Function 退居二线只负责创建对象，维护了 Function 是一等公民的身份。\"]},\"370\":{\"h\":\"类、继承(es6)\",\"t\":[\"ES6使用关键字 class 实现类（构造函数 constructor）。\",\"//es5 function Fn(){ console.log('我是构造函数') } const f = new Fn() //es6 class Creature{ constructor(name,age){ this.name = name this.age = age console.log('我是父级构造函数') } //在原型中添加方法 breath(){ console.log('我可以呼吸') } } \",\"ES6使用关键字 extends 实现类的继承。 必须调用 super 方法继承父类构造器（将父类构造函数的方法属性等组装到当前构造函数中）。\",\"class Person extends Creature{ constructor(name, age, address){ super(name,age) // 将父级构造函数中的方法和属性等添加到当前构造函数中 this.address = address console.log('我是继承构造函数') } say(){ console.log('我还可以说话') } } \"]},\"371\":{\"h\":\"静态方法\",\"t\":[\"关键字：static。\",\"不会传递到实例中，不能用 this 调用。\",\"使用类名进行调用，只允许构造函数自己调用。\",\"class Person2 extends Creature{ constructor(name, agea){ super(name,age) } static getName () { console.log(this.name) } } \"]},\"372\":{\"h\":\"Symbol\",\"t\":[\"六大数据类型之外的数据类型，返回一个唯一且不重复值。 接收一个字符串或数字类型的参数，其他类型会默认调用 toString 方法。\",\"Symbol('dw') // Symbol(dw) \"]},\"373\":{\"h\":\"方法\",\"t\":[\"Symbol.for：返回一个 Symbol 值，之前生成过返回之前的值，没有返回一个全新的值。\",\"Symbol.keyFor：接收一个 Symbol 值。查询这个值是否是同 Symbol.for 注册，有返回对应的值，没有返回undefined。\",\"const b = Symbol.for('dw') Symbol.keyFor(b) // dw \"]},\"374\":{\"h\":\"内置方法\",\"t\":[\"正则实例中特殊标识，在正则中可以保证调用的统一。\",\"Symbol.match\",\"Symbol.search\",\"Symbol.replace\"]},\"375\":{\"h\":\"Set\",\"t\":[\"是一个构造函数，接收一个可枚举对象（数组...），返回一个不重复的 Set 对象。可以对 Set 对象进行解构。可以解决数组去重的问题。\"]},\"376\":{\"h\":\"方法\",\"t\":[\"add：向Set对象中添加元素，如果已有这个元素则不进行操作。\",\"delete：删除Set对象中的某个元素。\",\"has：判断Set对象中是否有这个元素。\",\"const newSet = new Set([]) //添加 newSet.add(4) //删除 newSet.delete(2) //改：先删后加 newSet.delete(4) // true newSet.add(4) //查 newSet.has(2) // true \",\"entries：返回Set对象的键值对，key和value的值是相同的。\",\"keys：返回Set对象所有的key。\",\"values：返回Set对象所有的值。\",\"// 遍历Set对象 for(let i of newSet.entries()){} // 数组去重 let arr4 = [1,2,3,4,5,6,1,2,3] [...new Set(arr4)] 或 Array.from(new Set(arr4)) \"]},\"377\":{\"h\":\"封装Set方法\",\"t\":[\"class mySet{ constructor(arr){ this.qcArr = mySet.qc(arr) this.size = this.qcArr.length } static qc(arr){ let newArr = [] for(let i = 0; i < arr.length;i++){ if(!newArr.some(item => item === arr[i])){ newArr.push(arr[i]) } } return newArr } add(item){ this.qcArr.push(item) this.qcArr = mySet.qc(this.qcArr) this.size = this.qcArr.length return this } delete(item){ let index = this.qcArr.indexOf(item) //没找到返回-1 if(index !== -1){ this.qcArr.splice(index,1) this.size = this.qcArr.length } return this } has(item){ return this.qcArr.find(item => item === item) } } \"]},\"378\":{\"h\":\"Map\",\"t\":[\"Map 是JavaScript中的数据结构，Map 对象保存键值对，并且能够记住键的原始插入顺序。 任何值（对象或者基本类型）都可以作为一个键或一个值。映射关系、复杂类型之间建立关系。\"]},\"379\":{\"h\":\"方法\",\"t\":[\"set(key, value)：添加映射关系。已有该属性会进行修改，没有则添加。\",\"get：获取属性对应的映射关系。\",\"has：判断Map对象中是否有该属性。\",\"delete：删除映射。\",\"entries：返回一个可遍历的数组。\",\"clear：清空映射关系。\",\"const div1 = document.querySelector(\\\".box1\\\") const div2 = document.querySelector(\\\".box2\\\") let propsDiv1 = { width: 300, height: 100, backgroundColor: \\\"#ccc\\\" } let propsDiv2 = { width: 100, height: 200, backgroundColor: \\\"red\\\" } let map = new Map() //添加映射关系 map.set(div1, propsDiv1) map.set(div2, propsDiv2) //查询映射 map.get(div1) //查询是否有这个映射关系 map.has(div2) //删除映射 map.delete(div2) //entries()返回一个可迭代遍历的数组 for(let item of map.entries()){ console.log(item) } //clear()清空 map.clear() \"]},\"380\":{\"h\":\"对象方法\"},\"381\":{\"h\":\"Object.assign\",\"t\":[\"合并对象，接收多个参数，最终返回修改后的参数一。 从左往右挨个添加，从右往左进行属性覆盖（已有属性进行覆盖，没有则新增）。\",\"class Person{ constructor(options){ // this.name = options.name // this.age = options.age // this.address = options.address //覆盖能力 左(弱) -> 右(强),这样我们就可以对其设置默认值 let Pdefault = { name: 'd', age: 20, address: '上海' } Object.assign(this, Pdefault, options) // 合并到this对象中 } } new Person({ name: 'name', age: 21, address: '出生地' }) \"]},\"382\":{\"h\":\"Object.create\",\"t\":[\"以传入的参数作为原型进行的对象的创建。\",\"const obj = {} Object.create(obj) \"]},\"383\":{\"h\":\"Object.is\",\"t\":[\"判断两个对象是否相等。\",\"const obj1 = {} const obj2 = {} Object.is(obj1, obj2) // false \"]},\"384\":{\"h\":\"Object.defineProperty\",\"t\":[\"对对象直接定义个新的属性，或者修改现有的属性，并返回此对象，或进行对象的监听。 可以对属性是否可以被修改、枚举（属性名颜色是深色）、性质进行控制。 访问属性时可以进行监控，设置属性时可进行操作。\",\"/** * 参数 * obj：要定义属性（控制）的对象。 * prop：要定义或修改的属性的名称。 * descriptor：要定义或修改的属性配置对象。 */ Object.defineProperty(obj, prop, descriptor) // 定义或修改多个属性 Object.defineProperties(obj, props) // 获取配置对象信息 Object.getOwnPropertyDescriptor(obj, prop) \",\"descriptor 配置参数\",\"configurable：以下配置是否锁定（是否可更改），默认false（锁定）。一旦设置了false就永远不能修改了。\",\"enumerable：是否可枚举。默认false。\",\"value：该属性对应的值。可以是任何有效的 JavaScript 值（数值，对象，函数等）。 默认为 undefined。\",\"writable：是否可以被修改，默认false。\",\"get：当访问该属性时，会调用此函数，返回该属性的值，返回值就是该属性的值。\",\"set：当属性值被修改时，会调用此函数，接收一个参数（赋予的新值）。\",\"注意\",\"不要在get和set方法中访问自己的属性\",\"// 监控对象 const obj = {}; (function(){ let psd = 418 // 是否可以被访问 let bool = true Object.defineProperty(obj, 'psd', { get(){ console.log('警告, password正在被访问') // 根据权限返回内容 if(bool){ return psd //返回的值就访问这个属性的值 }else{ return '想要密码不可能的' } }, set(newPsd){ console.log(\\\"修改密码\\\",newPsd) // obj.psd = newPsd 注意不要访问自己的属性，会出现无线调用，导致页面卡死 psd = newPsd } }) })() Object.defineProperty(obj, 'name', { value: 456, //设置这个属性的值 enumerable: true, //是否可枚举 writable: true, //是否可修改 configurable: true, //以上配置是否锁定 }) // {name: 456} \",\"Vue2.x 中使用此方法实现了数据的双向绑定。\",\"const inputDom = document.querySelector('input') const h1Dom = document.querySelector('h1') const data = {} let val = '' Object.defineProperty(data, 'val', { get () { return val }, set (newVal) { val = newVal inputDom.value = newVal h1Dom.innerText = newVal } }) inputDom.oninput = () => { val = inputDom.value h1Dom.innerText = inputDom.value } \"]},\"385\":{\"h\":\"Object.freeze\",\"t\":[\"冻结。所有对象冻结成现在的样子, 再也不能修改了, 解冻不了。\"]},\"386\":{\"h\":\"模块化\",\"t\":[\"ES6 实现了模块化开发。将 script 标签的 type 属性设置为 module即可。\",\"<script type=\\\"module\\\"></script> export default {} // 导出 import name from path // 导入 \"]},\"387\":{\"h\":\"自定义属性\",\"t\":[\"在标签中使用的自定义属性不能通过 DOM 节点进行访问。 可通过前缀 data- 加属性名称的形式进行自定义属性设置。DOM 节点下的 dataset 属性接收了所有自定义属性。\",\"DOM.getAttribute(property)：获取属性值。\",\"DOM.setAttribute(property, value)：设置属性。\",\"DOM.dataset.property：获取或设置自定义属性。\",\"<input type=\\\"text\\\" data-yhh=\\\"哟呵呵\\\" /> const inputDom = document.querySelector('input') inputDom.dataset.yhh // 哟呵呵 inputDom.dataset.yhh = '哟哈哈' inputDom.dataset.yhh // 哟哈哈 \"]},\"388\":{\"h\":\"Promise\",\"t\":[\"​解决了回调地狱，同步代码异步编程问题，保证的代码的执行循序。\",\"构造函数，接收一个回调函数，返回以 promise 对象。该对象下包含 then、catch、finally 函数，都接收一个回调函数。 Promise 的 this 指向 window 对象。\",\"then：触发成功后执行，并接收成功后传递过来的数据。​建议在then中也返回一个promise对象，方便拿到传递下来的数据。\",\"catch：捕捉任意位置 reject触发的错误，接收一个错误对象。\",\"finally：成功或失败都执行。\"]},\"389\":{\"h\":\"回调函数参数\",\"t\":[\"resolve： 触发成功的工具函数。这个方法执行就说明回调函数执行成功或表示异步代码执行完成，会触发 then 的执行。 可通过实参的方式将数据传递给 then 的回调函数。\",\"reject： 触发失败的工具函数。可通过实参的形式将错误信息传递给catch。\",\"new Promise((resolve, reject) => { setTimeout(() => { resolve(3) }, 1000) }).then(res => { console.log( res) // 3 return new Promise(resolve => { setTimeout(() => { resolve(res) }, 1000) }) }).then(res2 => { console.log(res2) // 3 }).catch(err => { }) \"]},\"390\":{\"h\":\"promise.resolve\",\"t\":[\"​返回一个触发成功的promise对象。\"]},\"391\":{\"h\":\"promise.reject\",\"t\":[\"​返回一个触发失败的promise对象。\"]},\"392\":{\"h\":\"promise.all\",\"t\":[\"等待所有的 promise 对象执行完成后才触发成功回调。 接收一个 promise 数组，触发成功后会将所有 promise resolve 函数传递的数据以数组的形式传递给回调，数据与 promise 数组循序一直。 只有有一个 promise 触发了 reject 直接执行 catch。\",\"const p1 = new Promise() const p2 = new Promise() const p3 = new Promise() Promise.all([p1, p2, p3]) \"]},\"393\":{\"h\":\"promise.race\",\"t\":[\"接收一个 promise 数组，当有一个 promise 触发了 resolve 直接执行成功回调（接收resolve传递下来的参数）。 如果最先触发的是 reject 那么直接执行 catch。\"]},\"394\":{\"h\":\"async await\",\"t\":[\"​简化了 promise 的写法。将 async 关键字声明在函数声明前面，表示将这个函数转换成异步函数。 ​将 await 关键字声明在 promise 函数前面，等待一个 promise 执行，最终返回 promise 执行的结果。\",\"async () => await new Promise() \"]},\"395\":{\"h\":\"Ajax\",\"t\":[\"​通过 XMLHttpRequest 构造函数创建一个请求对象，这个对象有发送、接收请求的功能。\"]},\"396\":{\"h\":\"请求方式\",\"t\":[\"get：主要用来获取数据，请求参数拼接在 url 地址中（不安全）。\",\"// 请求参数 ?menuIds=0,43&_key=g4uzfe 'https://i.want-want.com/wui/index.html#/main/portal/portal-43-256?menuIds=0,43&_key=g4uzfe' \",\"psot：常用来发送数据，请求参数方式请求体中，相对于 get 请求较为安全。 需要对请求头数据的格式进行设置。发送的数据可以是 json 也可以是get请求的格式。\",\"/** * type * ​ application/x-www-form-urlencoded * application/json */ setRequestHeader('Content-Type', type) \"]},\"397\":{\"h\":\"状态进程\",\"t\":[\"ajax 对象下的 readyState 共有5种状态，用来监听请求进程。\",\"0 已经生成了一个 ajax 对象，但未初始化。\",\"1 ajax 对象已经配置了请求方式和地址，但未发送请求。\",\"2 已经发送了 ajax 请求，但未被接收。\",\"3 处理 ajax 发送的请求，此时还未响应给浏览器。\",\"4 响应数据并返回给浏览器，通过 responseText 属性获取。\",\"onreadystatechange 回调函数可对状态进程进行监听，当状态改变时触发该回调。\"]},\"398\":{\"h\":\"常见状态码\",\"t\":[\"当请求响应成功后，可通过 ajax 对象下的 status 属性获取状态码。\",\"100 ~ 200之间：未完成。\",\"200 ~ 300之间：请求成功，能取到数据。\",\"300 ~ 400之间：重定向，资源在别处。 304：资源没有发生改变，可以直接使用缓存。\",\"400 ~ 500之间：请求错误，主要集中在客户端这边。\",\"500 ~ 600之间：服务器错误。\"]},\"399\":{\"h\":\"例子\",\"t\":[\"// 1. 生成 ajax 对象 const xhr = new XMLHttpRequest() // 2. 设置请求方式和地址 xhr.open('get', 'http://localhost:8082/api/getlunbo') // 3. 发送请求。send方法可接收请求参数，没有提交参数时传null或不传 xhr.send() // 4. 监听状态进程，接收数据。 xhr.onreadystatechange = () => { // 根据状态码是否成功获取到数据，200 <= status < 300 表示数据获取成功 if (xhr.readyState === 4) console.log(xhr.responseText) } \",\"封装 ajax 对象。\",\"// 将一个对象转换成url数据格式 function formate (data) { const arr = [] for(let i in data){ arr.push(`${i}=${data[i]}`) } return arr.join('&') } function request (obj) { const { url, method, data } = obj const xhr = new XMLHttpRequest() xhr.open(method, url + '?' + formate(data)) xhr.send() xhr.onreadystatechange = () => { if (xhr.readyState === 4) { if (xhr.status >= 200 && xhr.status < 300 || xhr.status === 304) { console.log(xhr.responseText) } } } } request({ method: 'get', url: 'http://localhost:8082/api/getlunbo', data: {} }) \"]},\"400\":{\"h\":\"跨域\",\"t\":[\"从不安全（当前网站下访问其他网站的资源）的地方请求资源。浏览器不允许跨域。 当请求地址违背的同源策略就构成了跨域。\"]},\"401\":{\"h\":\"同源策略\",\"t\":[\"协议相同（http、https、file、ftp...）。\",\"域名/IP相同。\",\"端口号相同。\"]},\"402\":{\"h\":\"解决跨域的问题\",\"t\":[\"cors\",\"后台设置响应头（跨域策略）允许跨域\",\"JSONP\",\"一种跨域解决方案。利用 script 标签的 src 属性在请求资源时不会受到同源策略的影响。 ​src 请求的地址所返回的内容就是 script 标签里面要执行的代码。\",\"流程\",\"创建一个处理数据的回调函数。\",\"​创建一个发送请求的 script 标签，并将回调函数以参数的形式拼接到请求地址中。\",\"​后端拿到处理数据的回调函数名称，拼接回调函数执行返回给前端。\",\"​前端 script 接收到这个函数执行，就会拿到数据。\",\" <input type=\\\"text\\\"> <ul></ul> \",\"const input = document.querySelector('input') const ul = document.querySelector('ul') const callback_bili = (data) => { ul.innerHTML = '' if(data.result.length) return const result = data.result.tag // 创建一个节点碎片 const fragment = document.createDocumentFragment() result.forEach(item => { const li = document.createElement('li') li.innerText = item.value li.onclick = () => { input.value = li.innerText search() } fragment.appendChild(li) }) ul.appendChild(fragment) } const search = (e) => { const val = e.target.value const url = `https://s.search.bilibili.com/main/suggest ?jsoncallback=callback_bili&func=suggest&suggest_type=accurate &sub_type=tag&main_ver=v1&highlight=&bangumi_acc_num=1 &special_acc_num=1&topic_acc_num=1&upuser_acc_num=3 &tag_num=10&special_num=10&bangumi_num=10&upuser_num=3&term=${val} &rnd=0.1331411021925517&_=1587885147163` const script = document.createElement('script') script.src = url document.body.appendChild(script) // 判断script标签是否加载成功，成功就删除 script.onload = () => { script.parentNode.removeChild(script) } } input.oninput = search \"]},\"403\":{\"h\":\"DOM\",\"t\":[\"文档对象模型（document object model）document，简称DOM。\",\"浏览器对象模型（browser object model）window，简称BOM。\",\"关于文档对象模型所有的操作，都是从 document 开始的。document 指的是这个页面中所有的标签元素的整体，获取元素从document出发。\"]},\"404\":{\"h\":\"DOM获取\",\"t\":[\"get 系列是动态获取。元素更新，获取的节点也会更新。\",\"query 系列是静态获取。元素更新，获取（瞬间确定）的节点不会更新。\",\"const arr = document.querySelectorAll('h1') // nodelist 类数组。 const arr2 = document.getElementsByTagName('h1') // HTMLCollection const h1 = document.createElement('h1') h1.innerText = 4 document.body.appendChild(h1) console.log(arr, arr2) // 3，4 \"]},\"405\":{\"h\":\"修改DOM内容\",\"t\":[\"innerHTML：会进行 HTML 标签的解析。\",\"innerText：不进行 HTML 标签的解析。\",\"提示\",\"尽量减少dom的直接操作，最好打包在一起一次执行（赋值完）。否则会影响浏览器的加载速度。\"]},\"406\":{\"h\":\"获取DOM样式\",\"t\":[\"DOM.style.property：可获取元素行内样式或设置元素样式。\",\"getComputedStyle(DOM)：获取元素的计算样式（最终渲染的样式）。\",\"getBoundingClientRect：1. 获取实际的尺寸（包括边框）。\"]},\"407\":{\"h\":\"DOM相关方法\",\"t\":[\"createElement：创建元素。\",\"const div = document.createElement('div') \",\"appendChild：向节点末尾追加元素。\",\"document.body.appendChild(div) \",\"createElementFragment：创建文档碎片，用于装载元素节点。批量操作DOM时建议使用，可减少DOM的操作（性能优化）。\",\"const fragment = document.createElementFragment() fragment.appendChild(div) document.body.appendChild(fragment) \",\"removeChild：删除元素。\",\"归宿问题：删除必须经过父元素的同意（调用父元素的删除方法）。\",\"<div class=\\\"parent\\\"> <div class=\\\"child\\\"></div> </div> \",\"const parent = document.querySelector('.parent') const child = document.querySelector('.child') // 方式一 parent.removeChild(child) // 方式二 推荐 child.parentNode.removeChild(child) \"]},\"408\":{\"h\":\"节点\",\"t\":[\"页面中最小的操作节点。nodeType 属性可获取当前节点的类型。\",\"1 元素节点\",\"2 属性节点（元素中的属性）\",\"3 文本节点\",\"parent.nodeType // 1 \"]},\"409\":{\"h\":\"节点的操作\",\"t\":[\"nextSibling：获取下一个节点。标签与标签的之间的空格属于文本节点。\",\"nextElementSibling：获取下一个元素的节点。\",\"previousSibling：获取上一个节点。\",\"previousElementSibling：获取上一个元素的节点。\",\"parent.nextSibling \",\"children：获取子元素节点（只包含元素节点）。\",\"childNodes：子节点（包含文本节点）。\",\"parentElement：父元素节点。\",\"parentNode：父节点。\",\"parentElement 和 parentNode 本质上无区别，获取的内容一致。\",\"获取子节点时 NodeList 和 HTMLCollection的区别\",\"NodeList 包含文本节点和元素节点。HTMLCollection 只包含元素节点。\"]},\"410\":{\"h\":\"元素尺寸信息\",\"t\":[\"元素的宽高。\",\"clientWidth（包含padding）\",\"clientHeight（包含padding）\",\"offsetWidth（包含padding、boder）\",\"offsetHeight（包含padding、boder）\",\"元素左内边距到左边框的值（border值）\",\"clientLeft\",\"clientTop\",\"元素到父元素左上角的距离（不包含boder）\",\"offsetLeft\",\"offsetTop\"]},\"411\":{\"h\":\"事件\",\"t\":[\"详细事件请查阅文档。 触发事件时会传递一个事件对象 e，用于记录事件相关的信息。\"]},\"412\":{\"h\":\"事件绑定\",\"t\":[\"addEventListener：为 DOM 添加事件监听。可使用 removeEventListener 进行事件监听的移除，参数必须与之前保持一致。\",\"DOM.addEventListener('event', callback) // 移除事件监听 DOM.removeEventListener('event', callback) \",\"在 DOM 中直接绑定。耦合度太高。\",\"<div class=\\\"parent\\\" onclick=\\\"fun()\\\"></div> \",\"通过 DOM 下的属性进行绑定。赋值为 null 进行事件清除。\",\"parent.onclick = () => {} \"]},\"413\":{\"h\":\"事件联动\",\"t\":[\"​使用一个变量让多个事件联系起来。解决每次点击都进行事件注册的问题，造成性能内存的一个消耗。\",\"let bool = false const callback = () => { console.log('我添加的事件监听') } document.onmousedown = () => { bool = true } document.onmousemove = () => { if (bool) { document.addEventListener('click', callback) } } document.onmouseup = () => { bool = false document.removeEventListener('click', callback) } \"]},\"414\":{\"h\":\"事件的冒泡与捕获\",\"t\":[\"事件的触发分为捕获和冒泡阶段，触发在冒泡阶段，addEventListener 的第二个参数可修改触发的方式。 如果父子元素触发了同一个事件，执行顺序应该是从里到外的。\",\"捕获阶段：从父级元素依次往子级元素查找，找到触发事件的具体元素（目标）。\",\"冒泡阶段：执行任务，依次向父级元素传递。stopPropagation 可阻止事件的冒泡。\"]},\"415\":{\"h\":\"事件委托\",\"t\":[\"将大量重复的操作委托给父元素，e.target 获取触发事件的主体对象（DOM节点）。 大量的注册事件监听，会消耗大量内存和性能且不容易移除监听。\",\"// DOM 节点 /** * <h1></h1> * <ul> * <li>这里li-1</li> * <li>这里li-2</li> * <li>这里li-3</li> * </ul> */ const h1 = document.querySelector('h1') const ul = document.querySelector('ul') const liList = document.querySelectorAll('li') // 注册了多个事件监听 liList.forEach(item => { item.addEventListener('click', e => { h1.innerText = e.target.innerText }) }) // 事件委托只注册了一个事件监听 ul.addEventListener('click', e => { h1.innerText = e.target.innerText }) \"]},\"416\":{\"h\":\"Vue2笔记\"},\"417\":{\"h\":\"起步\",\"t\":[\"引入 vue.js。\",\" <script src=\\\"https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js\\\"></script> \",\"实例 vue 对象。\",\" const app = new Vue({ // 实例挂载的 DOM 对象（id/class）。或使用 $mount 方法进行挂载。 el: '#app', // 存放数据变量，可直接在模版中使用。实例化时会对 data 中的属性绑定监听器。 data: { test: { val: 3 } }, // 计算属性，必须 return 一个值。默认只有 getter 方法，使用计算属性时会调用这方法。 // 可定义一个 setter 方法，接收一个 newVal 值。 computed: { // 默认 getVal () { return this.test.val } // 定义 setter getVal () { get () { return this.test.val } set (val) { } } }, // 监听器，数据变动时执行回调，接收新值/旧值。 watch: { test (newVal, oldVal) {}, // 监听对象下的某个属性 'test.val' (newVal, oldVal) {} // 深度监听 test: { handler (newVal, oldVal) {}, deep: true // 开启深度监听 } }, // 方法 methods: {} // ... }) \",\"vue 使用插值运算符 {{}} 进行数据插入。可以是变量、表达式、函数执行。\",\"vue 是单向的，但可以使用 v-model 实现双向绑定。\",\"computed watch 和 methods 的区别\",\"computed 和 watch 的区别。\",\"computed可以监听自己定义(非data中的变量)或动态添加的一些变量。\",\"watch是监测vue实例对象的变化，监听的变量必须是data中的变量。\",\"computed 和 methods 的区别。\",\" computed 是有缓存的。当数据发生改变时才会重新计算，反之使用缓存中的数据。\",\"methods 是每调用一次就好执行一次。\"]},\"418\":{\"h\":\"基本指令\",\"t\":[\"v-html：解析 html 标签，以 html 文本格式显示。\",\"v-model：数据双向绑定。视图发生改变会更新视图模型，视图模型发生改变也会跟新视图。\",\"修饰符。\",\".lazy：将数据同步由 input 转为 change 事件。\",\".number：转位数值类型。\",\".trim：去除首位空格。\",\"v-bind：属性绑定。语法糖 :。\",\"绑定 class。\",\" <!-- 对象绑定形式 --> <div :class=\\\"{container: isAdd, container2: isAdd}\\\"></div> <!-- 数组绑定形式。[{对象方式}]或[类名...] --> <div :class=\\\"['container', 'container2']\\\"></div> <!-- 三目运算符方式 --> <div :class=\\\"isAdd ? 'container' : 'container2'\\\"></div> <script> data: { isAdd: ture } </script> \",\"绑定 style 样式。\",\" <!-- 也可以定义到data或computed中进行绑定。注意使用小驼峰命名 --> <div :style=\\\"{backgroundColor: 'red'}\\\"></div> \",\"v-once：只渲染一次。后续数据改变将不会更新。\",\"v-if/v-show：控制元素的显示和隐藏。v-if 可配合 v-else-if、v-else 使用。\",\"v-for：遍历对象(value, key, index)或数组(item, index)，渲染一个列表，必须绑定唯一标识符 key 可提升性能。\",\"v-on：事件绑定与自定义事件触发。$event 事件对象，绑定函数执行时默认传人此参数。\",\"常用修饰符\",\".stop：阻止事件冒泡。\",\".prevent：阻止默认事件。\",\".native：将原生事件绑定到组件上。\",\".once：只触发一次。\",\"v-if 与 v-show 的区别\",\"v-if 是一个重绘重建的过程，根据表达式的值在 DOM 中创建或移除元素。切换消耗相对较高。\",\"v-show 是使用样式 display: none;\"]},\"419\":{\"h\":\"Vue3笔记\",\"t\":[\"提示\",\"使用脚手架创建项目vue-cli必须在4.5.0以上\"]},\"420\":{\"h\":\"vue2和vue3的区别\",\"t\":[\"使用proxy实现响应式，支持 TypeScript语法。\",\"使用 Composition 组合 API。\",\"打包体积减少，渲染更快。\",\"使用createApp工厂函数创建实例。\",\"vue2 模板中必须有一个根节点，vue3中可以没有。\",\"通过defineComponent函数定义组件。\",\"import { defineCompoent } from 'vue' export default defineComponent({}) \"]},\"421\":{\"h\":\"Composition API\"},\"422\":{\"h\":\"setup\",\"t\":[\"所有的组合式 API 函数都必须在 setup 中使用并且只在初始化时执行一次。\",\"setup 先于 beforeCreate 执行，此时实例未创建完成，所有 setup 中不能访问this。\",\"能与 vue2 形式定义的 data、methods... 进行合并。 vue2 能访问 setup 中属性和方法，但 setup 中不能访问 vue2 里面的。 重名 setup 优先，不建议混合使用。\",\"setup的参数：\",\"props：父组件向子组件传递的数据，并且是在props中接收的所有数据。\",\"context \",\"attrs：当前标签上的所有属性对象，未在props中定义的数据。\",\"emit：分发事件。\",\"slots：插槽。\",\"返回值可以是一个对象或渲染函数，但不能是一个 async 函数。\",\"对象：对象中的属性和方法可以直接在模板中使用。\",\"渲染函数： 自定义渲染内容。了解即可。\",\"import { h } from 'vue' setup () { return () => h(App) } \"]},\"423\":{\"h\":\"ref\",\"t\":[\"用于基本数据类型的响应式定义，创建一个 RefImpl 引用对象。依然使用defineProperty实现响应式。\",\"view 中可直接使用，但在 model 中需要通过.value的形式进行获取。\",\"如果 ref 定义的是一个引用类型的数据，内部会同过 reactive 转为 proxy 代理对象。\",\"import { ref } from 'vue' const name = ref('vue') // ref 获取dom // <div ref=\\\"divDom\\\"></div> const divDom = ref(null) \"]},\"424\":{\"h\":\"reactive\",\"t\":[\"用于引用类型数据的响应式定义，只能用于引用类型。传入源对象返回一个 proxy 代理对象。\",\"操作源对象时不会触发视图的更新，对代理对象操作是才会触发视图的更新，并且源对象中的数据也会改变。\",\"reactive 定义的响应式是深层次的，内部基于 ES6 proxy 实现。\",\"import { reactive } from 'vue' const obj = reactive({ name: 'vue' }) \"]},\"425\":{\"h\":\"Vue2 & Vue3 响应式的比较\"},\"426\":{\"h\":\"Vue2\",\"t\":[\"实现原理\",\"对象：通过Object.defineProperty对已有的属性读取和修改进行数据劫持。\",\"数组：通过重写数组（改变引用地址）和更新数组一系列的方法实现元素修改的劫持。\",\"存在的问题\",\"动态的添加和删除属性不会触发视图的更新。\",\"直接通过下标修改数组元素不会触发视图更新。\",\"解决方法：vue提供$set的方法。\",\"const obj = { name: 'vue' } Object.defineProperty(obj, 'name', { get () { }, set () { } }) \"]},\"427\":{\"h\":\"Vue3\",\"t\":[\"实现原理 \",\"通过 Proxy 代理拦截对象中任意属性的变化（读写、添加、删除）。\",\"通过 Reflect 反射对代理对象进行操作。\",\"const info: object = { name: 'vue', author: '鱿鱼' } const p = new Proxy(info, { get(target, propName) { return Reflect.get(target, propName) }, // 添加、修改 set(target, propName, value) { return Reflect.set(target, propName, value) }, deleteProperty(target, propName) { return Reflect.deleteProperty(target, propName) } }) \"]},\"428\":{\"h\":\"computed\",\"t\":[\"使用方法跟 Vue2 一致。\",\"import { computed } from 'vue' // 简写，默认get获取值 const fullName = computed(() => firstName + lastName) // 完整 const fullName = computed({ get () { return firstName + lastName }, set (val) { firstName = val[0] lastName = val[1] } }) \"]},\"429\":{\"h\":\"watch\",\"t\":[\"只能监听 ref、reactive 或数组类型的数据。\",\"坑\",\"监听 reactive 定义的数据无法正确的获取 oldVal 的值。 深度监听无效，监听对象下的某个属性 deep 有效。\",\"import { watch } from 'vue' /** * propName: 监听的属性 * cb: 数据变化执行的回调 * newVal * oldVal * config: 配置对象。可选 * immediate: 初始化时是否执行监听 * deep: 是否深度监听 */ watch(firstName, (newVal, oldVal) => { console.log('我变化啦') }, { immediate: true, deep: true }) \",\"监听多个数据变化。\",\"watch([firstName, lastName], (newVal, oldVal) => { console.log(newVal) // [firstName, lastName] }) \",\"监听 reactive 对象下的某个属性时必须使用函数返回该属性。\",\"watch(() => obj.firstName, () => {}) \",\"监听 ref 定义的对象时，需要开启深度监听或.value的形式。 因为 value 的值是一个对象，只要内存地址没有发生改变是不会触发的。 通过.value使其监听 reactive 定义的对象。\",\"const obj = ref({ firstName: 'vue', lastName: '鱿鱼' }) watch(obj, () => {}, { deep: true}) watch(obj.value, () => {}) \"]},\"430\":{\"h\":\"watchEffect\",\"t\":[\"监听回调中依赖的响应式数据，初始化时会执行一次。\",\"与 computed 类似。computed 会进行缓存且有返回值，watchEffect 注重的是逻辑。\",\"import { watchEffect } from 'vue' watchEffect(() => { const firstName = obj.value.firstName }) \"]},\"431\":{\"h\":\"生命周期\",\"t\":[\"组件销毁钩子由 destroy 变为 mount。\",\"Vue3 的生命周期执行比 Vue2 的生命周期快。\",\"Vue2.x\",\"Vue3.x\",\"beforeCreate\",\"setup\",\"created\",\"setup\",\"beforeMount\",\"onBeforeMount\",\"mounted\",\"onMounted\",\"beforeUpdate\",\"onBeforeUpdate\",\"updated\",\"onUpdated\",\"beforeDestroy\",\"onBeforeUnmount\",\"destroyed\",\"onUnmounted\"]},\"432\":{\"h\":\"hook\",\"t\":[\"本质是一个函数，将 setup 函数中使用 Composition API 进行了封装，使其可以复用，逻辑更清楚。\",\"hook 文件名通常使用 use 前缀。\",\"// usePoint import { reactive, onMounted, onBeforeUnmount } from 'vue' export default () => { const point = reactive({ x: 0, y: 0 }) const getPoint = e => { point.x = e.pageX point.y = e.pageY } onMounted(() => { window.addEventLisiter('click', getPoint) }) onBeforeUnmount(() => { window.removeEventLisiter('click', getPoint) }) return point } \",\"// 使用hook import usePoint from 'hook' setup () { const point = usePoint() return { point } } \"]},\"433\":{\"h\":\"toRef & toRefs\"},\"434\":{\"h\":\"toRef\",\"t\":[\"为响应式对象上的某个属性创建 ref 使其变为响应式，并且 ref 的引用指向对象上的属性。\",\"⚠️\",\"ref 是创建一个新的 RefImpl 对象出来，修改时两者互不影响。\",\"import { toRef, toRefs } from 'vue' setup () { const info = reactive({ name: 'vue', author: '鱿鱼' }) return { author: info.author // error /** * info: 所属对象 * author: 属性 */ author: toRef(info, 'author') } } \"]},\"435\":{\"h\":\"toRefs\",\"t\":[\"在结构 reactive 定义的响应式对象时，会消除数据的响应式。 toRefs 可为对象下的每个属性创建 ref 对象使其变为响应式，并返回一个对象。\",\"如果属性是可选的 toRefs 将不会为其创建 ref 对象，可以使用 toRef。\",\"return { ...toRefs(info) } \"]},\"436\":{\"h\":\"shallowReactive & shallowRef\",\"t\":[\"shallowReactive 只处理对象最外层属性的响应式。\",\"shallowRef 只处理基本数据类型的响应式，不会处理引用类型的响应式。\"]},\"437\":{\"h\":\"readonly & shallowReadonly\",\"t\":[\"让一个响应式数据变为只读的，前者是深层次的，后者是浅层次的。\"]},\"438\":{\"h\":\"toRaw & markRaw\",\"t\":[\"toRaw 将一个由 reactive 定义的响应式对象转换为普通对象并返回。\",\"markRaw 标记一个对象，使其不能转换为响应式对象。\",\"import { toRaw, markRaw } from 'vue' const info = reactive({ name: 'vue', author: '鱿鱼' }) const pInfo = toRaw(info) const obj = { address: '新加坡' } info.profile = markRaw(obj) \"]},\"439\":{\"h\":\"customRef\",\"t\":[\"自定义 ref 函数，可以显示的控制和触发响应。\",\"接收一个回调函数，并返回一个 getter 和 setter 的对象。\",\"track: 追踪数据\",\"trigger: 触发响应，通知 vue 重新解析模板\",\"import { customRef } from 'vue' const myRef = (value: any, delay = 200) => { let tiemr: number return customRef((track, trigger) => { return { get () { track() return value }, set (newVal) { clearTimeout(tiemr) tiemr = setTimeout(() => { value = newVal trigger() }, delay) } } }) } setup() { return { inputVal: myRef('', 500) } } \"]},\"440\":{\"h\":\"provide & inject\",\"t\":[\"向后代组价(子、孙...)传递数据，跨层级通信。\",\"provide 传递数据。\",\"propName: 传递的名称，用于 inject 接收。\",\"data： 传输的数据。\",\"inject 接收数据。\",\"// 父组件 export default defineComponent({ setup() { const color = ref('yellow') // 传递数据 provide('color', color) return { color } } }) // 后代组件 export default defineComponent({ setup() { // 接收数据 const color = inject('color') return { color } } }) \"]},\"441\":{\"h\":\"响应式数据判断\",\"t\":[\"isRef 判断是否是一个 ref 对象。\",\"isReactive 判断是否是一个 reactive 创建的对象。\",\"isReadonly 判断一个对象是否由 readonly 创建。\",\"isProxy 判断一个对象是否是一个代理对象(reactive、readonly)。\"]},\"442\":{\"h\":\"fragment\",\"t\":[\"Vue2 中必须有个根标签，在 Vue3 中可以没有根标签，内部会将多个标签包裹在一个 fragmeng 虚拟元素中。\",\"减小标签层级和内存占用。\"]},\"443\":{\"h\":\"teleport\",\"t\":[\"将组件的 HTML 结构移动到指定位置。\",\"<teleport to=\\\"标签 / 选择器\\\"> <!-- html DOM --> </teleport> \"]},\"444\":{\"h\":\"Suspense\",\"t\":[\"等待异步组件时渲染一些额外的内容，提升用户体验。\",\"使用异步组件时 setup 可以返回一个 promise。\",\"default 插槽渲染真正的内容。\",\"fallback 插槽渲染组件加载时的内容。\",\"<Suspense> <template v-slot: default>组件内容</template> <template v-slot: fallback>loading...</template> </Suspense> \",\"import { defineAsyncComponent } from 'vue' const Com = defineAsyncComponent(() => import('x.vue')) \"]},\"445\":{\"h\":\"其他改变\",\"t\":[\"将全局 API 和配置挂载到了实例 app 上。\",\"Vue2\",\"Vue3\",\"Vue.config.x\",\"app.config.x\",\"Vue.component\",\"app.component\",\"Vue.directive\",\"app.directive\",\"Vue.mixin\",\"app.mixin\",\"Vue.use\",\"app.use\",\"Vue.prototype\",\"app.config.globalProperties\",\"触发自定义事件时必须在 emits 中定义。\",\"setup () { emits: ['getVal'] } \",\"过渡动画类名的改变。\",\"移除 v-on 上 keyCode、native 修饰符。\",\"移除过滤器。\"]},\"446\":{\"h\":\"基础配置\",\"t\":[\"webpack 是一个静态资源打包工具。以一个或多个文件作为打包入口，将项目所有的依赖文件编译成一个或多个文件输出。\",\"webpack 只能处理 js 文件，处理其他文件需要其他依赖包。\"]},\"447\":{\"h\":\"快速开始\",\"t\":[\"下载依赖\",\"初始化包文件\",\" npm init -y \",\"下载webpack依赖\",\" npm i webpack webpack-cli -D \",\"执行 webpack 命令\",\"后面未跟配置信息会读取 webpack.config.js 中的配置。\",\" mpx webpack [入口文件] [指定模式] [输出目录] npx webpack index.js --mode=development \"]},\"448\":{\"h\":\"配置文件\",\"t\":[\"在根目录下创建 webpack.config.js 文件，执行 webpack 命令时会自动读取该文件。\",\" module.exports = { // 打包入口文件 entry: '', // 指定输出文件目录及名称 output: { // 文件输出路径(绝对路径，使用node path模块) path: '', // 文件名 filename: '' }, // 加载器。打包js、json外的文件需借助loader才能解析 module: { rules: [ // loader 配置 ] }, // 扩展webpack功能 plugins: [], // 打包模式。生产模式(production) ｜ 开发模式(developmeng) mode: '' } \"]},\"449\":{\"h\":\"开发模式做的事\",\"t\":[\"编译代码，编译浏览器识别运行。\",\"代码质量检查，树立规范。\"]},\"450\":{\"h\":\"处理样式资源\",\"t\":[\"在处理 css、sass、less、scss、styl 样式时需要借助官方 loader 处理才能进行打包。\"]},\"451\":{\"h\":\"处理css资源\",\"t\":[\"在处理 css 预处理器时需要下载预处理器 loader，使用同下。\",\"下载 loader\",\"css-loader：将 css 资源编译成 webpack 能识别的模块。\",\"style-loader：将 webpack 编译的 css 模块以 style 标签的形式添加到 html 中。\",\" npm install --save-dev css-loader style-loader \",\"配置 loader\",\" module.exports = { module: { rules: [ { test: /\\\\.css$/i, // 匹配css文件 // 执行顺序：从右到左 // loader: '', 只能处理一个loader use: [\\\"style-loader\\\", \\\"css-loader\\\"], } ] } } \"]},\"452\":{\"h\":\"处理图片资源\",\"t\":[\"webpack5 已经内置了 file-loader url-loader，只需要进行简单的 配置 就能处理图片资源。\",\"配置\",\"module.exports = { module: { rules: [ { // 匹配所有图片 test: /\\\\.(png|jpe?g|gif|webp|svg)$/, type: 'asset', parser: { dataUrlCondition: { // 指定小于多少kb的图片转为 base64 格式，默认小于8kb // 优点：减少请求数量。 缺点：图片体积变大 maxSize: 4 * 1024 } } } ] } } \"]},\"453\":{\"h\":\"自定义文件输出目录&清空上次打包内容\",\"t\":[\"默认情况下，asset/resource 模块以 [hash][ext][query] 文件名发送到输出目录。 可以通过在 webpack 配置中设置 output.assetModuleFilename 来修改此模板字符串指定输出目录。\",\"[hash]：生成一个唯一 hash 文件名，可指定去多少位 [hash:10]。\",\"[ext]：文件扩展名。\",\"[query]：查询参数。\",\" module.exports = { output: { // clean: true, 自动清空上次打包的内容 // filename: 'js/bundle.js', 设置js文件输出目录 assetModuleFilename: 'img/[hash][ext][query]' } } \",\"另一种方式是在配置 loader 时配置 generator.filename 来指定输出目录。\",\" module.exports = { module: { rules: [ { test: /\\\\.(png|jpe?g|gif|webp|svg)$/, type: 'asset', generator: { filename: 'img/[hash][ext][query]' } } ] } } \"]},\"454\":{\"h\":\"处理字体资源及其他资源\",\"t\":[\" module.exports = { module: { rules: [ { test: /\\\\.(ttf|woff2?|avi|mp3)$/, type: 'asset/resource', generator: { filename: 'font/[hash][ext:10][query]' } } ] } } \"]},\"455\":{\"h\":\"处理js资源\",\"t\":[\"webpack 只处理了js中模块化的语法，不能处理 es6 的其他语法，导致不能在浏览器中正常运行，需进行兼容处理。\",\"其次是对代码格式进行规范检查。\",\"兼容处理(babel)。\",\"代码格式检查(eslint)。\"]},\"456\":{\"h\":\"Eslint\",\"t\":[\"用来检查 js 和 jsx 语法的工具。\",\"执行 eslint 时会自动查找配置文件(位于项目根目录)根据里面配置的规则进行检查。以下方式任选其一。\",\"配置文件格式\",\".eslintrc\",\".eslintrc.js\",\".eslintrc.json\",\"可直接在 package.json 中的 eslintConfig 选项进行配置。\",\".eslintignore 排除不需要检查的目录、文件。\",\"笔记文档\",\"官网配置规则\"]},\"457\":{\"h\":\"webpack中使用\",\"t\":[\"下载依赖包\",\" npm install eslint-webpack-plugin eslit --save-dev \",\"使用插件\",\" const ESLintPlugin = require('eslint-webpack-plugin') module.exports = { // ... plugins: [new ESLintPlugin({ // 指定检查的目录 context: path.resolve(__dirname, 'src') })] // ... } \"]},\"458\":{\"h\":\"babel\",\"t\":[\"将 js es6 语法编译 es5 语法，使其能在浏览器中正常运行。\",\"执行时会自动读取配置文件。\",\"配置文件格式(位于根目录)\",\"babel.config.js\",\"babel.config.json\",\".babelrc\",\".babelrc.js\",\".babelrc.json\",\"直接在 package.json 中的 babel 选项中进行配置。\"]},\"459\":{\"h\":\"具体配置\",\"t\":[\"下载依赖包\",\" npm install -D babel-loader @babel/core @babel/preset-env \",\"使用\",\"在 loader 中进行配置。\",\" module: { rules: [ { test: /\\\\.js$/, // 排除不需要进行转换的目录 exclude: /node_modules/, use: { loader: 'babel-loader', options: { presets: ['@babel/preset-env'] } } } ] } \",\"通过 babel.config.js 文件进行配置。\",\" // webpack.config.js module: { rules: [ { test: /\\\\.js$/, // 排除不需要进行转换的目录 exclude: /node_modules/, use: { loader: 'babel-loader' } } ] } // babel.config.js module.exports = { // 预设。babel插件，扩展babel功能 presets: ['@babel/preset-env'] } \",\"预设\",\"@babel/preset-env：智能预设，允许使用最新的语法。最终将 es6 语法编译成 es5 语法。\",\"@babel/preset-react：编译 jsx 语法。\",\"@babel/preset-typescript：编译 typescript 语法。\"]},\"460\":{\"h\":\"处理html资源\",\"t\":[\"使用 HtmlWebpackPlugin 插件将打包输出的文件自动引入到 html 中。\",\"安装\",\" npm install --save-dev html-webpack-plugin \",\"使用\",\" const HtmlWebpackPlugin = require('html-webpack-plugin') module.exports = { plugins: [ new HtmlWebpackPlugin({ // 以当前文件作为模版创建新的html template: path.resolve(__dirname, 'index.html') }) ] } \"]},\"461\":{\"h\":\"开发服务器(热更新)\",\"t\":[\"webpack 会创建一个开发服务器，自动监视 src 下的文件，一旦发生改变就会重新打包。\",\"安装\",\" npm install --save-dev webpack-dev-server \",\"配置\",\" module.exports = { devServer: { // 启动服务器的域名 host: 'localhost', // 指定监听端口号 port: '4180', // 是否自动打开浏览器 open: true, // ... } } \",\"启动服务器\",\" npx webpack serve \"]},\"462\":{\"h\":\"区分开发和生产 配置文件\",\"t\":[\"开发没有输出文件，移除 output 相关配置，指定模式为 development。\",\"生产有输出文件，移除 devServer 相关配置，指定模式为 production。\",\"开发配置文件 webpack.dev.js。\",\"生产配置文件 webpack.prod.js。\",\"设置快捷命令。\",\" \\\"scripts\\\": { \\\"dev\\\": \\\"npx webpack server --config ./config/webpack.dev.js\\\", \\\"build\\\": \\\"npx webpack --config ./config/webpack.prod.js\\\" } \"]},\"463\":{\"h\":\"提取css文件\",\"t\":[\"css 目前是被打包到 js 中的，当 js 加载时才会去创建 style 标签生成样式，这样会出现闪屏的现象。\",\"安装\",\" npm install --save-dev mini-css-extract-plugin \",\"配置\",\" const MiniCssExtractPlugin = require(\\\"mini-css-extract-plugin\\\") module.exports = { plugins: [new MiniCssExtractPlugin({ // 指定输出目录 filename: 'css/bundle.css' })], module: { rules: [ { test: /\\\\.css$/i, // 将 style loader 替换成 MiniCssExtractPlugin loader use: [MiniCssExtractPlugin.loader, \\\"css-loader\\\"] } ] } } \"]},\"464\":{\"h\":\"处理css兼容及压缩\",\"t\":[\"将浏览器不支持的 css3 语法进行前缀处理。\",\"安装\",\" <!-- 兼容相关依赖 --> npm install --save-dev postcss-loader postcss-preset-env postcss <!-- 压缩依赖 --> npm install css-minimizer-webpack-plugin --save-dev \",\"配置\",\" // 引入css压缩插件 const CssMinimizerPlugin = require(\\\"css-minimizer-webpack-plugin\\\") module: { rules: [ { test: /\\\\.css$/i, use: [ MiniCssExtractPlugin.loader, \\\"css-loader\\\", // 兼容处理 { loader: 'postcss-loader', options: { postcssOptions: { plugins: [ ['postcss-preset-env'] ] } } } ] } ], // 执行压缩css插件，生产环境默认压缩了 js 和 html plugins: [new CssMinimizerPlugin()] } \",\"在 package.json 中指定兼容的版本。\",\" \\\"browserslist\\\": [ \\\"last 2 version\\\", \\\"> 1%\\\", \\\"not dead\\\" ] \"]},\"465\":{\"h\":\"高级优化配置\",\"t\":[\"对 webpack 进行优化，让代码在编译/运行时性能更好。\",\"提升开发体验\",\"提升打包构建速度\",\"减少代码体积\",\"优化代码运行性能\"]},\"466\":{\"h\":\"提升开发体验\"},\"467\":{\"h\":\"SourceMap\",\"t\":[\"是一个用来生成源代码和构建后代码一一映射的 .map 文件方案，包含了每行、每列的映射关系。 当程序运行出错时会通过配置 map 文件找到映射后源代码的出错的位置，能准确的定位错误位置。\",\"没有该文件错误会定位到构建后代码的位置，难以看懂。\",\"开发模式 cheap-module-source-map\",\"优点：打包速度快，只映射行。\",\"缺点：没有列映射。\",\"生产模式 source-map\",\"优点：包含行/列映射。\",\"缺点：打包速度慢。\",\" // webpack.config.js module.exports = { devtool: 'source-map' } \"]},\"468\":{\"h\":\"提升打包构建速度\"},\"469\":{\"h\":\"hotModuleReplacement\",\"t\":[\"当项目某个模块发生改变时，webpack 默认会将所有对板块重新打包编译，速度很慢。\",\"hotModuleReplacement (HMR/热模块替换)解决了这问题。只需替换、添加、删除改变的模块，无需重新加载整个页面。\",\" // webpack.config.js module.exports = { devServer: { hot: true // 开启HMR } } \",\"style-loader 实现了 css 的热模块替换无需任何处理。js 默认不具有 HMR 功能，需在入口文件中做如下处理。\",\"实际开发中会使用 loader 来进行处理。vue-loaderreact-hot-loader。\",\" if (module.hot) { module.hot.accept('xx.js', callback) } \"]},\"470\":{\"h\":\"oneOf\",\"t\":[\"打包时每个文件都会对每个 loader 进行匹配，比较慢。\",\"oneOf 让每个文件只能匹配一个 loader，剩下的就不进行匹配了。\",\" // webpack.config.js module.exports = { module: { rules: [ { oneOf: [ // ... { test: /\\\\.css$/, use: ['style-loader', 'css-loader'], generator: { filename: 'css/[hash][ext][query]' } } // ... ] } ] } } \"]},\"471\":{\"h\":\"include/exclude\",\"t\":[\"开发中使用的第三方库和插件(node_modules目录中)，是经过编译可以直接使用的，在处理时可以排除掉。\",\"include：包含。只处理某些文件，需使用绝对路径。\",\"exclude：排除。排除某些文件。\",\" module.exports = { module: { rules: [ { test: /\\\\.js$/, // 排除不需要进行转换的目录。 exclude: /node_modules/, use: { loader: 'babel-loader' } } ] }, plugins: [ new ESLintPlugin({ context: path.resolve(__dirname, '../src'), exclude: 'node_modules' // 默认 }) ] } \"]},\"472\":{\"h\":\"cache\",\"t\":[\"每次打包时都要经过 eslint 检查和 babel 编译，开启缓存可以保留之前检查和编译的结果， 只会对发生改变的模块重新检查和编译，这样第二次打包速度就会更快。\",\" module.exports = { module: { rules: [ { test: /\\\\.js$/, // 排除不需要进行转换的目录。 exclude: /node_modules/, use: { loader: 'babel-loader', options: { cacheDirectory: true, // 开启babel缓存 cacheCompression: false // 关闭缓存文件压缩。压缩会增加打包时间 } } } ] }, plugins: [ new ESLintPlugin({ context: path.resolve(__dirname, '../src'), exclude: 'node_modules', // 默认 cache: true, // 开启缓存 cacheLocation: path.resolve(__dirname, '../node_modules/.cache/eslintcache') // 指定缓存文件及目录 }) ] } \"]},\"473\":{\"h\":\"thread\",\"t\":[\"多进程打包。当项目足够庞大时开启多进程可以大大的减少时间。\",\"对 js 的处理主要是 eslint、babel、terser(生产模式自动激活压缩js代码，webpack内置了这个插件 terser-webpack-plugin)三个工具。\",\"注意：仅推荐在特别耗时的项目中时间。每个进程启动需要花费 600ms 左右的时间。\",\"下载依赖包\",\" npm i thread-loader -D \",\"获取 cpu 核数(启动进程数量)。\",\" // node 模块 const os = require('os') const threads = os.cpus().length const TerserWebpackPlugin = require('terser-webpack-plugin') \",\"使用\",\" module.exports = { module: { rules: [ { test: /\\\\.js$/, // 排除不需要进行转换的目录 exclude: /node_modules/, use: [ { loader: 'thread-loader', options: { works: threads } } ] } ] }, plugins: [ new ESLintPlugin({ threads }), new TerserWebpackPlugin({ parallel: threads }) ] } \"]},\"474\":{\"h\":\"减少代码体积\"},\"475\":{\"h\":\"tree shaking\",\"t\":[\"打包时移除没有使用的第三方库或未引用代码。webpack 默认已经开启。\",\"它依赖于 ES2015 模块语法的静态结构特性，例如 import 和 export。\"]},\"476\":{\"h\":\"babel\",\"t\":[\"babel 在编译时对每个文件都插入了辅助代码，每多一个文件都会多插入一次，导致代码体积过大。\",\"@babel/plugin-transform-runtime 禁用 babel 自动对每个文件进行 runtime 注入，将需要使用辅助代码从这引入。\",\"安装\",\" npm i @babel/plugin-transform-runtime -D \",\"配置\",\" module.exports = { module: { rules: [ { test: /\\\\.js$/, // 排除不需要进行转换的目录 exclude: /node_modules/, use: [ { loader: 'babel-loader', options: { cacheDirectory: true, // 开启babel缓存 cacheCompression: false, // 关闭缓存文件压缩。压缩会增加打包时间 plugins: ['@babel/plugin-transform-runtime'] // 减少代码体积 } } ] } ] } } \"]},\"477\":{\"h\":\"image minimizer\",\"t\":[\"对图片进行压缩，减少图片体积。\",\"只会处理项目本地图片，不会处理在线链接。建议在本地图片多的项目中使用。\",\"安装\",\" npm install image-minimizer-webpack-plugin --save-dev \",\"无损压缩。\",\" npm install imagemin-gifsicle imagemin-jpegtran imagemin-optipng imagemin-svgo --save-dev \",\"有损压缩。\",\" npm install imagemin-gifsicle imagemin-mozjpeg imagemin-pngquant imagemin-svgo --save-dev \",\"配置\",\"new ImageMinimizerPlugin({ minimizerOptions: { plugins: [ [\\\"gifsicle\\\", { interlaced: true }], [\\\"jpegtran\\\", { progressive: true }], [\\\"optipng\\\", { optimizationLevel: 5 }], [ \\\"svgo\\\", { plugins: extendDefaultPlugins([ { name: \\\"removeViewBox\\\", active: false, }, { name: \\\"addAttributesToSVGElement\\\", params: { attributes: [{ xmlns: \\\"http://www.w3.org/2000/svg\\\" }], }, }, ]), }, ], ], }, }), \"]},\"478\":{\"h\":\"优化代码运行性能\"},\"479\":{\"h\":\"code split\",\"t\":[\"webpack 默认会将所有 js 代码打包到一个文件中，导致体积过大加载缓慢。\",\"我们需要对代码进行分割，来提升加载速度，渲染页面加载对应对 js 文件。\",\"code split 将打包生成对文件进行分割，生成多个 js 文件。然后进行按需引入。\"]},\"480\":{\"h\":\"使用方式\",\"t\":[\"多入口打包。\",\"entry 配置项变为对象形式，键作为打包输出对文件名，输出文件以 [name] 的方式进行命名。值为入口文件路径。\",\" const HtmlWebpackPlugin = require('html-webpack-plugin') const path = require('path') module.exports = { entry: { app: './src/app.js', main: './src/main.js' }, output: { path: path.resolve(__dirname, 'dist'), filename: '[name].js' }, plugins: [ new HtmlWebpackPlugin({ template: path.resolve(__dirname, '/public/index.html') }) ], mode: 'production' } \",\"代码分割配置\",\"多个文件引入了相同代码，webpack 对这部分代码进行了多次打包，这会导致体积变大、性能降低。\",\"将复用代码提取为一个单独的文件，然后再进行复用。详细配置\",\" optimization: { splitChunks: { chunks: 'all', // 对所有代码进行分割 // minSize: 20000, // 代码分割最小对大小 // minRemainingSize: 0, // 确保提取对文件不能为0 // minChunks: 1, // 引用多少次才进行分割 // maxAsyncRequests: 30, // 按需并行加载最大文件数 // maxInitialRequests: 30, // 入口文件最多并行量 // enforceSizeThreshold: 50000, // 超过多少kb单独打包 cacheGroups: { // defaultVendors: { // test: /[\\\\\\\\/]node_modules[\\\\\\\\/]/, // priority: -10, // reuseExistingChunk: true // }, default: { minSize: 0, minChunks: 2, priority: -20, reuseExistingChunk: true } } } } \",\"按需加载，动态导入\",\"使用 import 函数。\",\" document.querySelector('id').onclick = () => { import(/* webpackChunkName: 'name' */ 'name.js') .then(res => {}) .catch() } \",\"使用注解 /* webpackChunkName: 'name' */ 可为打包模块命名，然后通过 chunkFilename 使用。\",\" output: { chunkFilename: '[name].js' } \"]},\"481\":{\"h\":\"preload / prefetch\",\"t\":[\"当使用懒加载时，资源过大会出现明显的卡顿问题。 预加载(preload/prefetch)可让浏览器在空闲的时间加载后面需要使用的资源（只加载并缓存不执行），很好的解决了这个问题。\",\"preload：让浏览器立即加载。\",\"prefetch：让浏览器在空闲时间加载。\",\"优缺点\",\"两者都只会进行加载缓存并不会执行。\",\"preload 优先级高于 prefetch。\",\"preload 只会加载当前页面使用的资源，prefetch 即可当前页面也可加载其他页面的资源。\",\"使用@vue/preload-webpack-plugin插件会自动将资源变为 prelaod 或 prefetch。\"]},\"482\":{\"h\":\"network cache\",\"t\":[\"当一个模块改变其他依赖的模块也随之改变，导致很多缓存文件失效。 可以生成一个 runtime 文件来保存哈希值和模块的对应的关系，当模块改变后runtime 文件也跟着改变， 但依赖的模块并未改变。这样很好的做到了缓存。\",\" optimization: { runtimeChunk: { // 设置文件名称 name: entrypoint => `runtime_4${entrypoint.name}.js` } } \"]},\"483\":{\"h\":\"core-js\",\"t\":[\"前面使用的智能预设 @babel/preset-env 智能对 es6 的语法进行编译，更高级的语法无法处理。core-js 是专门用来做 es6 以上的语法处理。\",\"下载依赖。\",\" npm i core-js \",\"引入。\",\" // 全部引入，体积过大 import 'core-js' // 手动按需引入 import 'core-js/es/promise' \",\"自动按需引入。\",\" module.exports = { presets: [ '@babel/preset-env', { useBuiltIns: 'usage', // 按需加载 corejs: 3 // 指定corejs版本 } ] } \"]},\"484\":{\"h\":\"pwa\"},\"485\":{\"h\":\"Article\"},\"486\":{\"h\":\"Note\"},\"487\":{\"h\":\"Interview\"},\"488\":{\"h\":\"Vue\"},\"489\":{\"h\":\"Java Script\"},\"490\":{\"h\":\"Vue\"},\"491\":{\"h\":\"Webpack\"}},\"dirtCount\":0,\"index\":[[\"手动按需引入\",{\"1\":{\"483\":1}}],[\"体积过大\",{\"1\":{\"483\":1}}],[\"智能对\",{\"1\":{\"483\":1}}],[\"智能预设\",{\"1\":{\"459\":1}}],[\"很好的解决了这个问题\",{\"1\":{\"481\":1}}],[\"详细配置\",{\"1\":{\"480\":1}}],[\"详细事件请查阅文档\",{\"1\":{\"411\":1}}],[\"键作为打包输出对文件名\",{\"1\":{\"480\":1}}],[\"建议在本地图片多的项目中使用\",{\"1\":{\"477\":1}}],[\"建议在前面加上分号\",{\"1\":{\"297\":1}}],[\"禁用\",{\"1\":{\"476\":1}}],[\"启动进程数量\",{\"1\":{\"473\":1}}],[\"启动服务器\",{\"1\":{\"461\":1}}],[\"启动服务器的域名\",{\"1\":{\"461\":1}}],[\"核数\",{\"1\":{\"473\":1}}],[\"核心\",{\"1\":{\"334\":1}}],[\"仅推荐在特别耗时的项目中时间\",{\"1\":{\"473\":1}}],[\"仅作用于当前组件\",{\"1\":{\"253\":1}}],[\"压缩会增加打包时间\",{\"1\":{\"472\":1,\"476\":1}}],[\"压缩依赖\",{\"1\":{\"464\":1}}],[\"剩下的就不进行匹配了\",{\"1\":{\"470\":1}}],[\"剩余参数\",{\"1\":{\"276\":1,\"333\":1}}],[\"比较慢\",{\"1\":{\"470\":1}}],[\"比较浪费性能\",{\"1\":{\"238\":1}}],[\"功能\",{\"1\":{\"469\":1}}],[\"热模块替换\",{\"1\":{\"469\":1}}],[\"热更新\",{\"0\":{\"461\":1}}],[\"速度很慢\",{\"1\":{\"469\":1}}],[\"难以看懂\",{\"1\":{\"467\":1}}],[\"兼容相关依赖\",{\"1\":{\"464\":1}}],[\"兼容处理\",{\"1\":{\"1\":1,\"455\":1,\"464\":1}}],[\"区分开发和生产\",{\"0\":{\"462\":1}}],[\"区别在于call传递的实参可以是多个\",{\"1\":{\"194\":1}}],[\"区别\",{\"1\":{\"99\":1,\"309\":1}}],[\"具体配置\",{\"0\":{\"459\":1}}],[\"具体配置规则看文档\",{\"1\":{\"82\":1}}],[\"官网配置规则\",{\"1\":{\"456\":1}}],[\"官方推荐的编写\",{\"1\":{\"118\":1}}],[\"笔记文档\",{\"1\":{\"456\":1}}],[\"笔触\",{\"1\":{\"27\":1}}],[\"位于根目录\",{\"1\":{\"458\":1}}],[\"位于项目根目录\",{\"1\":{\"456\":1}}],[\"位移\",{\"1\":{\"19\":1}}],[\"另一种方式是在配置\",{\"1\":{\"453\":1}}],[\"另一个原型中也包含着一个指向另一个构造函数的指针\",{\"1\":{\"366\":1}}],[\"另一个对象中的值也会随之改变\",{\"1\":{\"350\":1}}],[\"图片体积变大\",{\"1\":{\"452\":1}}],[\"树立规范\",{\"1\":{\"449\":1}}],[\"入口文件最多并行量\",{\"1\":{\"480\":1}}],[\"入口文件\",{\"1\":{\"447\":1}}],[\"命令时会自动读取该文件\",{\"1\":{\"448\":1}}],[\"命令\",{\"1\":{\"447\":1}}],[\"命名\",{\"1\":{\"359\":1}}],[\"命名捕获组\",{\"1\":{\"359\":1}}],[\"命名规则\",{\"0\":{\"261\":1}}],[\"命名必须使用use前缀\",{\"1\":{\"116\":1}}],[\"命名通常以set为前缀\",{\"1\":{\"97\":1}}],[\"过渡动画类名的改变\",{\"1\":{\"445\":1}}],[\"减小标签层级和内存占用\",{\"1\":{\"442\":1}}],[\"减少图片体积\",{\"1\":{\"477\":1}}],[\"减少代码体积\",{\"0\":{\"474\":1},\"1\":{\"465\":1,\"476\":1}}],[\"减少请求数量\",{\"1\":{\"452\":1}}],[\"减少页面ajax请求的数量\",{\"1\":{\"251\":1}}],[\"减少主线程的阻塞\",{\"1\":{\"225\":1}}],[\"减少\",{\"1\":{\"68\":1}}],[\"孙\",{\"1\":{\"440\":1}}],[\"追踪数据\",{\"1\":{\"439\":1}}],[\"追加一个路由\",{\"1\":{\"122\":1}}],[\"⚠️\",{\"1\":{\"434\":1}}],[\"⚠️注意\",{\"1\":{\"184\":1,\"192\":1}}],[\"坑\",{\"1\":{\"429\":1}}],[\"完整\",{\"1\":{\"428\":1}}],[\"鱿鱼\",{\"1\":{\"427\":1,\"429\":1,\"434\":1,\"438\":1}}],[\"读写\",{\"1\":{\"427\":1}}],[\"读取时进行分解展开\",{\"1\":{\"333\":1}}],[\"读取一行解释一行\",{\"1\":{\"296\":1}}],[\"读取变量声明\",{\"1\":{\"295\":1}}],[\"响应式数据判断\",{\"0\":{\"441\":1}}],[\"响应式的比较\",{\"0\":{\"425\":1}}],[\"响应数据并返回给浏览器\",{\"1\":{\"397\":1}}],[\"代理拦截对象中任意属性的变化\",{\"1\":{\"427\":1}}],[\"代理对象\",{\"1\":{\"423\":1,\"424\":1}}],[\"代码分割最小对大小\",{\"1\":{\"480\":1}}],[\"代码分割配置\",{\"1\":{\"480\":1}}],[\"代码打包到一个文件中\",{\"1\":{\"479\":1}}],[\"代码格式检查\",{\"1\":{\"455\":1}}],[\"代码质量检查\",{\"1\":{\"449\":1}}],[\"代码底层调用的是\",{\"1\":{\"367\":1}}],[\"代码底层还是调用的\",{\"1\":{\"288\":1}}],[\"代码可读性差\",{\"1\":{\"343\":1}}],[\"代码执行是从上往下依次执行的\",{\"1\":{\"294\":1}}],[\"代码执行的时候灵活的改变他的类型\",{\"1\":{\"259\":1}}],[\"代码清晰\",{\"1\":{\"222\":1}}],[\"代码题\",{\"0\":{\"167\":1}}],[\"代码语法规范\",{\"1\":{\"151\":1}}],[\"代码后才能被\",{\"1\":{\"91\":1}}],[\"代码检查\",{\"0\":{\"74\":1}}],[\"里面的\",{\"1\":{\"422\":1}}],[\"阻止默认事件\",{\"1\":{\"418\":1}}],[\"阻止事件冒泡\",{\"1\":{\"418\":1}}],[\"旧值\",{\"1\":{\"417\":1}}],[\"计算属性\",{\"1\":{\"417\":1}}],[\"计算表达式的值\",{\"1\":{\"271\":1}}],[\"冒泡阶段\",{\"1\":{\"414\":1}}],[\"冒泡流\",{\"1\":{\"200\":1}}],[\"找到触发事件的具体元素\",{\"1\":{\"414\":1}}],[\"找出问题\",{\"1\":{\"72\":1}}],[\"造成性能内存的一个消耗\",{\"1\":{\"413\":1}}],[\"耦合度太高\",{\"1\":{\"412\":1}}],[\"归宿问题\",{\"1\":{\"407\":1}}],[\"性能降低\",{\"1\":{\"480\":1}}],[\"性能优化\",{\"1\":{\"407\":1}}],[\"性质进行控制\",{\"1\":{\"384\":1}}],[\"批量操作dom时建议使用\",{\"1\":{\"407\":1}}],[\"瞬间确定\",{\"1\":{\"404\":1}}],[\"系列是静态获取\",{\"1\":{\"404\":1}}],[\"系列是动态获取\",{\"1\":{\"404\":1}}],[\"端口号相同\",{\"1\":{\"401\":1}}],[\"端口号不一致时会出现跨域的行为\",{\"1\":{\"204\":1}}],[\"协议相同\",{\"1\":{\"401\":1}}],[\"资源过大会出现明显的卡顿问题\",{\"1\":{\"481\":1}}],[\"资源编译成\",{\"1\":{\"451\":1}}],[\"资源没有发生改变\",{\"1\":{\"398\":1}}],[\"资源在别处\",{\"1\":{\"398\":1}}],[\"处理css兼容及压缩\",{\"0\":{\"464\":1}}],[\"处理css资源\",{\"0\":{\"451\":1}}],[\"处理html资源\",{\"0\":{\"460\":1}}],[\"处理js资源\",{\"0\":{\"455\":1}}],[\"处理字体资源及其他资源\",{\"0\":{\"454\":1}}],[\"处理图片资源\",{\"0\":{\"452\":1}}],[\"处理才能进行打包\",{\"1\":{\"450\":1}}],[\"处理样式资源\",{\"0\":{\"450\":1}}],[\"处理其他文件需要其他依赖包\",{\"1\":{\"446\":1}}],[\"处理\",{\"1\":{\"397\":1}}],[\"处理期间加入的微任务会一同执行\",{\"1\":{\"217\":1}}],[\"共有5种状态\",{\"1\":{\"397\":1}}],[\"状态进程\",{\"0\":{\"397\":1}}],[\"捕捉任意位置\",{\"1\":{\"388\":1}}],[\"捕获阶段\",{\"1\":{\"414\":1}}],[\"捕获\",{\"0\":{\"359\":1}}],[\"捕获流\",{\"1\":{\"200\":1}}],[\"​使用一个变量让多个事件联系起来\",{\"1\":{\"413\":1}}],[\"​前端\",{\"1\":{\"402\":1}}],[\"​后端拿到处理数据的回调函数名称\",{\"1\":{\"402\":1}}],[\"​创建一个发送请求的\",{\"1\":{\"402\":1}}],[\"​src\",{\"1\":{\"402\":1}}],[\"​\",{\"1\":{\"396\":1}}],[\"​通过\",{\"1\":{\"395\":1}}],[\"​将\",{\"1\":{\"394\":1}}],[\"​简化了\",{\"1\":{\"394\":1}}],[\"​返回一个触发失败的promise对象\",{\"1\":{\"391\":1}}],[\"​返回一个触发成功的promise对象\",{\"1\":{\"390\":1}}],[\"​建议在then中也返回一个promise对象\",{\"1\":{\"388\":1}}],[\"​解决了回调地狱\",{\"1\":{\"388\":1}}],[\"​https默认端口是443\",{\"1\":{\"202\":1}}],[\"哟哈哈\",{\"1\":{\"387\":2}}],[\"哟呵呵\",{\"1\":{\"387\":2}}],[\"冻结\",{\"1\":{\"385\":1}}],[\"想要密码不可能的\",{\"1\":{\"384\":1}}],[\"想要恢复之前的状态可使用\",{\"1\":{\"23\":1}}],[\"警告\",{\"1\":{\"384\":1}}],[\"监控对象\",{\"1\":{\"384\":1}}],[\"监听回调中依赖的响应式数据\",{\"1\":{\"430\":1}}],[\"监听多个数据变化\",{\"1\":{\"429\":1}}],[\"监听\",{\"1\":{\"429\":3}}],[\"监听的属性\",{\"1\":{\"429\":1}}],[\"监听的变量必须是data中的变量\",{\"1\":{\"417\":1}}],[\"监听的是一个引用地址\",{\"1\":{\"97\":1}}],[\"监听对象下的某个属性\",{\"1\":{\"417\":1,\"429\":1}}],[\"监听器\",{\"1\":{\"417\":1}}],[\"监听状态进程\",{\"1\":{\"399\":1}}],[\"监听已存在的属性是否发生改变\",{\"1\":{\"239\":1}}],[\"监听数据变化做出响应的一种机制\",{\"1\":{\"234\":1}}],[\"监听单个文件变化后自动进行编译\",{\"1\":{\"145\":1}}],[\"赋予的新值\",{\"1\":{\"384\":1}}],[\"赋值为\",{\"1\":{\"412\":1}}],[\"赋值完\",{\"1\":{\"405\":1}}],[\"赋值在执行阶段\",{\"1\":{\"295\":1}}],[\"赋值\",{\"1\":{\"263\":1}}],[\"赋值时会进行类型检查\",{\"1\":{\"139\":1}}],[\"锁定\",{\"1\":{\"384\":1}}],[\"强\",{\"1\":{\"381\":1}}],[\"强制转换\",{\"1\":{\"286\":1}}],[\"强制返回布尔类型\",{\"1\":{\"283\":1}}],[\"强制\",{\"0\":{\"214\":1},\"1\":{\"214\":1}}],[\"强制应用规则\",{\"1\":{\"72\":1}}],[\"覆盖能力\",{\"1\":{\"381\":1}}],[\"映射关系\",{\"1\":{\"378\":1}}],[\"没找到返回\",{\"1\":{\"377\":1}}],[\"没有列映射\",{\"1\":{\"467\":1}}],[\"没有该文件错误会定位到构建后代码的位置\",{\"1\":{\"467\":1}}],[\"没有提交参数时传null或不传\",{\"1\":{\"399\":1}}],[\"没有则新增\",{\"1\":{\"381\":1}}],[\"没有则添加\",{\"1\":{\"379\":1}}],[\"没有则回收该作用域\",{\"1\":{\"292\":1}}],[\"没有返回undefined\",{\"1\":{\"373\":1}}],[\"没有返回一个全新的值\",{\"1\":{\"373\":1}}],[\"没有继续向原型上层寻找\",{\"1\":{\"368\":1}}],[\"没有缓存\",{\"1\":{\"239\":1}}],[\"没有数据依赖时使用\",{\"1\":{\"222\":1}}],[\"没有同源策略的限制\",{\"1\":{\"204\":1}}],[\"query\",{\"1\":{\"404\":1,\"453\":4,\"454\":1,\"470\":1}}],[\"queryselectorall\",{\"1\":{\"273\":1,\"404\":1,\"415\":1}}],[\"queryselector\",{\"1\":{\"1\":1,\"21\":1,\"27\":6,\"28\":1,\"93\":1,\"102\":1,\"379\":2,\"384\":2,\"387\":1,\"402\":2,\"407\":2,\"415\":2,\"480\":1}}],[\"qc\",{\"1\":{\"377\":3}}],[\"qcarr\",{\"1\":{\"377\":10}}],[\"六大数据类型之外的数据类型\",{\"1\":{\"372\":1}}],[\"维护了\",{\"1\":{\"369\":1}}],[\"退居二线只负责创建对象\",{\"1\":{\"369\":1}}],[\"ƒ\",{\"1\":{\"368\":1}}],[\"终点都是\",{\"1\":{\"368\":2}}],[\"终点问题\",{\"0\":{\"368\":1}}],[\"给据返回结果来判断\",{\"1\":{\"367\":1}}],[\"给父级元素添加伪类\",{\"1\":{\"180\":1}}],[\"给父元素添加\",{\"1\":{\"41\":3}}],[\"给父元素内填充内容\",{\"1\":{\"41\":1}}],[\"假如另一个原型又是另一个类型的实例\",{\"1\":{\"366\":1}}],[\"显然\",{\"1\":{\"366\":1}}],[\"思想\",{\"1\":{\"361\":1}}],[\"银时\",{\"1\":{\"360\":4}}],[\"阿飞\",{\"1\":{\"360\":2}}],[\"否定断言\",{\"1\":{\"360\":2}}],[\"否则会影响浏览器的加载速度\",{\"1\":{\"405\":1}}],[\"否则会继续执行后面的语句\",{\"1\":{\"269\":1}}],[\"否则会出现this\",{\"1\":{\"96\":1}}],[\"否则\",{\"1\":{\"268\":1}}],[\"否则是前端的\",{\"1\":{\"133\":1}}],[\"否则返回值2\",{\"1\":{\"281\":1}}],[\"否则返回\",{\"1\":{\"129\":1}}],[\"否则返回缓存中的内容\",{\"1\":{\"110\":1}}],[\"肯定断言\",{\"1\":{\"360\":2}}],[\"断言在后\",{\"1\":{\"360\":1}}],[\"断言在前\",{\"1\":{\"360\":1}}],[\"断言\",{\"0\":{\"360\":1}}],[\"量词\",{\"1\":{\"358\":1}}],[\"量词的选择量\",{\"0\":{\"358\":1}}],[\"尽量减少dom的直接操作\",{\"1\":{\"405\":1}}],[\"尽量不是用index作为key\",{\"1\":{\"251\":1}}],[\"尽量不使用\",{\"1\":{\"119\":1}}],[\"尽可能少的匹配结果\",{\"1\":{\"358\":1}}],[\"尽可能多的匹配结果\",{\"1\":{\"358\":1}}],[\"贪婪模式\",{\"1\":{\"358\":1}}],[\"循序\",{\"1\":{\"354\":1}}],[\"循环内部关键字\",{\"1\":{\"271\":1}}],[\"循环\",{\"0\":{\"270\":1}}],[\"循环结合\",{\"1\":{\"228\":1}}],[\"正则实例中特殊标识\",{\"1\":{\"374\":1}}],[\"正则表示式规则\",{\"1\":{\"355\":1}}],[\"正则表达式能记录状态\",{\"1\":{\"355\":1}}],[\"正则表达式\",{\"0\":{\"354\":1}}],[\"正则声明\",{\"0\":{\"355\":1}}],[\"正负无穷大\",{\"1\":{\"263\":1}}],[\"把每一个属性进行拷贝\",{\"1\":{\"349\":1}}],[\"拷贝\",{\"0\":{\"348\":1}}],[\"看做一个整体\",{\"1\":{\"347\":1}}],[\"汉罗塔\",{\"1\":{\"347\":1}}],[\"斐波拉契求和\",{\"1\":{\"347\":1}}],[\"交给函数实现\",{\"1\":{\"346\":1}}],[\"交叉轴上的对齐方式\",{\"1\":{\"185\":1}}],[\"交叉轴\",{\"1\":{\"185\":1}}],[\"交叉轴对齐方式\",{\"1\":{\"184\":1}}],[\"简写\",{\"1\":{\"428\":1}}],[\"简称bom\",{\"1\":{\"403\":1}}],[\"简称dom\",{\"1\":{\"403\":1}}],[\"简单化\",{\"1\":{\"346\":1}}],[\"简化了函数\",{\"1\":{\"277\":1}}],[\"搞清楚递归的结束条件\",{\"1\":{\"346\":1}}],[\"栈溢出\",{\"1\":{\"346\":1}}],[\"链式调用\",{\"0\":{\"345\":1}}],[\"半导体明天大涨~\",{\"1\":{\"341\":1}}],[\"严格区分大小写\",{\"1\":{\"354\":1}}],[\"严格的与页面刷新频率一致\",{\"1\":{\"341\":1}}],[\"严格遵循执行循序\",{\"1\":{\"296\":1}}],[\"间隔时间\",{\"1\":{\"340\":1}}],[\"间隔时间必须大于等于\",{\"1\":{\"340\":1}}],[\"延迟\",{\"1\":{\"340\":1}}],[\"延迟执行时间\",{\"1\":{\"339\":1}}],[\"延迟执行\",{\"1\":{\"339\":1}}],[\"掉帧\",{\"1\":{\"340\":1}}],[\"毫秒值\",{\"1\":{\"339\":1,\"340\":1}}],[\"邻边比斜边\",{\"1\":{\"337\":1}}],[\"勾股定理\",{\"1\":{\"337\":1}}],[\"角度和边的比值关系\",{\"0\":{\"337\":1}}],[\"角度值\",{\"1\":{\"55\":1}}],[\"至少出现1次\",{\"1\":{\"357\":1}}],[\"至少出现0次\",{\"1\":{\"357\":1}}],[\"至少两个参数\",{\"1\":{\"336\":1}}],[\"至少循环一次\",{\"1\":{\"272\":1}}],[\"求次方数\",{\"1\":{\"336\":1}}],[\"求最小\",{\"1\":{\"336\":1}}],[\"求余\",{\"1\":{\"280\":1}}],[\"去除首位空格\",{\"1\":{\"418\":1}}],[\"去除小数\",{\"1\":{\"336\":1}}],[\"去除字符串首位空格\",{\"1\":{\"315\":1}}],[\"四舍五入\",{\"1\":{\"336\":1}}],[\"整数的绝对值是本身\",{\"1\":{\"336\":1}}],[\"整体为\",{\"1\":{\"328\":1}}],[\"整体提升\",{\"1\":{\"295\":1}}],[\"借助第三个变量\",{\"1\":{\"335\":1}}],[\"效率比较低\",{\"1\":{\"335\":1}}],[\"左右的时间\",{\"1\":{\"473\":1}}],[\"左右结构一样\",{\"1\":{\"334\":1}}],[\"左\",{\"1\":{\"381\":1}}],[\"左上右下\",{\"1\":{\"53\":1}}],[\"左上\",{\"1\":{\"53\":1}}],[\"写入时进行打包\",{\"1\":{\"333\":1}}],[\"降序\",{\"1\":{\"332\":1}}],[\"降低了书写成本\",{\"1\":{\"277\":1}}],[\"降低\",{\"1\":{\"73\":1}}],[\"升序\",{\"1\":{\"332\":1}}],[\"迭代初始值\",{\"1\":{\"331\":1}}],[\"迭代体\",{\"1\":{\"331\":1}}],[\"迭代时以初始值作为起点\",{\"1\":{\"331\":1}}],[\"筛选满足条件的所有元素\",{\"1\":{\"329\":1}}],[\"查\",{\"1\":{\"376\":1}}],[\"查询参数\",{\"1\":{\"453\":1}}],[\"查询是否有这个映射关系\",{\"1\":{\"379\":1}}],[\"查询映射\",{\"1\":{\"379\":1}}],[\"查询这个值是否是同\",{\"1\":{\"373\":1}}],[\"查询原型链\",{\"0\":{\"367\":1}}],[\"查询字符串\",{\"1\":{\"122\":1}}],[\"查找满足条件的第一项并返回\",{\"1\":{\"327\":1}}],[\"改\",{\"1\":{\"325\":1,\"376\":1}}],[\"改变引用地址\",{\"1\":{\"426\":1}}],[\"改变引用内存地址\",{\"1\":{\"192\":1}}],[\"改变了原型的指向\",{\"1\":{\"365\":1}}],[\"改变之后无法修改回来\",{\"1\":{\"302\":1}}],[\"改变\",{\"0\":{\"302\":1}}],[\"改变this指向\",{\"1\":{\"301\":1}}],[\"改变都会触发两次重新渲染\",{\"1\":{\"114\":1}}],[\"改变后调用\",{\"1\":{\"108\":1}}],[\"改变前调用\",{\"1\":{\"108\":1}}],[\"改变层级\",{\"1\":{\"61\":1}}],[\"改变元素的层级\",{\"1\":{\"57\":1}}],[\"改变图片大小\",{\"1\":{\"47\":1,\"48\":1}}],[\"删除改变的模块\",{\"1\":{\"469\":1}}],[\"删除必须经过父元素的同意\",{\"1\":{\"407\":1}}],[\"删除元素\",{\"1\":{\"407\":1}}],[\"删除映射\",{\"1\":{\"379\":2}}],[\"删除\",{\"1\":{\"376\":1,\"427\":1}}],[\"删除set对象中的某个元素\",{\"1\":{\"376\":1}}],[\"删除的个数\",{\"1\":{\"325\":1}}],[\"删除数组第一项\",{\"1\":{\"324\":1}}],[\"删除数组最后一项\",{\"1\":{\"324\":1}}],[\"删除数组元素\",{\"1\":{\"324\":1}}],[\"删\",{\"1\":{\"325\":1}}],[\"支持\",{\"1\":{\"420\":1}}],[\"支持多个参数\",{\"1\":{\"323\":1}}],[\"支持通过\",{\"1\":{\"158\":1}}],[\"个盘子\",{\"1\":{\"347\":1}}],[\"个\",{\"1\":{\"318\":1}}],[\"个规则\",{\"1\":{\"84\":1}}],[\"负数的绝对值是相反数\",{\"1\":{\"336\":1}}],[\"负数表示从后面开始\",{\"1\":{\"325\":1}}],[\"负数从0开始截取\",{\"1\":{\"312\":1}}],[\"负数返回字符串后面的内容\",{\"1\":{\"312\":1}}],[\"意为排除前面几位并且排除后面几位\",{\"1\":{\"311\":1}}],[\"截取的结束位置\",{\"1\":{\"312\":1}}],[\"截取的长度\",{\"1\":{\"312\":1}}],[\"截取的开始位置\",{\"1\":{\"312\":2}}],[\"截取结束下标\",{\"1\":{\"311\":1}}],[\"截取开始下标\",{\"1\":{\"311\":1}}],[\"截取字符串后面整数位的字符\",{\"1\":{\"311\":1}}],[\"截取字符串\",{\"1\":{\"311\":1,\"312\":1}}],[\"要定义或修改的属性配置对象\",{\"1\":{\"384\":1}}],[\"要定义或修改的属性的名称\",{\"1\":{\"384\":1}}],[\"要定义属性\",{\"1\":{\"384\":1}}],[\"要替换的字符串\",{\"1\":{\"310\":1}}],[\"要么是一个\",{\"1\":{\"204\":1}}],[\"要么是请求头的\",{\"1\":{\"204\":1}}],[\"拼接回调函数执行返回给前端\",{\"1\":{\"402\":1}}],[\"拼接数组\",{\"1\":{\"319\":1}}],[\"拼接同效\",{\"1\":{\"307\":1}}],[\"拼接字符串\",{\"1\":{\"307\":1}}],[\"码对应的字符\",{\"1\":{\"306\":1}}],[\"码\",{\"1\":{\"305\":1}}],[\"码进行比较\",{\"1\":{\"284\":1}}],[\"才返回\",{\"1\":{\"328\":1}}],[\"才算改变完成\",{\"1\":{\"302\":1}}],[\"才会触发该事件\",{\"1\":{\"245\":1}}],[\"即可当前页面也可加载其他页面的资源\",{\"1\":{\"481\":1}}],[\"即实例对象的原型等于构造函数的原型\",{\"1\":{\"365\":1}}],[\"即上层函数或window\",{\"1\":{\"301\":1}}],[\"即model\",{\"1\":{\"233\":1}}],[\"绑定函数执行时默认传人此参数\",{\"1\":{\"418\":1}}],[\"绑定\",{\"1\":{\"418\":2}}],[\"绑定在上下文中\",{\"1\":{\"301\":1}}],[\"绑定上下文环境\",{\"1\":{\"169\":1}}],[\"谁调用\",{\"1\":{\"301\":1}}],[\"移除过滤器\",{\"1\":{\"445\":1}}],[\"移除\",{\"1\":{\"445\":1,\"462\":2}}],[\"移除引用\",{\"1\":{\"298\":1}}],[\"移除事件监听\",{\"1\":{\"240\":2,\"412\":1}}],[\"拥有独立作用域\",{\"1\":{\"298\":1}}],[\"拥有块级元素特性\",{\"1\":{\"57\":1}}],[\"称为闭包函数\",{\"1\":{\"298\":1}}],[\"次数\",{\"1\":{\"298\":1}}],[\"匿名函数的名称是空字符串\",{\"1\":{\"300\":1}}],[\"匿名函数\",{\"1\":{\"297\":1}}],[\"防止表达式拼接报错\",{\"1\":{\"297\":1}}],[\"防抖\",{\"0\":{\"352\":1},\"1\":{\"169\":1,\"353\":1}}],[\"让浏览器在空闲时间加载\",{\"1\":{\"481\":1}}],[\"让浏览器立即加载\",{\"1\":{\"481\":1}}],[\"让每个文件只能匹配一个\",{\"1\":{\"470\":1}}],[\"让代码在编译\",{\"1\":{\"465\":1}}],[\"让代码拥有执行循序\",{\"1\":{\"345\":1}}],[\"让一个响应式数据变为只读的\",{\"1\":{\"437\":1}}],[\"让所有的实例对象都可以用\",{\"1\":{\"365\":1}}],[\"让其立即执行\",{\"1\":{\"297\":1}}],[\"让子类实现实例化和抽象方法\",{\"1\":{\"157\":1}}],[\"立执行函数\",{\"0\":{\"297\":1}}],[\"总结\",{\"1\":{\"295\":1}}],[\"报错\",{\"1\":{\"295\":2}}],[\"暂时性死区\",{\"1\":{\"295\":2}}],[\"确保提取对文件不能为0\",{\"1\":{\"480\":1}}],[\"确保每个组件中data的数据是独立\",{\"1\":{\"236\":1}}],[\"确定作用域之间的关系\",{\"1\":{\"295\":1}}],[\"校验语法错误\",{\"1\":{\"295\":1}}],[\"预加载\",{\"1\":{\"481\":1}}],[\"预设\",{\"1\":{\"459\":2}}],[\"预处理器时需要下载预处理器\",{\"1\":{\"451\":1}}],[\"预编译阶段\",{\"0\":{\"295\":1}}],[\"预测量\",{\"1\":{\"18\":1}}],[\"访问属性时可以进行监控\",{\"1\":{\"384\":1}}],[\"访问一个变量时\",{\"1\":{\"293\":1}}],[\"访问的路由\",{\"1\":{\"125\":1}}],[\"访问的变量也是初始化时的状态\",{\"1\":{\"112\":1}}],[\"外部不能进行访问\",{\"1\":{\"293\":1}}],[\"外边距合并\",{\"0\":{\"40\":1}}],[\"程序执行完离开作用域消失\",{\"1\":{\"292\":1}}],[\"那么直接执行\",{\"1\":{\"393\":1}}],[\"那么上述关系依然成立\",{\"1\":{\"366\":1}}],[\"那么假如我们让原型对象等于另一个类型的实例\",{\"1\":{\"366\":1}}],[\"那么属性值完成匹配\",{\"1\":{\"334\":1}}],[\"那么这个作用域就不会消失\",{\"1\":{\"291\":1}}],[\"那么类中会自动添加该属性成员\",{\"1\":{\"154\":1}}],[\"底层还是调用\",{\"1\":{\"287\":1}}],[\"底层运算\",{\"1\":{\"283\":2}}],[\"结构移动到指定位置\",{\"1\":{\"443\":1}}],[\"结构转字符串会得到\",{\"1\":{\"287\":1}}],[\"结果会怎样\",{\"1\":{\"366\":1}}],[\"结束位置\",{\"1\":{\"347\":1}}],[\"结束循环\",{\"1\":{\"271\":1}}],[\"例如\",{\"1\":{\"286\":1,\"475\":1}}],[\"例子\",{\"0\":{\"347\":1,\"399\":1},\"1\":{\"139\":1,\"334\":1}}],[\"乘除\",{\"1\":{\"285\":1}}],[\"加属性名称的形式进行自定义属性设置\",{\"1\":{\"387\":1}}],[\"加减\",{\"1\":{\"285\":1}}],[\"加载时才会去创建\",{\"1\":{\"463\":1}}],[\"加载器\",{\"1\":{\"448\":1}}],[\"加载单个html页面\",{\"1\":{\"232\":1}}],[\"加载优先级\",{\"1\":{\"76\":1}}],[\"增加优先级\",{\"1\":{\"285\":1}}],[\"先于\",{\"1\":{\"422\":1}}],[\"先删后加\",{\"1\":{\"376\":1}}],[\"先删除后添加\",{\"1\":{\"325\":1}}],[\"先访问对象自己的属性\",{\"1\":{\"368\":1}}],[\"先执行\",{\"1\":{\"288\":1}}],[\"先进行类型转换再进行比较\",{\"1\":{\"284\":1}}],[\"先使用再自加\",{\"1\":{\"280\":1}}],[\"绝对路径\",{\"1\":{\"448\":1}}],[\"绝对值\",{\"1\":{\"336\":1}}],[\"绝对定位\",{\"1\":{\"60\":1,\"61\":1,\"179\":1,\"182\":1}}],[\"绝不会编译执行后面的代码\",{\"1\":{\"283\":1}}],[\"已经内置了\",{\"1\":{\"452\":1}}],[\"已经发送了\",{\"1\":{\"397\":1}}],[\"已经生成了一个\",{\"1\":{\"397\":1}}],[\"已经能得出结果\",{\"1\":{\"283\":1}}],[\"已有属性进行覆盖\",{\"1\":{\"381\":1}}],[\"已有该属性会进行修改\",{\"1\":{\"379\":1}}],[\"已知\",{\"1\":{\"170\":1}}],[\"已知数组实现扁平化并去重\",{\"0\":{\"170\":1}}],[\"惰性判断法则\",{\"1\":{\"283\":1}}],[\"两项不交换位置\",{\"1\":{\"332\":1}}],[\"两个表达式同时为假则为假\",{\"1\":{\"283\":1}}],[\"两个条件同时满足才为\",{\"1\":{\"283\":1}}],[\"两者区别\",{\"1\":{\"272\":1}}],[\"两者同时使用是不推荐的\",{\"1\":{\"238\":1}}],[\"两者是可以相互转换的\",{\"1\":{\"196\":1}}],[\"两者都只会进行加载缓存并不会执行\",{\"1\":{\"481\":1}}],[\"两者都是判断数据类型的方法\",{\"1\":{\"211\":1}}],[\"两者都是隐藏元素\",{\"1\":{\"183\":1}}],[\"两者都能改变this的指向\",{\"1\":{\"194\":1}}],[\"逗号运算符\",{\"0\":{\"282\":1}}],[\"算术运算符使用数值\",{\"1\":{\"280\":1}}],[\"算术运算符\",{\"0\":{\"280\":1}}],[\"算法根据新旧虚拟\",{\"1\":{\"243\":1}}],[\"算法\",{\"0\":{\"31\":1,\"35\":1,\"165\":1}}],[\"输出文件以\",{\"1\":{\"480\":1}}],[\"输出目录\",{\"1\":{\"447\":1}}],[\"输出\",{\"1\":{\"276\":1}}],[\"输入\",{\"1\":{\"276\":1}}],[\"此阶段会进行内存空间的开辟\",{\"1\":{\"295\":1}}],[\"此处的变量不需要声明\",{\"1\":{\"276\":1}}],[\"此时实例未创建完成\",{\"1\":{\"422\":1}}],[\"此时还未响应给浏览器\",{\"1\":{\"397\":1}}],[\"此时的原型对象将包含一个指向另一个原型的指针\",{\"1\":{\"366\":1}}],[\"此时只提升了变量并没有初始化\",{\"1\":{\"206\":1}}],[\"此时可以省略类型声明\",{\"1\":{\"138\":1}}],[\"此时传递一个回调函数\",{\"1\":{\"97\":1}}],[\"形式定义的\",{\"1\":{\"422\":1}}],[\"形参默认值\",{\"0\":{\"278\":1}}],[\"形参比实参多\",{\"1\":{\"276\":1}}],[\"形参和实参一一对应\",{\"1\":{\"276\":1}}],[\"形参\",{\"1\":{\"276\":1}}],[\"形成了一个独立的作用域\",{\"1\":{\"193\":1}}],[\"逻辑更清楚\",{\"1\":{\"432\":1}}],[\"逻辑运算符\",{\"0\":{\"283\":1}}],[\"逻辑\",{\"1\":{\"274\":1}}],[\"逻辑的方法\",{\"1\":{\"118\":1}}],[\"适用于次数未知的循环\",{\"1\":{\"272\":1}}],[\"适合少量文件\",{\"1\":{\"150\":1}}],[\"继续向上层作用域查找\",{\"1\":{\"293\":1}}],[\"继续执行后面的循环\",{\"1\":{\"271\":1}}],[\"继承的类又称子类\",{\"1\":{\"155\":1}}],[\"继承后子类会拥有父类的所有属性和方法\",{\"1\":{\"155\":1}}],[\"继承\",{\"0\":{\"155\":1,\"370\":1},\"1\":{\"97\":1,\"153\":1,\"197\":1}}],[\"跳板\",{\"1\":{\"347\":1}}],[\"跳出指定循环\",{\"1\":{\"271\":1}}],[\"跳过本次循环\",{\"1\":{\"271\":1}}],[\"跳转\",{\"1\":{\"131\":1}}],[\"跳转到指定路由\",{\"1\":{\"131\":1}}],[\"条件\",{\"1\":{\"281\":1}}],[\"条件表达式最终返回一个\",{\"1\":{\"268\":1}}],[\"条件判断语句\",{\"0\":{\"268\":1}}],[\"条件判断的两种形式\",{\"1\":{\"263\":1}}],[\"通知\",{\"1\":{\"439\":1}}],[\"通常用于流程控制\",{\"1\":{\"267\":1}}],[\"通过重写数组\",{\"1\":{\"426\":1}}],[\"通过definecomponent函数定义组件\",{\"1\":{\"420\":1}}],[\"通过dispatch来分发任务提交mutations\",{\"1\":{\"248\":1}}],[\"通过constructor可以访问实例的构造器\",{\"1\":{\"365\":1}}],[\"通过cdn引入第三方库\",{\"1\":{\"251\":1}}],[\"通过循环可以遍历所有的匹配结果\",{\"1\":{\"355\":1}}],[\"通过namespaced\",{\"1\":{\"248\":1}}],[\"通过pushstate\",{\"1\":{\"245\":1}}],[\"通过proxy代理拦截对象属性的操作\",{\"1\":{\"234\":1}}],[\"通过provider组件包裹\",{\"1\":{\"118\":1}}],[\"通过props下的children属性\",{\"1\":{\"101\":1}}],[\"通过object\",{\"1\":{\"234\":1,\"426\":1}}],[\"通过数据驱动应用\",{\"1\":{\"233\":1}}],[\"通过打包工具进行反向代理服务器的配置\",{\"1\":{\"204\":1}}],[\"通过定时器settimeout和cleartimeout取消ajax请求\",{\"1\":{\"203\":1}}],[\"通过ssl进行加密传输\",{\"1\":{\"202\":1}}],[\"通过json\",{\"1\":{\"192\":1}}],[\"通过配置错误的值可以查看可配置的选项\",{\"1\":{\"151\":1}}],[\"通过render函数渲染好整个页面\",{\"1\":{\"249\":1}}],[\"通过renderprops属性绑定一个函数并返回一个组件\",{\"1\":{\"101\":1}}],[\"通过react\",{\"1\":{\"126\":1}}],[\"通过react的lazy函数配合import函数\",{\"1\":{\"126\":1}}],[\"通过路由渲染的组件会自动传入props中\",{\"1\":{\"122\":1}}],[\"通过to属性指定路由\",{\"1\":{\"120\":1}}],[\"通过this\",{\"1\":{\"97\":1}}],[\"通过钩子函数usecontext使用\",{\"1\":{\"105\":1}}],[\"通过回调函数的形式获取\",{\"1\":{\"99\":1}}],[\"通过类名作为标签渲染时会new一个该类的实例\",{\"1\":{\"96\":1}}],[\"通过函数名作为标签进行渲染时会调用此函数\",{\"1\":{\"95\":1}}],[\"通过搜索插件的方式进行安装\",{\"1\":{\"70\":1}}],[\"通过方向\",{\"1\":{\"49\":1}}],[\"通过像素或百分比设置\",{\"1\":{\"48\":1,\"49\":1}}],[\"通过\",{\"0\":{\"93\":1},\"1\":{\"13\":1,\"23\":1,\"69\":1,\"96\":1,\"99\":1,\"105\":1,\"119\":1,\"204\":1,\"254\":1,\"276\":1,\"362\":1,\"397\":1,\"412\":1,\"427\":2,\"429\":1,\"459\":1}}],[\"又称条件运算符\",{\"1\":{\"281\":1}}],[\"又称函数调用\",{\"1\":{\"275\":1}}],[\"又称代码块\",{\"1\":{\"267\":1}}],[\"又称方法重写\",{\"1\":{\"155\":1}}],[\"流程\",{\"1\":{\"402\":1}}],[\"流程控制\",{\"0\":{\"266\":1}}],[\"流失率\",{\"1\":{\"257\":1}}],[\"抛出一个错误\",{\"1\":{\"265\":1,\"293\":1}}],[\"打乱一个数组\",{\"1\":{\"332\":1}}],[\"打印警告\",{\"1\":{\"265\":1}}],[\"打印错误\",{\"1\":{\"265\":1}}],[\"打包时移除没有使用的第三方库或未引用代码\",{\"1\":{\"475\":1}}],[\"打包时每个文件都会对每个\",{\"1\":{\"470\":1}}],[\"打包速度慢\",{\"1\":{\"467\":1}}],[\"打包速度快\",{\"1\":{\"467\":1}}],[\"打包模式\",{\"1\":{\"448\":1}}],[\"打包js\",{\"1\":{\"448\":1}}],[\"打包体积减少\",{\"1\":{\"420\":1}}],[\"打包成一个整体\",{\"1\":{\"274\":1}}],[\"打包去掉map文件\",{\"1\":{\"251\":1}}],[\"打包入口文件\",{\"1\":{\"93\":1,\"448\":1}}],[\"打包\",{\"0\":{\"152\":1},\"1\":{\"93\":1}}],[\"打包默认使用的是\",{\"1\":{\"77\":1}}],[\"日志输出\",{\"1\":{\"265\":1}}],[\"日志打印与错误抛出\",{\"0\":{\"265\":1}}],[\"弹窗\",{\"1\":{\"265\":1}}],[\"弹性盒模型\",{\"1\":{\"175\":1}}],[\"利用\",{\"1\":{\"402\":1}}],[\"利用定时器解决高频操作存在的操作无效的问题\",{\"1\":{\"351\":1}}],[\"利用递归遍历对象的每一个属性\",{\"1\":{\"349\":1}}],[\"利用对象的\",{\"1\":{\"264\":1}}],[\"利用h5的historyapi\",{\"1\":{\"245\":1}}],[\"其次是对代码格式进行规范检查\",{\"1\":{\"455\":1}}],[\"其余都是\",{\"1\":{\"264\":1}}],[\"其他改变\",{\"0\":{\"445\":1}}],[\"其他类型会默认调用\",{\"1\":{\"372\":1}}],[\"其他形式会以参数作为值创建数组\",{\"1\":{\"316\":1}}],[\"其他被引用的地方也会改变\",{\"1\":{\"208\":1}}],[\"其他\",{\"0\":{\"108\":1}}],[\"其他均为标签的子元素或内容\",{\"1\":{\"90\":1}}],[\"除复杂类型外其他类型转字符串都是直接加上引号\",{\"1\":{\"287\":1}}],[\"除简单类型外\",{\"1\":{\"264\":1}}],[\"除function\",{\"1\":{\"211\":1}}],[\"恒\",{\"1\":{\"263\":1}}],[\"等价于\",{\"1\":{\"295\":1}}],[\"等\",{\"1\":{\"286\":1}}],[\"等于\",{\"1\":{\"263\":1,\"284\":2}}],[\"等待异步组件时渲染一些额外的内容\",{\"1\":{\"444\":1}}],[\"等待所有的\",{\"1\":{\"392\":1}}],[\"等待一次渲染\",{\"1\":{\"341\":1}}],[\"等待一个\",{\"1\":{\"221\":1,\"394\":1}}],[\"等待完成后才执行后面的代码\",{\"1\":{\"221\":1}}],[\"布尔转数值\",{\"1\":{\"288\":1}}],[\"布尔\",{\"1\":{\"263\":1}}],[\"布局\",{\"0\":{\"185\":1}}],[\"八\",{\"1\":{\"263\":1}}],[\"八进制转十进制\",{\"1\":{\"263\":1}}],[\"八进制\",{\"1\":{\"263\":1}}],[\"余0\",{\"1\":{\"263\":1}}],[\"余\",{\"1\":{\"263\":7}}],[\"商\",{\"1\":{\"263\":8}}],[\"连续取余\",{\"1\":{\"263\":1}}],[\"连接的类型必须同时满足\",{\"1\":{\"140\":1}}],[\"连接处的样式\",{\"1\":{\"15\":1}}],[\"得出一个布尔值\",{\"1\":{\"283\":1}}],[\"得出\",{\"1\":{\"263\":1}}],[\"满16进1\",{\"1\":{\"263\":1}}],[\"十六进制时\",{\"1\":{\"263\":1}}],[\"十六进制相互转换\",{\"1\":{\"263\":1}}],[\"十六进制\",{\"1\":{\"263\":1}}],[\"十进制转其他进制\",{\"1\":{\"263\":1}}],[\"十进制转十进制\",{\"1\":{\"263\":1}}],[\"十进制\",{\"1\":{\"263\":1}}],[\"二元运算符\",{\"1\":{\"280\":1}}],[\"二\",{\"1\":{\"263\":1}}],[\"二进制转八\",{\"1\":{\"263\":1}}],[\"二进制转八进制\",{\"1\":{\"263\":1}}],[\"二进制转十六进制\",{\"1\":{\"263\":1}}],[\"二进制转十进制\",{\"1\":{\"263\":1}}],[\"二进制\",{\"1\":{\"263\":1}}],[\"二次贝塞尔曲线\",{\"1\":{\"10\":1}}],[\"常见状态码\",{\"0\":{\"398\":1}}],[\"常见的扩展方法有\",{\"1\":{\"253\":1}}],[\"常用修饰符\",{\"1\":{\"418\":1}}],[\"常用来发送数据\",{\"1\":{\"396\":1}}],[\"常用做求距离\",{\"1\":{\"336\":1}}],[\"常用于状态设置和条件判断\",{\"1\":{\"263\":1}}],[\"常用进制\",{\"1\":{\"263\":1}}],[\"特点\",{\"1\":{\"302\":1}}],[\"特殊字符使用反斜杠\",{\"1\":{\"355\":1}}],[\"特殊的等腰三角形比值关系\",{\"1\":{\"337\":1}}],[\"特殊\",{\"1\":{\"311\":1}}],[\"特殊列子\",{\"1\":{\"295\":1}}],[\"特殊数值\",{\"1\":{\"263\":1}}],[\"特性\",{\"1\":{\"57\":1}}],[\"科学计数法\",{\"1\":{\"263\":1}}],[\"倍数的乘积使其变成整数再进行操作\",{\"1\":{\"263\":1}}],[\"换行匹配\",{\"1\":{\"355\":1}}],[\"换行\",{\"1\":{\"263\":1}}],[\"转位数值类型\",{\"1\":{\"418\":1}}],[\"转为\",{\"1\":{\"418\":1,\"423\":1}}],[\"转为行内块级元素\",{\"1\":{\"60\":1}}],[\"转布尔类型的六大假值\",{\"1\":{\"289\":1}}],[\"转布尔\",{\"0\":{\"289\":1}}],[\"转数值\",{\"0\":{\"288\":1}}],[\"转字符串\",{\"0\":{\"287\":1}}],[\"转八进制\",{\"1\":{\"263\":1}}],[\"转二进制\",{\"1\":{\"263\":1}}],[\"转十进制\",{\"1\":{\"263\":1}}],[\"转义字符\",{\"1\":{\"263\":1,\"303\":1}}],[\"单两者返回的内容不一样\",{\"1\":{\"356\":1}}],[\"单个参数形式进行接收\",{\"1\":{\"302\":1}}],[\"单引号\",{\"1\":{\"263\":1}}],[\"单独用标签包裹文字进行缩放\",{\"1\":{\"188\":1}}],[\"单独设置项目在主轴\",{\"1\":{\"185\":1}}],[\"双引号\",{\"1\":{\"263\":2}}],[\"驼峰命名\",{\"1\":{\"261\":1}}],[\"符号开头\",{\"1\":{\"261\":1}}],[\"弱\",{\"1\":{\"381\":1}}],[\"弱类型\",{\"1\":{\"259\":1}}],[\"弱引用\",{\"1\":{\"219\":1}}],[\"框进行修改\",{\"1\":{\"258\":1}}],[\"表达式\",{\"1\":{\"357\":1,\"417\":1}}],[\"表达式为\",{\"1\":{\"281\":1}}],[\"表达式整个都被省略掉了\",{\"1\":{\"271\":1}}],[\"表单校验没了\",{\"1\":{\"258\":1}}],[\"表格固定定位导致表单校验失效\",{\"0\":{\"258\":1}}],[\"表示数据获取成功\",{\"1\":{\"399\":1}}],[\"表示将这个函数转换成异步函数\",{\"1\":{\"394\":1}}],[\"表示捕获组\",{\"1\":{\"359\":1}}],[\"表示取反\",{\"1\":{\"357\":1}}],[\"表示不存在或未被初始化\",{\"1\":{\"263\":1}}],[\"表示\",{\"1\":{\"263\":1}}],[\"表示接受任意域名的请求\",{\"1\":{\"204\":1}}],[\"表示当前类的父类\",{\"1\":{\"155\":1}}],[\"表示任意文件\",{\"1\":{\"146\":1}}],[\"表示任意目录\",{\"1\":{\"146\":1}}],[\"表示以什么结尾\",{\"1\":{\"63\":1}}],[\"表示以什么开头\",{\"1\":{\"63\":1}}],[\"表示图片绘制的起点\",{\"1\":{\"17\":1}}],[\"渠道分组\",{\"1\":{\"257\":1}}],[\"留存率\",{\"1\":{\"257\":1}}],[\"运行时性能更好\",{\"1\":{\"465\":1}}],[\"运行环境\",{\"1\":{\"78\":1}}],[\"运算的结果根据给定条件在两个值中取其一\",{\"1\":{\"281\":1}}],[\"运算符的优先级\",{\"1\":{\"285\":1}}],[\"运算符优先级\",{\"0\":{\"285\":1}}],[\"运算符\",{\"0\":{\"279\":1}}],[\"运营周报\",{\"0\":{\"257\":1}}],[\"信息中配置\",{\"1\":{\"255\":1}}],[\"权限管理分为页面权限和按钮权限的管理\",{\"1\":{\"255\":1}}],[\"权限管理\",{\"0\":{\"255\":1}}],[\"虽然不能直接修改传递过来的\",{\"1\":{\"254\":1}}],[\"反射对代理对象进行操作\",{\"1\":{\"427\":1}}],[\"反之使用缓存中的数据\",{\"1\":{\"417\":1}}],[\"反之则不行\",{\"1\":{\"254\":1}}],[\"反向思考\",{\"1\":{\"346\":1}}],[\"反向绘制\",{\"1\":{\"18\":1}}],[\"反转数组\",{\"1\":{\"321\":1}}],[\"反引号\",{\"1\":{\"263\":1}}],[\"做或的选择\",{\"1\":{\"357\":1}}],[\"做动画欠佳\",{\"1\":{\"340\":1}}],[\"做数组项设置到mixins选项\",{\"1\":{\"253\":1}}],[\"做为其他派生类的基类使用\",{\"1\":{\"157\":1}}],[\"局部混入\",{\"1\":{\"253\":1}}],[\"选项中进行配置\",{\"1\":{\"458\":1}}],[\"选项进行配置\",{\"1\":{\"456\":1}}],[\"选项和组件里面一样\",{\"1\":{\"253\":1}}],[\"选择器\",{\"1\":{\"443\":1}}],[\"选择配置规则\",{\"1\":{\"72\":1}}],[\"它依赖于\",{\"1\":{\"475\":1}}],[\"它是一个配置对象\",{\"1\":{\"253\":1}}],[\"它决定了元素如何进行定位以及与其他元素的关系和相互作用\",{\"1\":{\"174\":1}}],[\"复杂类型之间建立关系\",{\"1\":{\"378\":1}}],[\"复杂类型转字符串\",{\"1\":{\"287\":1}}],[\"复杂的问题转换为对象的问题\",{\"1\":{\"361\":1}}],[\"复杂数据类型\",{\"0\":{\"264\":1}}],[\"复用代码\",{\"1\":{\"253\":1}}],[\"复合属性grid\",{\"1\":{\"185\":2}}],[\"复合属性gap\",{\"1\":{\"185\":1}}],[\"复合属性place\",{\"1\":{\"185\":1}}],[\"复合属性进行设置\",{\"1\":{\"19\":1}}],[\"混入对象可包含组件任意选项\",{\"1\":{\"253\":1}}],[\"混入\",{\"1\":{\"253\":1}}],[\"精确分发时使用具名插槽\",{\"1\":{\"253\":1}}],[\"属于引用类型\",{\"1\":{\"330\":1}}],[\"属于内容扩展\",{\"1\":{\"253\":1}}],[\"属性绑定\",{\"1\":{\"418\":1}}],[\"属性节点\",{\"1\":{\"408\":1}}],[\"属性在请求资源时不会受到同源策略的影响\",{\"1\":{\"402\":1}}],[\"属性获取状态码\",{\"1\":{\"398\":1}}],[\"属性获取\",{\"1\":{\"397\":1}}],[\"属性接收了所有自定义属性\",{\"1\":{\"387\":1}}],[\"属性设置为\",{\"1\":{\"386\":1}}],[\"属性名颜色是深色\",{\"1\":{\"384\":1}}],[\"属性访问规则\",{\"1\":{\"368\":1}}],[\"属性表示下次匹配开始的位置\",{\"1\":{\"355\":1}}],[\"属性可获取当前节点的类型\",{\"1\":{\"408\":1}}],[\"属性可获取字符串的长度\",{\"1\":{\"303\":1}}],[\"属性可以指定\",{\"1\":{\"105\":1}}],[\"属性选择器\",{\"1\":{\"173\":1}}],[\"属性进行容器绑定\",{\"1\":{\"99\":1}}],[\"属性中\",{\"1\":{\"97\":1}}],[\"属性的\",{\"1\":{\"63\":1,\"300\":1}}],[\"属性\",{\"0\":{\"300\":1},\"1\":{\"18\":1,\"41\":2,\"60\":1,\"104\":1,\"154\":1,\"159\":1,\"365\":1,\"367\":1,\"434\":1}}],[\"页面中最小的操作节点\",{\"1\":{\"408\":1}}],[\"页面刷新再次发送请求\",{\"1\":{\"252\":1}}],[\"页面初始加载时的缩放比例\",{\"1\":{\"186\":1}}],[\"keepalive复用dom\",{\"1\":{\"251\":1}}],[\"keycode\",{\"1\":{\"445\":1}}],[\"key=g4uzfe\",{\"1\":{\"396\":2}}],[\"keys\",{\"1\":{\"376\":1}}],[\"key和value的值是相同的\",{\"1\":{\"376\":1}}],[\"keyfor\",{\"1\":{\"373\":2}}],[\"keyframes\",{\"1\":{\"62\":2}}],[\"key\",{\"0\":{\"243\":1},\"1\":{\"104\":1,\"219\":3,\"243\":6,\"379\":1,\"418\":2}}],[\"爬虫\",{\"1\":{\"249\":1}}],[\"客户端\",{\"1\":{\"249\":1}}],[\"客户端和服务端渲染的区别\",{\"0\":{\"249\":1}}],[\"或数组类型的数据\",{\"1\":{\"429\":1}}],[\"或数组\",{\"1\":{\"418\":1}}],[\"或动态添加的一些变量\",{\"1\":{\"417\":1}}],[\"或使用\",{\"1\":{\"417\":1}}],[\"或进行对象的监听\",{\"1\":{\"384\":1}}],[\"或对象中的每一个元素\",{\"1\":{\"333\":1}}],[\"或里遇到真\",{\"1\":{\"283\":1}}],[\"或改为\",{\"1\":{\"277\":1}}],[\"或\",{\"1\":{\"248\":1,\"283\":1,\"357\":3,\"376\":1,\"418\":1,\"481\":1}}],[\"或者修改现有的属性\",{\"1\":{\"384\":1}}],[\"或者\",{\"1\":{\"64\":1}}],[\"编程式导航\",{\"1\":{\"246\":1}}],[\"编译的\",{\"1\":{\"451\":1}}],[\"编译浏览器识别运行\",{\"1\":{\"449\":1}}],[\"编译代码\",{\"1\":{\"449\":1}}],[\"编译后的文件是否使用严格模式\",{\"1\":{\"151\":1}}],[\"编译配置文件\",{\"0\":{\"146\":1}}],[\"编译选项\",{\"0\":{\"144\":1}}],[\"编译器的选项\",{\"1\":{\"151\":1}}],[\"编译器会自动判断数据类型\",{\"1\":{\"138\":1}}],[\"编译器\",{\"1\":{\"137\":1}}],[\"编译\",{\"1\":{\"91\":1,\"459\":2,\"472\":1}}],[\"虚拟元素中\",{\"1\":{\"442\":1}}],[\"虚拟dom不会立即更新\",{\"1\":{\"244\":1}}],[\"虚拟dom\",{\"0\":{\"244\":1}}],[\"虚线\",{\"1\":{\"15\":1}}],[\"祖孙组件\",{\"1\":{\"242\":1}}],[\"跨域策略\",{\"1\":{\"402\":1}}],[\"跨域\",{\"0\":{\"400\":1}}],[\"跨域资款共享\",{\"1\":{\"204\":1}}],[\"跨层级通信\",{\"1\":{\"440\":1}}],[\"跨层级\",{\"1\":{\"242\":1}}],[\"插件将打包输出的文件自动引入到\",{\"1\":{\"460\":1}}],[\"插件的挂载\",{\"1\":{\"240\":1}}],[\"插槽渲染组件加载时的内容\",{\"1\":{\"444\":1}}],[\"插槽渲染真正的内容\",{\"1\":{\"444\":1}}],[\"插槽\",{\"0\":{\"101\":1},\"1\":{\"422\":1}}],[\"销毁完成\",{\"1\":{\"240\":1}}],[\"销毁之前\",{\"1\":{\"240\":1}}],[\"销毁\",{\"1\":{\"240\":1}}],[\"挂载\",{\"1\":{\"240\":1}}],[\"有损压缩\",{\"1\":{\"477\":1}}],[\"有效\",{\"1\":{\"429\":1}}],[\"有返回对应的值\",{\"1\":{\"373\":1}}],[\"有利于seo优化\",{\"1\":{\"249\":1}}],[\"有缓存机制\",{\"1\":{\"239\":1}}],[\"有什么区别\",{\"0\":{\"169\":1,\"225\":1,\"226\":1}}],[\"切换消耗相对较高\",{\"1\":{\"418\":1}}],[\"切换消耗较高\",{\"1\":{\"237\":1}}],[\"切片\",{\"1\":{\"118\":2}}],[\"互不影响的\",{\"1\":{\"236\":1}}],[\"订阅者模式\",{\"1\":{\"234\":1}}],[\"订阅消息\",{\"1\":{\"98\":1}}],[\"采用数据劫持结合发布者\",{\"1\":{\"234\":1}}],[\"低耦合\",{\"1\":{\"233\":1}}],[\"优缺点\",{\"1\":{\"481\":1}}],[\"优化代码运行性能\",{\"0\":{\"478\":1},\"1\":{\"465\":1}}],[\"优化实例\",{\"0\":{\"38\":1}}],[\"优先\",{\"1\":{\"422\":1}}],[\"优先级高于\",{\"1\":{\"288\":1,\"481\":1}}],[\"优先级不够明显\",{\"1\":{\"238\":1}}],[\"优先转为数值进行比较\",{\"1\":{\"284\":1}}],[\"优势\",{\"1\":{\"233\":1}}],[\"优点\",{\"1\":{\"232\":1,\"297\":1,\"298\":1,\"452\":1,\"467\":2}}],[\"浅合并后加入状态队列中\",{\"1\":{\"230\":1}}],[\"浅拷贝\",{\"0\":{\"350\":1},\"1\":{\"192\":1}}],[\"生产环境默认压缩了\",{\"1\":{\"464\":1}}],[\"生产配置文件\",{\"1\":{\"462\":1}}],[\"生产有输出文件\",{\"1\":{\"462\":1}}],[\"生产模式自动激活压缩js代码\",{\"1\":{\"473\":1}}],[\"生产模式\",{\"1\":{\"448\":1,\"467\":1}}],[\"生命周期\",{\"0\":{\"431\":1}}],[\"生命周期及其他特性\",{\"1\":{\"229\":1}}],[\"生成多个\",{\"1\":{\"479\":1}}],[\"生成一个唯一\",{\"1\":{\"453\":1}}],[\"生成\",{\"0\":{\"72\":1,\"73\":1},\"1\":{\"146\":1,\"399\":1}}],[\"允许使用最新的语法\",{\"1\":{\"459\":1}}],[\"允许跨域\",{\"1\":{\"402\":1}}],[\"允许在函数式组件中使用\",{\"1\":{\"229\":1}}],[\"允许用户缩放的最小比例\",{\"1\":{\"186\":1}}],[\"允许用户缩放的最大比例\",{\"1\":{\"186\":1}}],[\"本体\",{\"1\":{\"300\":1}}],[\"本质是一个函数\",{\"1\":{\"432\":1}}],[\"本质是去异步队列注册一个任务\",{\"1\":{\"339\":1}}],[\"本质是通过\",{\"1\":{\"303\":1}}],[\"本质上无区别\",{\"1\":{\"409\":1}}],[\"本质上的执行是分为两个阶段的\",{\"1\":{\"294\":1}}],[\"本质上是一个纯函数\",{\"1\":{\"229\":1}}],[\"本质不会改变变量原来的值\",{\"1\":{\"286\":1}}],[\"本身是同步代码的立即执行函数\",{\"1\":{\"221\":1}}],[\"缓存组件的渲染结果\",{\"1\":{\"225\":1}}],[\"缓存的是函数的本体\",{\"1\":{\"225\":1}}],[\"缓存的是函数的返回值\",{\"1\":{\"225\":1}}],[\"能准确的定位错误位置\",{\"1\":{\"467\":1}}],[\"能识别的模块\",{\"1\":{\"451\":1}}],[\"能访问\",{\"1\":{\"422\":1}}],[\"能与\",{\"1\":{\"422\":1}}],[\"能取到数据\",{\"1\":{\"398\":1}}],[\"能更准确\",{\"1\":{\"243\":1}}],[\"能搞懂\",{\"1\":{\"223\":1}}],[\"能有效的控制对象成员的访问\",{\"1\":{\"158\":1}}],[\"问\",{\"1\":{\"223\":1}}],[\"掘金\",{\"1\":{\"223\":1}}],[\"异步代码根据时间或触发先后循序执行\",{\"1\":{\"338\":1}}],[\"异步组件\",{\"1\":{\"235\":1}}],[\"异步是指执行\",{\"1\":{\"230\":1}}],[\"异步解决方案的发展历程以及优缺点\",{\"0\":{\"222\":1}}],[\"异步和多线程是通过event\",{\"1\":{\"217\":1}}],[\"语句匹配\",{\"1\":{\"269\":1}}],[\"语句\",{\"0\":{\"269\":1},\"1\":{\"268\":2,\"269\":2}}],[\"语句块\",{\"0\":{\"267\":1}}],[\"语句后所有代码都将变为异步代码\",{\"1\":{\"221\":1}}],[\"语法进行前缀处理\",{\"1\":{\"464\":1}}],[\"语法\",{\"1\":{\"458\":1,\"459\":3}}],[\"语法编译成\",{\"1\":{\"459\":1}}],[\"语法编译\",{\"1\":{\"458\":1}}],[\"语法的工具\",{\"1\":{\"456\":1}}],[\"语法糖\",{\"1\":{\"334\":1,\"355\":1,\"418\":1}}],[\"语法糖形式\",{\"1\":{\"316\":1}}],[\"语法形式\",{\"1\":{\"263\":1}}],[\"语法一样\",{\"1\":{\"153\":1}}],[\"语法与\",{\"1\":{\"153\":1}}],[\"语法规范包类型\",{\"0\":{\"85\":1}}],[\"语法规范本质\",{\"0\":{\"84\":1}}],[\"语法检查版本\",{\"1\":{\"81\":1}}],[\"错误回调时才是异步操作\",{\"1\":{\"221\":1}}],[\"错误的调用递归方法\",{\"1\":{\"205\":1}}],[\"存放数据变量\",{\"1\":{\"417\":1}}],[\"存在的问题\",{\"1\":{\"426\":1}}],[\"存在于函数中\",{\"1\":{\"301\":1}}],[\"存在一定的误差\",{\"1\":{\"263\":1}}],[\"存储的对象是弱引用\",{\"1\":{\"219\":1}}],[\"存取器\",{\"0\":{\"158\":1}}],[\"都是从\",{\"1\":{\"403\":1}}],[\"都是一个\",{\"1\":{\"84\":1}}],[\"都接收一个回调函数\",{\"1\":{\"388\":1}}],[\"都可以作为一个键或一个值\",{\"1\":{\"378\":1}}],[\"都可以存储不重复的值\",{\"1\":{\"219\":1}}],[\"失败\",{\"1\":{\"218\":1}}],[\"成功就删除\",{\"1\":{\"402\":1}}],[\"成功或失败都执行\",{\"1\":{\"388\":1}}],[\"成功\",{\"1\":{\"218\":1}}],[\"成员是唯一且无序的\",{\"1\":{\"219\":1}}],[\"成员\",{\"1\":{\"153\":1}}],[\"微任务的优先级高于宏任务\",{\"1\":{\"217\":1}}],[\"微任务队列组成\",{\"1\":{\"217\":1}}],[\"遇到\",{\"1\":{\"327\":1,\"328\":1}}],[\"遇到promise\",{\"1\":{\"217\":1}}],[\"遇到fatch\",{\"1\":{\"217\":1}}],[\"遇到函数执行会压入调用栈中\",{\"1\":{\"217\":1}}],[\"宏任务\",{\"1\":{\"217\":1}}],[\"事件对象\",{\"1\":{\"418\":1}}],[\"事件委托只注册了一个事件监听\",{\"1\":{\"415\":1}}],[\"事件委托\",{\"0\":{\"415\":1}}],[\"事件的触发分为捕获和冒泡阶段\",{\"1\":{\"414\":1}}],[\"事件的冒泡与捕获\",{\"0\":{\"414\":1}}],[\"事件联动\",{\"0\":{\"413\":1}}],[\"事件绑定与自定义事件触发\",{\"1\":{\"418\":1}}],[\"事件绑定\",{\"0\":{\"412\":1}}],[\"事件\",{\"0\":{\"411\":1},\"1\":{\"418\":1}}],[\"事件监听\",{\"1\":{\"227\":1}}],[\"事件回调\",{\"1\":{\"217\":1}}],[\"事件循环\",{\"0\":{\"217\":1}}],[\"事件流\",{\"0\":{\"200\":1}}],[\"最好打包在一起一次执行\",{\"1\":{\"405\":1}}],[\"最多出现n次\",{\"1\":{\"357\":1}}],[\"最多20个\",{\"1\":{\"216\":1}}],[\"最终将\",{\"1\":{\"459\":1}}],[\"最终渲染的样式\",{\"1\":{\"406\":1}}],[\"最终返回\",{\"1\":{\"394\":1}}],[\"最终返回修改后的参数一\",{\"1\":{\"381\":1}}],[\"最终执行结果会将a\",{\"1\":{\"302\":1}}],[\"最终\",{\"1\":{\"293\":1}}],[\"最终结果一定是6大类型之一\",{\"1\":{\"259\":1}}],[\"最终会以成功或失败的状态结束\",{\"1\":{\"218\":1}}],[\"最近在做一个表格时\",{\"1\":{\"258\":1}}],[\"最后通过路由的\",{\"1\":{\"255\":1}}],[\"最后发送给客户端\",{\"1\":{\"249\":1}}],[\"最后将这个对象一次性的添加到dom树中\",{\"1\":{\"244\":1}}],[\"最大问题是回调地狱\",{\"1\":{\"222\":1}}],[\"最大4k\",{\"1\":{\"216\":1}}],[\"最小值\",{\"1\":{\"185\":1}}],[\"隐式\",{\"1\":{\"214\":1}}],[\"隐式转换通常发生在算术表达式中\",{\"1\":{\"286\":1}}],[\"隐式转换\",{\"0\":{\"214\":1}}],[\"隐士原型\",{\"1\":{\"207\":1}}],[\"再也不能修改了\",{\"1\":{\"385\":1}}],[\"再次操作时从新创建一个新的包装对象\",{\"1\":{\"303\":1}}],[\"再在函数后加\",{\"1\":{\"297\":1}}],[\"再判断两边的值是否相等\",{\"1\":{\"213\":1,\"284\":1}}],[\"再去修改组件中的数据\",{\"1\":{\"97\":1}}],[\"递归思想\",{\"1\":{\"346\":1}}],[\"递归没有出口\",{\"1\":{\"346\":1}}],[\"递归\",{\"0\":{\"346\":1},\"1\":{\"212\":1,\"298\":1}}],[\"递归遍历对象\",{\"1\":{\"192\":1}}],[\"遍历set对象\",{\"1\":{\"376\":1}}],[\"遍历数组\",{\"1\":{\"326\":1}}],[\"遍历对象\",{\"1\":{\"273\":1,\"418\":1}}],[\"遍历的是value\",{\"1\":{\"210\":1,\"273\":1}}],[\"遍历的是key\",{\"1\":{\"210\":1,\"273\":1}}],[\"遍历类数组\",{\"1\":{\"210\":1,\"273\":1}}],[\"域名\",{\"1\":{\"204\":1,\"401\":1}}],[\"出生地\",{\"1\":{\"381\":1}}],[\"出现n次\",{\"1\":{\"357\":1}}],[\"出现0次或出现1次\",{\"1\":{\"357\":2}}],[\"出现空白标签\",{\"1\":{\"180\":1}}],[\"出去的元素就是新数组的元素\",{\"1\":{\"330\":1}}],[\"出于浏览器同源策略限制和安全性考虑\",{\"1\":{\"204\":1}}],[\"怎么解决页面刷新vuex值被重置的问题\",{\"0\":{\"252\":1}}],[\"怎么解决vue打包文件过大的问题\",{\"0\":{\"250\":1}}],[\"怎么解决\",{\"0\":{\"204\":1}}],[\"什么时候是异步的\",{\"0\":{\"230\":1}}],[\"什么时候是同步的\",{\"0\":{\"230\":1}}],[\"什么情况会导致跨域\",{\"0\":{\"204\":1}}],[\"什么是单页面应用\",{\"0\":{\"232\":1}}],[\"什么是跨域\",{\"0\":{\"204\":1}}],[\"什么是闭包\",{\"0\":{\"193\":1}}],[\"什么是防抖和节流\",{\"0\":{\"169\":1}}],[\"取反\",{\"1\":{\"283\":1,\"289\":1}}],[\"取消ajax请求\",{\"0\":{\"203\":1}}],[\"取父\",{\"1\":{\"41\":1}}],[\"因为\",{\"1\":{\"201\":1,\"429\":1}}],[\"因为从obj2上还能访问\",{\"1\":{\"35\":1}}],[\"地址中\",{\"1\":{\"396\":1}}],[\"地址后面的\",{\"1\":{\"201\":1}}],[\"地址信息\",{\"1\":{\"122\":1}}],[\"请求错误\",{\"1\":{\"398\":1}}],[\"请求成功\",{\"1\":{\"398\":1}}],[\"请求\",{\"1\":{\"397\":1}}],[\"请求较为安全\",{\"1\":{\"396\":1}}],[\"请求参数方式请求体中\",{\"1\":{\"396\":1}}],[\"请求参数\",{\"1\":{\"396\":1}}],[\"请求参数拼接在\",{\"1\":{\"396\":1}}],[\"请求参数传递的方式不同\",{\"1\":{\"201\":1}}],[\"请求方式\",{\"0\":{\"396\":1}}],[\"请求服务器\",{\"1\":{\"352\":1}}],[\"请求动画帧\",{\"0\":{\"341\":1}}],[\"请求的地址所返回的内容就是\",{\"1\":{\"402\":1}}],[\"请求的地址还是当前服务器的地址\",{\"1\":{\"133\":1}}],[\"请求的参数是存放在请求体中的\",{\"1\":{\"201\":1}}],[\"请求的参数是拼接在\",{\"1\":{\"201\":1}}],[\"请求是比较安全的\",{\"1\":{\"201\":1}}],[\"请求相对于\",{\"1\":{\"201\":1}}],[\"分发事件\",{\"1\":{\"422\":1}}],[\"分发一个事件去修改父组件的状态\",{\"1\":{\"254\":1}}],[\"分为\",{\"1\":{\"291\":1}}],[\"分为全局\",{\"1\":{\"199\":1}}],[\"分离开发\",{\"1\":{\"233\":1}}],[\"分别对应\",{\"1\":{\"24\":1}}],[\"作出响应\",{\"1\":{\"248\":1}}],[\"作用域和调用栈越来越大\",{\"1\":{\"346\":1}}],[\"作用域和作用域链\",{\"0\":{\"199\":1}}],[\"作用域没有消失\",{\"1\":{\"298\":1}}],[\"作用域最前面\",{\"1\":{\"295\":1}}],[\"作用域不会立即消失\",{\"1\":{\"292\":1}}],[\"作用域在变量声明阶段就已经确定了\",{\"1\":{\"291\":1}}],[\"作用域是可以发生嵌套和向外延伸的\",{\"1\":{\"199\":1}}],[\"作用域链\",{\"1\":{\"199\":1,\"293\":1}}],[\"作用域\",{\"0\":{\"291\":1},\"1\":{\"199\":1}}],[\"作为操作数并返回一个数值\",{\"1\":{\"280\":1}}],[\"作为参数\",{\"1\":{\"118\":1}}],[\"作为\",{\"1\":{\"118\":1,\"243\":1}}],[\"判断是否是一个\",{\"1\":{\"441\":2}}],[\"判断script标签是否加载成功\",{\"1\":{\"402\":1}}],[\"判断set对象中是否有这个元素\",{\"1\":{\"376\":1}}],[\"判断map对象中是否有该属性\",{\"1\":{\"379\":1}}],[\"判断数组中是否至少有一项满足条件\",{\"1\":{\"328\":1}}],[\"判断数组中的每一项是否满足条件\",{\"1\":{\"328\":1}}],[\"判断数据类型\",{\"1\":{\"198\":1,\"264\":1}}],[\"判断字符串是否包含该字符串\",{\"1\":{\"308\":1}}],[\"判断\",{\"1\":{\"285\":1}}],[\"判断运算符\",{\"0\":{\"284\":1}}],[\"判断一个对象是否是一个代理对象\",{\"1\":{\"441\":1}}],[\"判断一个对象是否由\",{\"1\":{\"441\":1}}],[\"判断一个原型是否在另一个原型链中\",{\"1\":{\"367\":1}}],[\"判断一个变量准确的数据类型\",{\"0\":{\"215\":1}}],[\"判断一个点是否在当前路径上\",{\"1\":{\"25\":1}}],[\"判断两个对象是否相等\",{\"0\":{\"212\":1},\"1\":{\"383\":1}}],[\"判断对象上的\",{\"1\":{\"198\":1}}],[\"实际开发中会使用\",{\"1\":{\"469\":1}}],[\"实际上是访问构造函数的\",{\"1\":{\"367\":1}}],[\"实时搜索\",{\"1\":{\"352\":1}}],[\"实参比形参多\",{\"1\":{\"276\":1}}],[\"实参\",{\"1\":{\"276\":1}}],[\"实例\",{\"1\":{\"417\":1}}],[\"实例对象和构造函数的关系\",{\"0\":{\"364\":1}}],[\"实例对象是通过new关键字执行构造函数创建出来的\",{\"1\":{\"198\":1,\"364\":1}}],[\"实例化过程中new做了什么事情\",{\"0\":{\"363\":1}}],[\"实例化时会对\",{\"1\":{\"417\":1}}],[\"实例化时\",{\"1\":{\"207\":1}}],[\"实例创建完成\",{\"1\":{\"240\":1}}],[\"实例创建前\",{\"1\":{\"240\":1}}],[\"实例挂载的\",{\"1\":{\"417\":1}}],[\"实例挂载后\",{\"1\":{\"240\":1}}],[\"实例挂载前\",{\"1\":{\"240\":1}}],[\"实例挂载\",{\"1\":{\"240\":1}}],[\"实例从创建到销毁的一个过程\",{\"1\":{\"240\":1}}],[\"实现了\",{\"1\":{\"469\":1}}],[\"实现了模块化开发\",{\"1\":{\"386\":1}}],[\"实现原理\",{\"1\":{\"426\":1,\"427\":1}}],[\"实现\",{\"1\":{\"424\":1}}],[\"实现双向绑定\",{\"1\":{\"417\":1}}],[\"实现类的继承\",{\"1\":{\"370\":1}}],[\"实现类\",{\"1\":{\"370\":1}}],[\"实现分步解决问题\",{\"1\":{\"274\":1}}],[\"实现对象之间的继承关系\",{\"1\":{\"207\":1}}],[\"实现不同的行为\",{\"1\":{\"197\":1}}],[\"实现左侧固宽右侧自适应\",{\"0\":{\"181\":1}}],[\"实现一个\",{\"0\":{\"171\":1}}],[\"实现函数类型的接口\",{\"1\":{\"162\":1}}],[\"实现多接口\",{\"1\":{\"161\":1}}],[\"实现接口时必须与接口的数据结构一一对应\",{\"1\":{\"159\":1}}],[\"实现路由分包\",{\"1\":{\"126\":1}}],[\"实现文字环绕效果\",{\"1\":{\"57\":1}}],[\"面向对象\",{\"0\":{\"361\":1}}],[\"面向对象的三大特点\",{\"1\":{\"197\":1}}],[\"面向对象的理解\",{\"0\":{\"197\":1}}],[\"面向对象是一种编程思想\",{\"1\":{\"197\":1}}],[\"三个工具\",{\"1\":{\"473\":1}}],[\"三角函数\",{\"0\":{\"337\":1}}],[\"三元\",{\"1\":{\"281\":1}}],[\"三元表达式有返回值\",{\"1\":{\"196\":1}}],[\"三元表达式和if\",{\"0\":{\"196\":1}}],[\"三目运算符方式\",{\"1\":{\"418\":1}}],[\"三目运算符\",{\"0\":{\"281\":1}}],[\"三种状态\",{\"1\":{\"218\":1}}],[\"三次贝塞尔曲线\",{\"1\":{\"10\":1}}],[\"箭头函数的\",{\"1\":{\"301\":1}}],[\"箭头函数的this是绑定到上下文中的且没有prototype原型\",{\"1\":{\"195\":1}}],[\"箭头函数是没有\",{\"1\":{\"300\":1}}],[\"箭头函数\",{\"0\":{\"277\":1},\"1\":{\"277\":1}}],[\"箭头函数和普通函数的区别\",{\"0\":{\"195\":1}}],[\"保证的代码的执行循序\",{\"1\":{\"388\":1}}],[\"保证代码的执行顺序\",{\"1\":{\"326\":1}}],[\"保证了内存空间的充足\",{\"1\":{\"292\":1}}],[\"保证了变量的私有性\",{\"1\":{\"193\":1,\"298\":1}}],[\"保留了某些特定的状态\",{\"1\":{\"298\":1}}],[\"保留另一个函数\",{\"1\":{\"298\":1}}],[\"保留渲染数\",{\"1\":{\"183\":1}}],[\"保存的是内存地址\",{\"1\":{\"208\":1}}],[\"闭包使用过多会导致内存不足造成内存泄露\",{\"1\":{\"298\":1}}],[\"闭包\",{\"0\":{\"298\":1},\"1\":{\"205\":1}}],[\"闭包会把函数中变量保存到内存中\",{\"1\":{\"193\":1}}],[\"闭包就是一个高阶函数\",{\"1\":{\"193\":1}}],[\"闭包的作用及注意点\",{\"0\":{\"193\":1}}],[\"闭合路径\",{\"0\":{\"3\":1},\"1\":{\"3\":1}}],[\"深度监听无效\",{\"1\":{\"429\":1}}],[\"深度监听\",{\"1\":{\"417\":1}}],[\"深度优先\",{\"1\":{\"32\":1,\"166\":1}}],[\"深入函数\",{\"0\":{\"299\":1}}],[\"深拷贝\",{\"0\":{\"349\":1},\"1\":{\"192\":1}}],[\"深浅拷贝\",{\"0\":{\"192\":1}}],[\"缩小最小字体的方法\",{\"0\":{\"188\":1}}],[\"缩放\",{\"1\":{\"19\":1}}],[\"视图模型发生改变也会跟新视图\",{\"1\":{\"418\":1}}],[\"视图发生改变会更新视图模型\",{\"1\":{\"418\":1}}],[\"视图可独立于model的变化和修改\",{\"1\":{\"233\":1}}],[\"视图变化\",{\"1\":{\"233\":1}}],[\"视图更新\",{\"1\":{\"233\":1}}],[\"视图层\",{\"1\":{\"233\":1}}],[\"视口窗口\",{\"0\":{\"186\":1}}],[\"视频\",{\"0\":{\"17\":1}}],[\"排除某些文件\",{\"1\":{\"471\":1}}],[\"排除\",{\"1\":{\"471\":1}}],[\"排除不需要进行转换的目录\",{\"1\":{\"459\":2,\"471\":1,\"472\":1,\"473\":1,\"476\":1}}],[\"排除不需要检查的目录\",{\"1\":{\"456\":1}}],[\"排除不需要编译的\",{\"1\":{\"148\":1}}],[\"排除字符\",{\"1\":{\"357\":1}}],[\"排列方向\",{\"1\":{\"185\":1}}],[\"占比\",{\"1\":{\"185\":1}}],[\"占据空间\",{\"1\":{\"61\":1}}],[\"均等分\",{\"1\":{\"185\":1}}],[\"像素值\",{\"1\":{\"185\":1}}],[\"像素操作\",{\"0\":{\"24\":1}}],[\"列映射\",{\"1\":{\"467\":1}}],[\"列子\",{\"1\":{\"357\":1}}],[\"列之间的间距\",{\"1\":{\"185\":1}}],[\"列数\",{\"1\":{\"185\":1}}],[\"列表渲染\",{\"0\":{\"92\":1}}],[\"容器\",{\"1\":{\"185\":1}}],[\"主动传入会指向传入的那个对象\",{\"1\":{\"302\":3}}],[\"主动刷新\",{\"1\":{\"298\":1}}],[\"主动重复调用一些函数\",{\"1\":{\"106\":1}}],[\"主要集中在客户端这边\",{\"1\":{\"398\":1}}],[\"主要用来获取数据\",{\"1\":{\"396\":1}}],[\"主要用来处理一些异步操作\",{\"1\":{\"248\":1}}],[\"主要功能包括渠道管理\",{\"1\":{\"257\":1}}],[\"主要解决浏览器性能的问题\",{\"1\":{\"244\":1}}],[\"主轴\",{\"1\":{\"185\":1}}],[\"主轴对齐方式\",{\"1\":{\"184\":1}}],[\"缺点\",{\"1\":{\"180\":1,\"232\":1,\"298\":1,\"452\":1,\"467\":2}}],[\"怪异盒模型\",{\"1\":{\"177\":1}}],[\"边框的值增加而增大\",{\"1\":{\"177\":1}}],[\"边框绘制\",{\"1\":{\"5\":1}}],[\"普通对象\",{\"1\":{\"287\":1}}],[\"普通函数\",{\"1\":{\"277\":1}}],[\"普通盒模型\",{\"1\":{\"177\":1}}],[\"普通层级为1\",{\"1\":{\"57\":1}}],[\"盒模型\",{\"0\":{\"177\":1}}],[\"触发自定义事件时必须在\",{\"1\":{\"445\":1}}],[\"触发响应\",{\"1\":{\"439\":1}}],[\"触发在冒泡阶段\",{\"1\":{\"414\":1}}],[\"触发事件时会传递一个事件对象\",{\"1\":{\"411\":1}}],[\"触发了\",{\"1\":{\"392\":1,\"393\":1}}],[\"触发失败的工具函数\",{\"1\":{\"389\":1}}],[\"触发成功后会将所有\",{\"1\":{\"392\":1}}],[\"触发成功后执行\",{\"1\":{\"388\":1}}],[\"触发成功的工具函数\",{\"1\":{\"389\":1}}],[\"触发bfc的条件\",{\"0\":{\"175\":1}}],[\"触发高频操作后\",{\"1\":{\"169\":1}}],[\"独立的容器\",{\"1\":{\"174\":1}}],[\"技巧\",{\"1\":{\"170\":1}}],[\"稀释函数执行的频率\",{\"1\":{\"169\":1}}],[\"秒内只执行一次\",{\"1\":{\"169\":1}}],[\"节流和防抖\",{\"0\":{\"351\":1}}],[\"节流\",{\"0\":{\"353\":1},\"1\":{\"169\":1,\"352\":1}}],[\"节点的操作\",{\"0\":{\"409\":1}}],[\"节点下的\",{\"1\":{\"387\":1}}],[\"节点进行访问\",{\"1\":{\"387\":1}}],[\"节点渲染到指定位置\",{\"1\":{\"102\":1}}],[\"节点或作为参数进行传递\",{\"1\":{\"99\":1}}],[\"节点\",{\"0\":{\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"408\":1},\"1\":{\"243\":1,\"415\":1}}],[\"按需加载\",{\"1\":{\"480\":1,\"483\":1}}],[\"按需并行加载最大文件数\",{\"1\":{\"480\":1}}],[\"按下标解构\",{\"1\":{\"333\":1}}],[\"按照10为基数处理\",{\"1\":{\"168\":1}}],[\"按相同的间距进行平铺\",{\"1\":{\"47\":1}}],[\"且不能改\",{\"1\":{\"301\":1}}],[\"且访问是当前函数的\",{\"1\":{\"300\":1}}],[\"且前面的没有执行完后面的就不能执行\",{\"1\":{\"259\":1}}],[\"且是有序的\",{\"1\":{\"219\":1}}],[\"且以第一次触发的为准\",{\"1\":{\"218\":1}}],[\"且\",{\"1\":{\"168\":1,\"298\":1}}],[\"进阶\",{\"0\":{\"342\":1}}],[\"进入路由之后\",{\"1\":{\"247\":1}}],[\"进入路由之前\",{\"1\":{\"247\":1}}],[\"进制转换是个入栈的过程\",{\"1\":{\"263\":1}}],[\"进制\",{\"1\":{\"168\":1}}],[\"进行匹配\",{\"1\":{\"470\":1}}],[\"进行优化\",{\"1\":{\"465\":1}}],[\"进行了封装\",{\"1\":{\"432\":1}}],[\"进行合并\",{\"1\":{\"422\":1}}],[\"进行数据插入\",{\"1\":{\"417\":1}}],[\"进行事件清除\",{\"1\":{\"412\":1}}],[\"进行事件监听的移除\",{\"1\":{\"412\":1}}],[\"进行转义\",{\"1\":{\"355\":1}}],[\"进行转换\",{\"1\":{\"288\":1}}],[\"进行定时器的清除\",{\"1\":{\"339\":1,\"340\":1}}],[\"进行返回\",{\"1\":{\"276\":1}}],[\"进行求值\",{\"1\":{\"269\":1}}],[\"进行比较\",{\"1\":{\"243\":1}}],[\"进行中\",{\"1\":{\"218\":1}}],[\"进行编译\",{\"1\":{\"151\":1}}],[\"进行可选配置\",{\"1\":{\"142\":1}}],[\"进行路由跳转时\",{\"1\":{\"121\":1}}],[\"进行路由链接创建\",{\"1\":{\"120\":1}}],[\"进行操作\",{\"1\":{\"100\":1}}],[\"进行传递\",{\"1\":{\"96\":1}}],[\"进行全局安装或本地安装\",{\"1\":{\"69\":1}}],[\"依然使用defineproperty实现响应式\",{\"1\":{\"423\":1}}],[\"依然返回obj\",{\"1\":{\"171\":1}}],[\"依次向父级元素传递\",{\"1\":{\"414\":1}}],[\"依次访问顶点未被访问的邻节点\",{\"1\":{\"166\":1}}],[\"依靠\",{\"1\":{\"243\":1}}],[\"依赖项发生改变\",{\"1\":{\"227\":1}}],[\"依赖项为空数组或不存在\",{\"1\":{\"227\":1}}],[\"依赖原状态\",{\"1\":{\"97\":1}}],[\"依赖下载\",{\"1\":{\"93\":1}}],[\"广度优先\",{\"1\":{\"166\":1}}],[\"泛型通过继承接口可对属性进行约束\",{\"1\":{\"164\":1}}],[\"泛型类\",{\"1\":{\"164\":1}}],[\"泛型接口\",{\"1\":{\"164\":1}}],[\"泛型\",{\"0\":{\"164\":1}}],[\"你需要支付$\",{\"1\":{\"161\":1}}],[\"约束条件\",{\"1\":{\"360\":2}}],[\"约束\",{\"1\":{\"159\":1}}],[\"约定优于配置\",{\"1\":{\"93\":1}}],[\"规则\",{\"0\":{\"357\":1},\"1\":{\"159\":1,\"360\":4}}],[\"规范\",{\"1\":{\"159\":1}}],[\"规范中\",{\"1\":{\"78\":1}}],[\"规范之后的代码在哪里运行\",{\"1\":{\"72\":1}}],[\"抽象问题\",{\"1\":{\"346\":1}}],[\"抽象方法只能存在于抽象类且不能写具体实现\",{\"1\":{\"157\":1}}],[\"抽象类不能实例化\",{\"1\":{\"157\":1}}],[\"抽象类\",{\"0\":{\"157\":1}}],[\"🐷\",{\"1\":{\"156\":1}}],[\"超过多少kb单独打包\",{\"1\":{\"480\":1}}],[\"超出元素进行隐藏overflow\",{\"1\":{\"184\":1}}],[\"超出斜接面限制剪裁\",{\"1\":{\"15\":1}}],[\"超类\",{\"1\":{\"155\":1}}],[\"被继承的又称父类\",{\"1\":{\"155\":1}}],[\"被编译为\",{\"1\":{\"151\":1}}],[\"派生类\",{\"1\":{\"155\":1}}],[\"受限于函数作用域\",{\"1\":{\"293\":2}}],[\"受保护的\",{\"1\":{\"154\":1}}],[\"受控\",{\"1\":{\"100\":1}}],[\"受控和非受控组件\",{\"0\":{\"100\":1}}],[\"私有的\",{\"1\":{\"154\":1}}],[\"任何值\",{\"1\":{\"378\":1}}],[\"任何值都可以作为\",{\"1\":{\"219\":1}}],[\"任何函数都是由\",{\"1\":{\"368\":1}}],[\"任何普通函数都是由\",{\"1\":{\"368\":1}}],[\"任何对象身上都有一个\",{\"1\":{\"287\":1}}],[\"任何位置都可以访问\",{\"1\":{\"154\":1}}],[\"任占据原来的空间\",{\"1\":{\"179\":1}}],[\"任意字符\",{\"1\":{\"357\":1}}],[\"任意字符串\",{\"1\":{\"139\":1}}],[\"任意\",{\"1\":{\"139\":2}}],[\"任意类型\",{\"1\":{\"139\":1}}],[\"任意数字\",{\"1\":{\"139\":1}}],[\"公共的\",{\"1\":{\"154\":1}}],[\"修饰后不能在外部随意修改\",{\"1\":{\"154\":1}}],[\"修饰符\",{\"0\":{\"154\":1},\"1\":{\"154\":1,\"418\":1,\"445\":1}}],[\"修改时两者互不影响\",{\"1\":{\"434\":1}}],[\"修改dom内容\",{\"0\":{\"405\":1}}],[\"修改密码\",{\"1\":{\"384\":1}}],[\"修改\",{\"1\":{\"330\":1,\"427\":1}}],[\"修改回来无法再访问之前的元素\",{\"1\":{\"318\":1}}],[\"修改state中的数据唯一方法是提交\",{\"1\":{\"248\":1}}],[\"修改服务器配置\",{\"1\":{\"121\":1}}],[\"修改过后并不会立刻渲染\",{\"1\":{\"97\":1}}],[\"修改的是组件下次渲染的\",{\"1\":{\"97\":1}}],[\"修改配置文件\",{\"1\":{\"73\":1}}],[\"我们需要对代码进行分割\",{\"1\":{\"479\":1}}],[\"我们就拿标准的规范包eslint\",{\"1\":{\"87\":1}}],[\"我变化啦\",{\"1\":{\"429\":1}}],[\"我添加的事件监听\",{\"1\":{\"413\":1}}],[\"我还可以说话\",{\"1\":{\"370\":1}}],[\"我可以呼吸\",{\"1\":{\"370\":1}}],[\"我可以发出声音\",{\"1\":{\"153\":1}}],[\"我是继承构造函数\",{\"1\":{\"370\":1}}],[\"我是父级构造函数\",{\"1\":{\"370\":1}}],[\"我是构造函数\",{\"1\":{\"370\":1}}],[\"我属相最好\",{\"1\":{\"156\":1}}],[\"我属性最好`\",{\"1\":{\"155\":1}}],[\"构造函数创建一个请求对象\",{\"1\":{\"395\":1}}],[\"构造函数创建出来的\",{\"1\":{\"362\":1,\"368\":2}}],[\"构造函数生成的一个对象\",{\"1\":{\"369\":1}}],[\"构造函数首字母大写\",{\"1\":{\"362\":1}}],[\"构造函数和实例对象的区别\",{\"0\":{\"198\":1}}],[\"构造函数\",{\"0\":{\"362\":1},\"1\":{\"153\":1,\"154\":1,\"370\":1,\"388\":1}}],[\"封装set方法\",{\"0\":{\"377\":1}}],[\"封装\",{\"1\":{\"153\":1,\"197\":1,\"399\":1}}],[\"封装和交互\",{\"0\":{\"25\":1}}],[\"宿主环境\",{\"1\":{\"151\":1}}],[\"小写字母\",{\"1\":{\"284\":1}}],[\"小于原有长度会移除多出的元素\",{\"1\":{\"318\":1}}],[\"小于等于\",{\"1\":{\"284\":1}}],[\"小于\",{\"1\":{\"284\":1}}],[\"小的值\",{\"1\":{\"263\":1}}],[\"小驼峰命名\",{\"1\":{\"261\":1}}],[\"小提示\",{\"1\":{\"151\":1}}],[\"小面的元素设置了\",{\"1\":{\"42\":1}}],[\"自然常数\",{\"1\":{\"336\":1}}],[\"自身没有其次再是原型\",{\"1\":{\"287\":1}}],[\"自动按需引入\",{\"1\":{\"483\":1}}],[\"自动对每个文件进行\",{\"1\":{\"476\":1}}],[\"自动监视\",{\"1\":{\"461\":1}}],[\"自动清空上次打包的内容\",{\"1\":{\"453\":1}}],[\"自动提升到上一层作用域\",{\"1\":{\"293\":1}}],[\"自动转换\",{\"1\":{\"286\":1}}],[\"自动编译\",{\"0\":{\"145\":1}}],[\"自减\",{\"1\":{\"280\":1}}],[\"自增\",{\"1\":{\"280\":1}}],[\"自定义文件输出目录\",{\"0\":{\"453\":1}}],[\"自定义渲染内容\",{\"1\":{\"422\":1}}],[\"自定义属性\",{\"0\":{\"387\":1}}],[\"自定义\",{\"0\":{\"116\":1},\"1\":{\"439\":1}}],[\"告诉解析器我是一个确切的类型\",{\"1\":{\"141\":1}}],[\"|avi|mp3\",{\"1\":{\"454\":1}}],[\"||\",{\"1\":{\"212\":1,\"283\":1,\"347\":1,\"399\":1}}],[\"|\",{\"1\":{\"140\":3,\"143\":2,\"155\":1}}],[\"联合类型\",{\"0\":{\"140\":1}}],[\"提取css文件\",{\"0\":{\"463\":1}}],[\"提升打包构建速度\",{\"0\":{\"468\":1},\"1\":{\"465\":1}}],[\"提升开发体验\",{\"0\":{\"466\":1},\"1\":{\"465\":1}}],[\"提升用户体验\",{\"1\":{\"444\":1}}],[\"提升到上一层作用域\",{\"1\":{\"295\":1}}],[\"提升到全局作用域\",{\"1\":{\"293\":1}}],[\"提交分发时带上命名空间名称\",{\"1\":{\"248\":1}}],[\"提示\",{\"1\":{\"139\":1,\"142\":1,\"146\":1,\"154\":1,\"155\":1,\"263\":3,\"278\":1,\"405\":1,\"419\":1}}],[\"提供了一个环境\",{\"1\":{\"174\":1}}],[\"提供了许多功能\",{\"1\":{\"118\":1}}],[\"提供可预测的状态管理仓库\",{\"1\":{\"117\":1}}],[\"提供react开发环境集成了webpack\",{\"1\":{\"93\":1}}],[\"枚举\",{\"1\":{\"139\":1,\"384\":1}}],[\"新加坡\",{\"1\":{\"438\":1}}],[\"新元素\",{\"1\":{\"325\":1}}],[\"新增率进行监控\",{\"1\":{\"257\":1}}],[\"新增数据结构\",{\"1\":{\"219\":1}}],[\"新增类型\",{\"1\":{\"139\":1}}],[\"新颖的选择器\",{\"0\":{\"63\":1}}],[\"元`\",{\"1\":{\"161\":1}}],[\"元组\",{\"1\":{\"139\":1}}],[\"元素到父元素左上角的距离\",{\"1\":{\"410\":1}}],[\"元素左内边距到左边框的值\",{\"1\":{\"410\":1}}],[\"元素的宽高\",{\"1\":{\"410\":1}}],[\"元素尺寸信息\",{\"0\":{\"410\":1}}],[\"元素中的属性\",{\"1\":{\"408\":1}}],[\"元素节点\",{\"1\":{\"408\":1}}],[\"元素更新\",{\"1\":{\"404\":2}}],[\"元素\",{\"1\":{\"63\":1,\"90\":1,\"91\":1,\"96\":1,\"99\":1,\"113\":1,\"318\":1}}],[\"元素会被卡住\",{\"1\":{\"59\":1}}],[\"元素高度不一时\",{\"1\":{\"59\":1}}],[\"无损压缩\",{\"1\":{\"477\":1}}],[\"无需重新加载整个页面\",{\"1\":{\"469\":1}}],[\"无需考虑兼容性问题\",{\"1\":{\"91\":1}}],[\"无限递归\",{\"1\":{\"346\":1}}],[\"无返回值\",{\"1\":{\"139\":1}}],[\"安全的\",{\"1\":{\"139\":1}}],[\"安装\",{\"0\":{\"135\":1},\"1\":{\"118\":1,\"119\":1,\"460\":1,\"461\":1,\"463\":1,\"464\":1,\"476\":1,\"477\":1}}],[\"安装方式\",{\"1\":{\"69\":1}}],[\"字母\",{\"1\":{\"357\":2}}],[\"字段匹配过滤路由表\",{\"1\":{\"255\":1}}],[\"字段用于权限匹配\",{\"1\":{\"255\":1}}],[\"字段的值\",{\"1\":{\"204\":1}}],[\"字符串也可以解构\",{\"1\":{\"333\":1}}],[\"字符串的访问是从下标0开始的\",{\"1\":{\"303\":1}}],[\"字符串声明见数据类型\",{\"1\":{\"303\":1}}],[\"字符串转数值\",{\"1\":{\"288\":1}}],[\"字符串进行比较时通过\",{\"1\":{\"284\":1}}],[\"字符串\",{\"0\":{\"303\":1},\"1\":{\"210\":2,\"263\":1,\"273\":2}}],[\"字号大小\",{\"1\":{\"188\":1}}],[\"字面量或者变量\",{\"1\":{\"280\":1}}],[\"字面量\",{\"1\":{\"139\":1}}],[\"字体文件路径\",{\"1\":{\"44\":1}}],[\"字体引入\",{\"0\":{\"44\":1}}],[\"字体\",{\"1\":{\"18\":1}}],[\"描述一个规则\",{\"1\":{\"354\":1}}],[\"描述一个变量的可访问性\",{\"1\":{\"199\":1}}],[\"描述\",{\"1\":{\"139\":1,\"154\":1,\"159\":1,\"240\":1,\"357\":1}}],[\"描边样式\",{\"1\":{\"13\":1}}],[\"推断出为string类型\",{\"1\":{\"138\":1}}],[\"推断出为number类型\",{\"1\":{\"138\":1}}],[\"推荐\",{\"1\":{\"407\":1}}],[\"推荐使用\",{\"1\":{\"311\":1}}],[\"推荐使用commonjs\",{\"1\":{\"77\":1}}],[\"推荐规则\",{\"1\":{\"88\":1}}],[\"静态方法\",{\"0\":{\"371\":1}}],[\"静态成员\",{\"1\":{\"154\":1}}],[\"静态分析\",{\"1\":{\"137\":1}}],[\"静态文件\",{\"1\":{\"93\":1}}],[\"服务端\",{\"1\":{\"249\":1}}],[\"服务端拿到的主机地址是自己的\",{\"1\":{\"133\":1}}],[\"服务器错误\",{\"1\":{\"398\":1}}],[\"服务器端需要设置响应头信息来允许跨域请求\",{\"1\":{\"204\":1}}],[\"服务器代理\",{\"0\":{\"133\":1}}],[\"服务器渲染\",{\"1\":{\"93\":1}}],[\"与或非\",{\"1\":{\"285\":1}}],[\"与里遇到假\",{\"1\":{\"283\":1}}],[\"与运算符一起使用的函数为函数表达式\",{\"1\":{\"275\":1}}],[\"与上两个的区别是该语句会终止代码执行\",{\"1\":{\"265\":1}}],[\"与\",{\"1\":{\"219\":1,\"253\":1,\"283\":1,\"307\":1,\"356\":1,\"418\":1,\"430\":1}}],[\"与redirect类似\",{\"1\":{\"131\":1}}],[\"与可以通过下面的方式处理\",{\"1\":{\"1\":1}}],[\"替换成\",{\"1\":{\"463\":1}}],[\"替换的目标字符串\",{\"1\":{\"310\":1}}],[\"替换满足条件的第一个元素\",{\"1\":{\"310\":1}}],[\"替换当前路由\",{\"1\":{\"122\":1}}],[\"替代了usehistory\",{\"1\":{\"129\":1}}],[\"重新解析模板\",{\"1\":{\"439\":1}}],[\"重新创建\",{\"1\":{\"243\":1}}],[\"重名\",{\"1\":{\"422\":1}}],[\"重定向\",{\"1\":{\"398\":1}}],[\"重定向路由地址\",{\"1\":{\"125\":1}}],[\"重写函数中的tostring\",{\"1\":{\"287\":1}}],[\"重写抽象方法\",{\"1\":{\"157\":1}}],[\"重写父类的方法\",{\"1\":{\"155\":1}}],[\"重写路径\",{\"1\":{\"133\":1}}],[\"重复径向渐变\",{\"1\":{\"56\":1}}],[\"重复线性渐变\",{\"1\":{\"55\":1}}],[\"回退返回上一个之前的路由\",{\"1\":{\"122\":1}}],[\"回退返回上一个路由\",{\"1\":{\"122\":1}}],[\"回调地狱\",{\"0\":{\"343\":1}}],[\"回调返回一个函数\",{\"1\":{\"227\":1}}],[\"回调返回的就是父组件中定义的ref\",{\"1\":{\"113\":1}}],[\"回调返回的值就是\",{\"1\":{\"109\":1}}],[\"回调函数可对状态进程进行监听\",{\"1\":{\"397\":1}}],[\"回调函数参数\",{\"0\":{\"389\":1}}],[\"回调函数中嵌套回调函数\",{\"1\":{\"343\":1}}],[\"回调函数中可以指定一个函数作为返回值\",{\"1\":{\"107\":1}}],[\"回调函数的this指向\",{\"1\":{\"326\":1}}],[\"回调函数的\",{\"1\":{\"301\":1}}],[\"回调函数\",{\"1\":{\"222\":1,\"326\":1,\"331\":1,\"332\":1,\"339\":1,\"340\":1}}],[\"回调形式\",{\"1\":{\"119\":1}}],[\"匹配css文件\",{\"1\":{\"451\":1}}],[\"匹配任意非数字\",{\"1\":{\"357\":1}}],[\"匹配任意非空格\",{\"1\":{\"357\":1}}],[\"匹配任意数字\",{\"1\":{\"357\":1}}],[\"匹配任意空格\",{\"1\":{\"357\":1}}],[\"匹配单个任意非数字\",{\"1\":{\"357\":1}}],[\"匹配单个任意数字\",{\"1\":{\"357\":1}}],[\"匹配\",{\"1\":{\"357\":1}}],[\"匹配字符串\",{\"1\":{\"356\":1}}],[\"匹配字符串是否满足条件\",{\"1\":{\"356\":1}}],[\"匹配方法\",{\"0\":{\"356\":1}}],[\"匹配模式写在最后\",{\"1\":{\"355\":1}}],[\"匹配模式\",{\"1\":{\"355\":1}}],[\"匹配成功执行对应语句\",{\"1\":{\"269\":1}}],[\"匹配到该路由了才会去加载该组件\",{\"1\":{\"126\":1}}],[\"匹配的地址\",{\"1\":{\"122\":1}}],[\"匹配信息\",{\"1\":{\"122\":1}}],[\"匹配所有图片\",{\"1\":{\"452\":1}}],[\"匹配所有\",{\"1\":{\"63\":2}}],[\"匹配所有带\",{\"1\":{\"63\":2}}],[\"未在props中定义的数据\",{\"1\":{\"422\":1}}],[\"未完成\",{\"1\":{\"398\":1}}],[\"未匹配到返回\",{\"1\":{\"356\":1}}],[\"未匹配到执行\",{\"1\":{\"269\":1}}],[\"未传初始值默认数组的第一项\",{\"1\":{\"331\":1}}],[\"未传入参数截取全部字符\",{\"1\":{\"311\":1}}],[\"未查询到返回\",{\"1\":{\"309\":1}}],[\"未对其传参会使用参数的默认值\",{\"1\":{\"278\":1}}],[\"未定义\",{\"1\":{\"263\":1}}],[\"未定位的校验\",{\"1\":{\"258\":1}}],[\"未发生改变时\",{\"1\":{\"225\":1}}],[\"未知类型\",{\"1\":{\"139\":1}}],[\"未经过\",{\"1\":{\"121\":1}}],[\"未脱离文档流\",{\"1\":{\"58\":1}}],[\"还能被访问\",{\"1\":{\"298\":1}}],[\"还可以使用activestyle直接指定内联样式\",{\"1\":{\"120\":1}}],[\"还是\",{\"1\":{\"118\":1}}],[\"多入口打包\",{\"1\":{\"480\":1}}],[\"多进程打包\",{\"1\":{\"473\":1}}],[\"多余的部分会被舍去\",{\"1\":{\"276\":1}}],[\"多态\",{\"0\":{\"156\":1},\"1\":{\"153\":1,\"197\":1}}],[\"多了激活后的样式的指定\",{\"1\":{\"120\":1}}],[\"多个文件引入了相同代码\",{\"1\":{\"480\":1}}],[\"多个\",{\"1\":{\"86\":1}}],[\"多个规则\",{\"1\":{\"68\":1,\"86\":1}}],[\"组合\",{\"1\":{\"420\":1}}],[\"组建形式\",{\"1\":{\"119\":1}}],[\"组件销毁钩子由\",{\"1\":{\"431\":1}}],[\"组件内守卫\",{\"1\":{\"247\":1}}],[\"组件间的通信方式\",{\"0\":{\"242\":1}}],[\"组件卸载之前\",{\"1\":{\"227\":1}}],[\"组件更新完成\",{\"1\":{\"227\":1}}],[\"组件挂载完成\",{\"1\":{\"227\":1}}],[\"组件不会重新渲染\",{\"1\":{\"225\":1}}],[\"组件每次渲染时回调都会重新创建\",{\"1\":{\"112\":1}}],[\"组件函数体\",{\"1\":{\"106\":1}}],[\"组件以函数的形式创建元素\",{\"1\":{\"105\":1}}],[\"组件的首字母必须大写\",{\"1\":{\"95\":1}}],[\"组件\",{\"0\":{\"94\":1},\"1\":{\"118\":1}}],[\"路径无论是否匹配都会挂载\",{\"1\":{\"119\":1}}],[\"路由离开\",{\"1\":{\"247\":1}}],[\"路由离开时弹出确认操作\",{\"1\":{\"124\":1}}],[\"路由更新\",{\"1\":{\"247\":1}}],[\"路由进入前\",{\"1\":{\"247\":1}}],[\"路由独享守卫\",{\"1\":{\"247\":1}}],[\"路由钩子分为\",{\"1\":{\"247\":1}}],[\"路由钩子\",{\"0\":{\"247\":1}}],[\"路由跳转方式\",{\"0\":{\"246\":1}}],[\"路由嵌套\",{\"0\":{\"130\":1}}],[\"路由组件不再是通过\",{\"1\":{\"128\":1}}],[\"路由组件参数\",{\"0\":{\"122\":1}}],[\"路由懒加载\",{\"0\":{\"126\":1},\"1\":{\"251\":1}}],[\"路由重定向\",{\"0\":{\"125\":1}}],[\"路由参数信息可以通过第二个参数进行配置\",{\"1\":{\"129\":1}}],[\"路由参数钩子的变化\",{\"0\":{\"129\":1}}],[\"路由参数钩子\",{\"0\":{\"123\":1}}],[\"路由参数\",{\"1\":{\"122\":1}}],[\"路由参数作为回调的参数\",{\"1\":{\"119\":1}}],[\"路由模式\",{\"0\":{\"121\":1,\"245\":1}}],[\"路由地址\",{\"1\":{\"119\":1}}],[\"路由包\",{\"1\":{\"119\":1}}],[\"需使用绝对路径\",{\"1\":{\"471\":1}}],[\"需在入口文件中做如下处理\",{\"1\":{\"469\":1}}],[\"需进行兼容处理\",{\"1\":{\"455\":1}}],[\"需给父元素设置相对定位\",{\"1\":{\"182\":1}}],[\"需手动传入路由参数\",{\"1\":{\"119\":1}}],[\"需要开启深度监听或\",{\"1\":{\"429\":1}}],[\"需要对请求头数据的格式进行设置\",{\"1\":{\"396\":1}}],[\"需要绑定的this的主体对象\",{\"1\":{\"302\":3}}],[\"需要浏览器和服务器同时支持\",{\"1\":{\"204\":1}}],[\"需要将其转为\",{\"1\":{\"135\":1}}],[\"需要接收一个\",{\"1\":{\"105\":1}}],[\"需要使用react\",{\"1\":{\"113\":1}}],[\"需要使用原生\",{\"1\":{\"100\":1}}],[\"需要使用一个新的对象去替换\",{\"1\":{\"97\":1}}],[\"需要通过\",{\"1\":{\"91\":1}}],[\"上海\",{\"1\":{\"381\":1}}],[\"上\",{\"1\":{\"119\":1,\"445\":2}}],[\"上面的元素设置了\",{\"1\":{\"42\":1}}],[\"调用父元素的删除方法\",{\"1\":{\"407\":1}}],[\"调用父类构造器\",{\"1\":{\"155\":1}}],[\"调用父类中的方法和属性super\",{\"1\":{\"155\":1}}],[\"调用父类中的构造器\",{\"1\":{\"155\":1}}],[\"调用方法执行时返回当前调用方法的主体对象\",{\"1\":{\"345\":1}}],[\"调用\",{\"1\":{\"302\":1,\"371\":1}}],[\"调用函数时\",{\"1\":{\"278\":1}}],[\"调用各自的方法\",{\"1\":{\"156\":1}}],[\"调用会自动创建\",{\"1\":{\"118\":1}}],[\"调用时并不是通过实例调用而是直接调用\",{\"1\":{\"96\":1}}],[\"动态导入\",{\"1\":{\"480\":1}}],[\"动态的添加和删除属性不会触发视图的更新\",{\"1\":{\"426\":1}}],[\"动态的添加或移除dom元素\",{\"1\":{\"237\":1}}],[\"动态类型\",{\"1\":{\"259\":1}}],[\"动态更新vuex\",{\"1\":{\"252\":1}}],[\"动作对象\",{\"1\":{\"118\":1}}],[\"动画\",{\"0\":{\"62\":1}}],[\"更高级的语法无法处理\",{\"1\":{\"483\":1}}],[\"更不会跳出函数作用域\",{\"1\":{\"295\":1}}],[\"更友好的拼接变量\",{\"1\":{\"263\":1}}],[\"更快的拿到\",{\"1\":{\"243\":1}}],[\"更新表达式\",{\"1\":{\"271\":1}}],[\"更新\",{\"1\":{\"240\":1,\"243\":1}}],[\"更多\",{\"0\":{\"223\":1}}],[\"更加容易\",{\"1\":{\"118\":1}}],[\"更利于维护\",{\"1\":{\"113\":1}}],[\"应用的状态容器\",{\"1\":{\"117\":1}}],[\"控制元素的显示和隐藏\",{\"1\":{\"418\":1}}],[\"控制\",{\"1\":{\"384\":1}}],[\"控制viewport的宽度大小\",{\"1\":{\"186\":1}}],[\"控制整个内容区域在容器里的对齐方式\",{\"1\":{\"185\":1}}],[\"控制路由跳转\",{\"1\":{\"122\":1}}],[\"控制权在自己\",{\"1\":{\"113\":1}}],[\"控制的组件\",{\"1\":{\"100\":1}}],[\"向后代组价\",{\"1\":{\"440\":1}}],[\"向节点末尾追加元素\",{\"1\":{\"407\":1}}],[\"向set对象中添加元素\",{\"1\":{\"376\":1}}],[\"向原型中添加属性\",{\"1\":{\"365\":1}}],[\"向上取整\",{\"1\":{\"336\":1}}],[\"向下取整\",{\"1\":{\"336\":1}}],[\"向数组开头添加\",{\"1\":{\"323\":1}}],[\"向数组添加元素\",{\"1\":{\"323\":1}}],[\"向末尾添加\",{\"1\":{\"323\":1}}],[\"向外部暴露操作子组件的方法\",{\"1\":{\"113\":1}}],[\"向子孙组件传递数据\",{\"1\":{\"105\":1}}],[\"和配置挂载到了实例\",{\"1\":{\"445\":1}}],[\"和更新数组一系列的方法实现元素修改的劫持\",{\"1\":{\"426\":1}}],[\"和显示转换\",{\"1\":{\"286\":1}}],[\"和全等于\",{\"1\":{\"284\":1}}],[\"和函数\",{\"1\":{\"275\":1}}],[\"和行为\",{\"1\":{\"159\":1}}],[\"和usedeferredvalue类似\",{\"1\":{\"115\":1}}],[\"和一个回调\",{\"1\":{\"113\":1}}],[\"和\",{\"0\":{\"183\":1,\"211\":1,\"213\":1,\"219\":1,\"225\":1,\"226\":1},\"1\":{\"111\":1,\"113\":1,\"121\":1,\"139\":1,\"158\":1,\"168\":1,\"171\":1,\"219\":2,\"221\":1,\"261\":1,\"271\":1,\"280\":1,\"302\":2,\"347\":1,\"409\":2,\"417\":3,\"439\":1,\"456\":1,\"464\":1,\"475\":1}}],[\"和原生\",{\"1\":{\"91\":1}}],[\"发生改变\",{\"1\":{\"243\":1}}],[\"发生改变时才会触发组件的重新渲染\",{\"1\":{\"110\":1}}],[\"发送的请求\",{\"1\":{\"397\":1}}],[\"发送的数据可以是\",{\"1\":{\"396\":1}}],[\"发送ajax请求\",{\"1\":{\"240\":2}}],[\"发送请求\",{\"1\":{\"203\":1,\"399\":1}}],[\"发起一个请求并将回调函数作为查询参数传递过去\",{\"1\":{\"204\":1}}],[\"发布消息\",{\"1\":{\"98\":1}}],[\"发布机制\",{\"1\":{\"98\":1}}],[\"初始渲染消耗较高\",{\"1\":{\"237\":1}}],[\"初始值\",{\"1\":{\"109\":1}}],[\"初始化包文件\",{\"1\":{\"447\":1}}],[\"初始化时会执行一次\",{\"1\":{\"430\":1}}],[\"初始化时是否执行监听\",{\"1\":{\"429\":1}}],[\"初始化表达式的值\",{\"1\":{\"271\":1}}],[\"初始化\",{\"1\":{\"72\":1,\"118\":1}}],[\"操作源对象时不会触发视图的更新\",{\"1\":{\"424\":1}}],[\"操作对象\",{\"1\":{\"330\":1}}],[\"操作开始的位置\",{\"1\":{\"325\":1}}],[\"操作原数组\",{\"1\":{\"323\":1,\"324\":1}}],[\"操作完自动消失\",{\"1\":{\"303\":1}}],[\"操作的是该包装对象下的方法\",{\"1\":{\"303\":1}}],[\"操作时返回\",{\"1\":{\"288\":1}}],[\"操作数类型不一样自动转换成能够计算的类型\",{\"1\":{\"286\":1}}],[\"操作数减一\",{\"1\":{\"280\":1}}],[\"操作数加一\",{\"1\":{\"280\":1}}],[\"操作输入框校验是存在的\",{\"1\":{\"258\":1}}],[\"操作整合到一起\",{\"1\":{\"109\":1}}],[\"操控的数据\",{\"1\":{\"100\":1}}],[\"这个对象有发送\",{\"1\":{\"395\":1}}],[\"这个方法执行就说明回调函数执行成功或表示异步代码执行完成\",{\"1\":{\"389\":1}}],[\"这个函数可以访问其内部的变量\",{\"1\":{\"193\":1}}],[\"这个函数\",{\"1\":{\"107\":1}}],[\"这就是所谓的原型链的基本概念\",{\"1\":{\"366\":1}}],[\"这过程叫实例化\",{\"1\":{\"364\":1}}],[\"这种形式简单明了\",{\"1\":{\"355\":1}}],[\"这种形式可以拼接字符串\",{\"1\":{\"355\":1}}],[\"这种控制权就在自身而在其他组件中\",{\"1\":{\"113\":1}}],[\"这样很好的做到了缓存\",{\"1\":{\"482\":1}}],[\"这样第二次打包速度就会更快\",{\"1\":{\"472\":1}}],[\"这样会出现闪屏的现象\",{\"1\":{\"463\":1}}],[\"这样我们就可以对其设置默认值\",{\"1\":{\"381\":1}}],[\"这样防止了子组件意外变更父组件状态时导致数据流向难以理解的问题\",{\"1\":{\"254\":1}}],[\"这样由多个原型对象构成的链表叫原型链\",{\"1\":{\"207\":1}}],[\"这样由多个作用域构成的链表叫作用域链\",{\"1\":{\"199\":1,\"293\":1}}],[\"这会导致体积变大\",{\"1\":{\"480\":1}}],[\"这会导致无法访问到v\",{\"1\":{\"238\":1}}],[\"这会导致请求的资源地址不存在\",{\"1\":{\"121\":1}}],[\"这两个钩子都是组件优化的一种方式\",{\"1\":{\"225\":1}}],[\"这是因为在每次渲染时都会创建一个新的回调函数\",{\"1\":{\"99\":1}}],[\"卸载组件时相当于componentwillunmount\",{\"1\":{\"107\":1}}],[\"则与\",{\"1\":{\"328\":1}}],[\"则除了第一个参数外其余全是函数的参数\",{\"1\":{\"302\":1}}],[\"则\",{\"1\":{\"298\":1}}],[\"则创建新的真实\",{\"1\":{\"243\":1}}],[\"则是以健值对\",{\"1\":{\"219\":1}}],[\"则对该状态进行监听\",{\"1\":{\"107\":1}}],[\"则在组件渲染完成后执行一次\",{\"1\":{\"107\":1}}],[\"钩子\",{\"1\":{\"107\":3}}],[\"数值\",{\"1\":{\"384\":1}}],[\"数学对象\",{\"0\":{\"336\":1}}],[\"数据双向绑定\",{\"1\":{\"418\":1}}],[\"数据变动时执行回调\",{\"1\":{\"417\":1}}],[\"数据变化执行的回调\",{\"1\":{\"429\":1}}],[\"数据变化\",{\"1\":{\"233\":1}}],[\"数据与\",{\"1\":{\"392\":1}}],[\"数据提交\",{\"1\":{\"352\":1}}],[\"数据类型\",{\"0\":{\"262\":1}}],[\"数据共享的仓库\",{\"1\":{\"248\":1}}],[\"数据观测\",{\"1\":{\"240\":1}}],[\"数据更新后\",{\"1\":{\"240\":1}}],[\"数据更新前\",{\"1\":{\"240\":1}}],[\"数据更新\",{\"1\":{\"233\":1}}],[\"数据连接层\",{\"1\":{\"233\":1}}],[\"数据访问层\",{\"1\":{\"233\":1}}],[\"数据依赖过多会导致链式调用冗长\",{\"1\":{\"222\":1}}],[\"数据会一直保留\",{\"1\":{\"216\":1}}],[\"数据绘制到位图\",{\"1\":{\"24\":1}}],[\"数字\",{\"1\":{\"185\":1,\"263\":1,\"284\":1}}],[\"数组绑定形式\",{\"1\":{\"418\":1}}],[\"数组循序一直\",{\"1\":{\"392\":1}}],[\"数组解构是按位置传的\",{\"1\":{\"335\":1}}],[\"数组下一项\",{\"1\":{\"332\":1}}],[\"数组当前项\",{\"1\":{\"332\":1}}],[\"数组每一项\",{\"1\":{\"326\":1,\"331\":1}}],[\"数组会拆分再进行拼接\",{\"1\":{\"319\":1}}],[\"数组形式\",{\"1\":{\"302\":1}}],[\"数组在进行转数值时\",{\"1\":{\"288\":1}}],[\"数组去重\",{\"0\":{\"209\":1},\"1\":{\"376\":1}}],[\"数组\",{\"0\":{\"316\":1},\"1\":{\"139\":1,\"210\":2,\"273\":2,\"287\":1,\"356\":1,\"375\":1,\"392\":1,\"393\":1,\"426\":1}}],[\"数组中指定\",{\"1\":{\"107\":1}}],[\"非data中的变量\",{\"1\":{\"417\":1}}],[\"非命名\",{\"1\":{\"359\":1}}],[\"非命名捕获组\",{\"1\":{\"359\":1}}],[\"非贪婪模式\",{\"1\":{\"358\":1}}],[\"非数值字符串返回一个字符\",{\"1\":{\"304\":1}}],[\"非\",{\"1\":{\"283\":1}}],[\"非渲染阶段\",{\"1\":{\"106\":1}}],[\"非受控\",{\"1\":{\"100\":1}}],[\"渲染页面加载对应对\",{\"1\":{\"479\":1}}],[\"渲染函数\",{\"1\":{\"422\":1}}],[\"渲染更快\",{\"1\":{\"420\":1}}],[\"渲染一个列表\",{\"1\":{\"418\":1}}],[\"渲染的组件\",{\"1\":{\"119\":1}}],[\"渲染阶段\",{\"1\":{\"106\":1}}],[\"渲染时会自动比价两次渲染的元素\",{\"1\":{\"90\":1}}],[\"该对象下包含\",{\"1\":{\"388\":1}}],[\"该属性对应的值\",{\"1\":{\"384\":1}}],[\"该函数执行完\",{\"1\":{\"302\":1}}],[\"该方法会判断当前组件处于什么阶段\",{\"1\":{\"106\":1}}],[\"该过程是一个对象合并的过程而不是覆盖\",{\"1\":{\"97\":1}}],[\"副作用\",{\"0\":{\"106\":1}}],[\"消息队列\",{\"1\":{\"217\":1}}],[\"消息订阅\",{\"1\":{\"98\":1}}],[\"消费者\",{\"1\":{\"105\":1}}],[\"逐层传递了\",{\"1\":{\"105\":1}}],[\"就能处理图片资源\",{\"1\":{\"452\":1}}],[\"就构成了实例与原型的链条\",{\"1\":{\"366\":1}}],[\"就会拿到数据\",{\"1\":{\"402\":1}}],[\"就会进行非贪婪模式匹配\",{\"1\":{\"358\":1}}],[\"就会继续在原型的原型中寻找\",{\"1\":{\"207\":1}}],[\"就会去原型中寻找这个属性\",{\"1\":{\"207\":1}}],[\"就会使组件不断重复渲染\",{\"1\":{\"106\":1}}],[\"就是一个普通函数\",{\"1\":{\"116\":1}}],[\"就是元素节点碎片\",{\"1\":{\"91\":1}}],[\"就近原则\",{\"1\":{\"105\":1}}],[\"就不需要使用\",{\"1\":{\"105\":1}}],[\"空格\",{\"1\":{\"354\":1}}],[\"空字符串\",{\"1\":{\"304\":1}}],[\"空间换时间\",{\"1\":{\"225\":1}}],[\"空间不够是否换行\",{\"1\":{\"184\":1}}],[\"空标签不能绑定\",{\"1\":{\"104\":1}}],[\"空白格解析\",{\"0\":{\"45\":1}}],[\"空白长度\",{\"1\":{\"15\":1}}],[\"专门用作父容器的组件\",{\"1\":{\"104\":1}}],[\"样式时需要借助官方\",{\"1\":{\"450\":1}}],[\"样式\",{\"1\":{\"418\":1}}],[\"样式文件命名应遵循name\",{\"1\":{\"103\":1}}],[\"样式控制\",{\"0\":{\"12\":1}}],[\"传输的数据\",{\"1\":{\"440\":1}}],[\"传给浏览器相应的网页文件并解析\",{\"1\":{\"249\":1}}],[\"传入源对象返回一个\",{\"1\":{\"424\":1}}],[\"传入一个对象\",{\"1\":{\"367\":1}}],[\"传入一个负数的值\",{\"1\":{\"311\":1}}],[\"传入一个非负数的值\",{\"1\":{\"311\":1}}],[\"传入\",{\"1\":{\"118\":1}}],[\"传入的是一个空数组\",{\"1\":{\"107\":1}}],[\"传递给实例原型\",{\"1\":{\"207\":1}}],[\"传递给实例对象的隐式原型\",{\"1\":{\"198\":1}}],[\"传递的名称\",{\"1\":{\"440\":1}}],[\"传递的数据比\",{\"1\":{\"201\":1}}],[\"传递的参数\",{\"1\":{\"118\":1,\"302\":1}}],[\"传递一个回调\",{\"1\":{\"118\":1,\"119\":1}}],[\"传递数据\",{\"1\":{\"101\":2,\"440\":3}}],[\"传送门\",{\"1\":{\"102\":1}}],[\"清空上次打包内容\",{\"0\":{\"453\":1}}],[\"清空\",{\"1\":{\"379\":1}}],[\"清空映射关系\",{\"1\":{\"379\":1}}],[\"清空旧的\",{\"1\":{\"99\":1}}],[\"清除定时器\",{\"1\":{\"227\":1,\"339\":1,\"340\":1}}],[\"清除浮动\",{\"0\":{\"180\":1},\"1\":{\"176\":1}}],[\"清除画布\",{\"0\":{\"4\":1}}],[\"清理函数\",{\"1\":{\"107\":1}}],[\"如此层层递进\",{\"1\":{\"366\":1}}],[\"如何扩展组件\",{\"0\":{\"253\":1}}],[\"如何实现\",{\"0\":{\"32\":1,\"166\":1,\"169\":1}}],[\"如果属性是可选的\",{\"1\":{\"435\":1}}],[\"如果属性名匹配上\",{\"1\":{\"334\":1}}],[\"如果父子元素触发了同一个事件\",{\"1\":{\"414\":1}}],[\"如果最先触发的是\",{\"1\":{\"393\":1}}],[\"如果已有这个元素则不进行操作\",{\"1\":{\"376\":1}}],[\"如果没有去\",{\"1\":{\"368\":1}}],[\"如果没有指定第二个参数\",{\"1\":{\"112\":1}}],[\"如果传入的是变量\",{\"1\":{\"334\":1}}],[\"如果传入的是当前状态\",{\"1\":{\"107\":1}}],[\"如果声明的变量与属性名同名\",{\"1\":{\"334\":1}}],[\"如果操作数不是个数字返回\",{\"1\":{\"288\":1}}],[\"如果\",{\"1\":{\"271\":1,\"423\":1}}],[\"如果未找到相同的\",{\"1\":{\"243\":1}}],[\"如果找到了相同的\",{\"1\":{\"243\":1}}],[\"如果是数值类型且个数为1会创建一个该参数长度的数组\",{\"1\":{\"316\":1}}],[\"如果是个普通对象将会影响到其他组件的数据\",{\"1\":{\"236\":1}}],[\"如果是一个空数组\",{\"1\":{\"107\":1}}],[\"如果原型中也不存在\",{\"1\":{\"207\":1}}],[\"如果对象自身没有这个属性\",{\"1\":{\"207\":1}}],[\"如果子类中重写了类的构造函数\",{\"1\":{\"155\":1}}],[\"如果子类中存在与父类同名的方法\",{\"1\":{\"155\":1}}],[\"如果构造函数形参使用修饰符后\",{\"1\":{\"154\":1}}],[\"如果回调函数是以内联形式定义的\",{\"1\":{\"99\":1}}],[\"只加载并缓存不执行\",{\"1\":{\"481\":1}}],[\"只需替换\",{\"1\":{\"469\":1}}],[\"只需要进行简单的\",{\"1\":{\"452\":1}}],[\"只映射行\",{\"1\":{\"467\":1}}],[\"只处理某些文件\",{\"1\":{\"471\":1}}],[\"只处理了js中模块化的语法\",{\"1\":{\"455\":1}}],[\"只处理基本数据类型的响应式\",{\"1\":{\"436\":1}}],[\"只处理对象最外层属性的响应式\",{\"1\":{\"436\":1}}],[\"只触发一次\",{\"1\":{\"418\":1}}],[\"只渲染一次\",{\"1\":{\"418\":1}}],[\"只包含元素节点\",{\"1\":{\"409\":2}}],[\"只允许构造函数自己调用\",{\"1\":{\"371\":1}}],[\"只存在于函数中\",{\"1\":{\"365\":1}}],[\"只要内存地址没有发生改变是不会触发的\",{\"1\":{\"429\":1}}],[\"只要作用域还能被访问\",{\"1\":{\"291\":1}}],[\"只要一个表达式为真则为真\",{\"1\":{\"283\":1}}],[\"只接受对象类型作为键名\",{\"1\":{\"219\":1}}],[\"只能处理一个loader\",{\"1\":{\"451\":1}}],[\"只能处理\",{\"1\":{\"446\":1}}],[\"只能监听\",{\"1\":{\"429\":1}}],[\"只能用于引用类型\",{\"1\":{\"424\":1}}],[\"只能储存对象引用\",{\"1\":{\"219\":1}}],[\"只能在函数中访问\",{\"1\":{\"300\":1}}],[\"只能在当前函数中访问\",{\"1\":{\"291\":1}}],[\"只能在当前代码块中访问\",{\"1\":{\"291\":1}}],[\"只能在当前类和子类中进行访问\",{\"1\":{\"154\":1}}],[\"只能在组件的顶层中使用\",{\"1\":{\"229\":1}}],[\"只能在组件的顶层或自己的钩子中调用\",{\"1\":{\"227\":1}}],[\"只能在构造函数中修改\",{\"1\":{\"154\":1}}],[\"只能在类的内部进行访问\",{\"1\":{\"154\":1}}],[\"只执行最后一次\",{\"1\":{\"169\":1}}],[\"只读不可修改\",{\"1\":{\"303\":1}}],[\"只读\",{\"1\":{\"154\":1,\"260\":1}}],[\"只读属性不能修改\",{\"1\":{\"98\":1}}],[\"只是在初始化\",{\"1\":{\"295\":1}}],[\"只是对变量进行提升了并没有赋值\",{\"1\":{\"295\":1}}],[\"只是合成事件和钩子调用顺序在更新之前\",{\"1\":{\"230\":1}}],[\"只是将函数的返回值设置为一个\",{\"1\":{\"221\":1}}],[\"只是多了类型注解\",{\"1\":{\"153\":1}}],[\"只是比\",{\"1\":{\"120\":1}}],[\"只会加载当前页面使用的资源\",{\"1\":{\"481\":1}}],[\"只会处理项目本地图片\",{\"1\":{\"477\":1}}],[\"只会处理一层\",{\"1\":{\"320\":1}}],[\"只会对发生改变的模块重新检查和编译\",{\"1\":{\"472\":1}}],[\"只会跳出最近的这层循环\",{\"1\":{\"271\":1}}],[\"只会有一个匹配结果\",{\"1\":{\"128\":1}}],[\"只会在初始化时创建一次\",{\"1\":{\"112\":1}}],[\"只会更新发送变化的部分\",{\"1\":{\"90\":1}}],[\"只有有一个\",{\"1\":{\"392\":1}}],[\"只有一条语句时可以省略\",{\"1\":{\"277\":1}}],[\"只有一张web页面的应用\",{\"1\":{\"232\":1}}],[\"只有两个值\",{\"1\":{\"263\":1}}],[\"只有在做出浏览器动作\",{\"1\":{\"245\":1}}],[\"只有参数列表和返回值类型的函数定义\",{\"1\":{\"162\":1}}],[\"只有当\",{\"1\":{\"110\":1}}],[\"只有状态不相同时才会从新渲染组件\",{\"1\":{\"106\":1}}],[\"也会进行变量提升\",{\"1\":{\"295\":1}}],[\"也会重新渲染组件\",{\"1\":{\"97\":1}}],[\"也可跳出指定循环\",{\"1\":{\"271\":1}}],[\"也可以定义到data或computed中进行绑定\",{\"1\":{\"418\":1}}],[\"也可以是get请求的格式\",{\"1\":{\"396\":1}}],[\"也可以是数组形式\",{\"1\":{\"80\":1}}],[\"也可以进行组合使用\",{\"1\":{\"268\":1}}],[\"也可以通过\",{\"1\":{\"119\":1}}],[\"也可以使用标签<><\",{\"1\":{\"104\":1}}],[\"也可以使用一个空的对象\",{\"1\":{\"99\":1}}],[\"也可以直接继承component\",{\"1\":{\"96\":1}}],[\"也可以在\",{\"1\":{\"72\":1}}],[\"导入\",{\"1\":{\"386\":1}}],[\"导入导出\",{\"1\":{\"77\":1}}],[\"导出\",{\"1\":{\"386\":1}}],[\"导致很多缓存文件失效\",{\"1\":{\"482\":1}}],[\"导致体积过大加载缓慢\",{\"1\":{\"479\":1}}],[\"导致代码体积过大\",{\"1\":{\"476\":1}}],[\"导致不能在浏览器中正常运行\",{\"1\":{\"455\":1}}],[\"导致页面卡死\",{\"1\":{\"384\":1}}],[\"导致内存溢出\",{\"1\":{\"346\":1}}],[\"导致没法立即拿到更新的值\",{\"1\":{\"230\":1}}],[\"导致栈溢出too\",{\"1\":{\"106\":1}}],[\"导致计算错误\",{\"1\":{\"97\":1}}],[\"频繁调研此函数时\",{\"1\":{\"97\":1}}],[\"之前生成过返回之前的值\",{\"1\":{\"373\":1}}],[\"之前的值进行计算时\",{\"1\":{\"97\":1}}],[\"之间\",{\"1\":{\"355\":1}}],[\"之后\",{\"1\":{\"90\":1}}],[\"避免dom的操作\",{\"1\":{\"251\":1}}],[\"避免多个模块对同一个mutation\",{\"1\":{\"248\":1}}],[\"避免了大量重复的dom操作\",{\"1\":{\"244\":1}}],[\"避免数据丢失\",{\"1\":{\"97\":1}}],[\"避免低级错误\",{\"1\":{\"68\":1}}],[\"然后再进行复用\",{\"1\":{\"480\":1}}],[\"然后再去调用\",{\"1\":{\"288\":1}}],[\"然后进行按需引入\",{\"1\":{\"479\":1}}],[\"然后尝试字符串转数值\",{\"1\":{\"288\":1}}],[\"然后将数据渲染到页面\",{\"1\":{\"249\":1}}],[\"然后相应的逻辑\",{\"1\":{\"239\":1}}],[\"然后根据依赖收集去通知页面更新\",{\"1\":{\"234\":1}}],[\"然后标识进行依赖收集\",{\"1\":{\"234\":1}}],[\"然后通过\",{\"1\":{\"480\":1}}],[\"然后通过转十进制的方法进行计算最后拼接\",{\"1\":{\"263\":1}}],[\"然后通过路由守卫钩子验证用户身份\",{\"1\":{\"255\":1}}],[\"然后通过reflect对源对象的属性进行操作最后反射出去\",{\"1\":{\"234\":1}}],[\"然后通过遍历原数组\",{\"1\":{\"209\":1}}],[\"然后通过实例的cancel方法取消请求\",{\"1\":{\"203\":1}}],[\"然后服务端返回这个回调函数的执行将响应数据作为参数传递给回调\",{\"1\":{\"204\":1}}],[\"然后依次向上层作用域中查找直到顶层作用域\",{\"1\":{\"293\":1}}],[\"然后依次向外层作用域中查找直到全局作用域\",{\"1\":{\"199\":1}}],[\"然后依次从未被访问的邻节点出发进行访问\",{\"1\":{\"32\":1,\"166\":1}}],[\"然后使用array\",{\"1\":{\"209\":1}}],[\"然后使用json\",{\"1\":{\"192\":1}}],[\"然后使用clear\",{\"1\":{\"180\":1}}],[\"然后添加边框\",{\"1\":{\"178\":1}}],[\"然后从邻节点出发依次访问它们的邻节点\",{\"1\":{\"166\":1}}],[\"然后调用render方法进行渲染\",{\"1\":{\"101\":1}}],[\"然后单独设置某个属性\",{\"1\":{\"97\":1}}],[\"值为入口文件路径\",{\"1\":{\"480\":1}}],[\"值类型存储在栈中\",{\"1\":{\"208\":1}}],[\"值默认从\",{\"1\":{\"139\":1}}],[\"值作为参数\",{\"1\":{\"114\":1}}],[\"值\",{\"1\":{\"97\":1,\"122\":1,\"281\":2,\"373\":2,\"384\":1,\"417\":1}}],[\"值撑开\",{\"1\":{\"42\":1}}],[\"用一个剩余参数接收正则表达式的匹配的结果\",{\"1\":{\"359\":1}}],[\"用一对大括号定界\",{\"1\":{\"267\":1}}],[\"用来检查\",{\"1\":{\"456\":1}}],[\"用来监听请求进程\",{\"1\":{\"397\":1}}],[\"用来跟字符串进行匹配\",{\"1\":{\"354\":1}}],[\"用来修改当前状态的值\",{\"1\":{\"97\":1}}],[\"用弧度值单位表示\",{\"1\":{\"337\":1}}],[\"用户输入地址向服务器发送请求后\",{\"1\":{\"249\":1}}],[\"用户操作体验好\",{\"1\":{\"232\":1}}],[\"用js对象模拟dom结构\",{\"1\":{\"244\":1}}],[\"用途\",{\"1\":{\"240\":1}}],[\"用indexof\",{\"1\":{\"209\":1}}],[\"用while去遍历实例对象\",{\"1\":{\"198\":1}}],[\"用于引用类型数据的响应式定义\",{\"1\":{\"424\":1}}],[\"用于基本数据类型的响应式定义\",{\"1\":{\"423\":1}}],[\"用于记录事件相关的信息\",{\"1\":{\"411\":1}}],[\"用于装载元素节点\",{\"1\":{\"407\":1}}],[\"用于确定一个表达式的计算顺序\",{\"1\":{\"285\":1}}],[\"用于次数确定的循环\",{\"1\":{\"271\":1}}],[\"用于集中式状态管理\",{\"1\":{\"248\":1}}],[\"用于移动端适配\",{\"1\":{\"186\":1}}],[\"用于错误抛出\",{\"1\":{\"139\":1}}],[\"用于\",{\"1\":{\"128\":1,\"440\":1}}],[\"用于组件间的数据共享\",{\"1\":{\"117\":1}}],[\"用于操作dom\",{\"1\":{\"90\":1}}],[\"直至顶层作用域\",{\"1\":{\"293\":1}}],[\"直到找到该属性或到达原型链的尽头\",{\"1\":{\"207\":1}}],[\"直到所有与顶点相通的节点被访问到\",{\"1\":{\"32\":1,\"166\":1}}],[\"直接通过下标修改数组元素不会触发视图更新\",{\"1\":{\"426\":1}}],[\"直接执行成功回调\",{\"1\":{\"393\":1}}],[\"直接执行\",{\"1\":{\"392\":1}}],[\"直接引用另一个对象的内存地址\",{\"1\":{\"350\":1}}],[\"直接结束该函数\",{\"1\":{\"328\":2}}],[\"直接结束该函数不会继续判断\",{\"1\":{\"327\":1}}],[\"直接返回函数整体\",{\"1\":{\"287\":1}}],[\"直接返回数组中的内容\",{\"1\":{\"287\":1}}],[\"直接复用之前的\",{\"1\":{\"243\":1}}],[\"直接将变量的值进行赋值操作\",{\"1\":{\"192\":1}}],[\"直接调用\",{\"1\":{\"169\":1}}],[\"直接在\",{\"1\":{\"136\":1,\"458\":1}}],[\"直接在组件上挂载ref是获取不到的\",{\"1\":{\"113\":1}}],[\"直接维护到状态中\",{\"1\":{\"100\":1}}],[\"直接修改不会触发组件重新渲染\",{\"1\":{\"97\":1}}],[\"第n项的值\",{\"1\":{\"347\":1}}],[\"第二个参数内部是怎么比较的\",{\"0\":{\"228\":1}}],[\"第二个元素是修改\",{\"1\":{\"109\":1}}],[\"第二个元素是一个函数\",{\"1\":{\"97\":1}}],[\"第二次是新值会慢一步更新\",{\"1\":{\"114\":1}}],[\"第二次才会出入\",{\"1\":{\"99\":1}}],[\"第一个元素是\",{\"1\":{\"109\":1}}],[\"第一个元素为当前状态\",{\"1\":{\"97\":1}}],[\"第一次迭代会从第二项开始\",{\"1\":{\"331\":1}}],[\"第一次是旧值\",{\"1\":{\"114\":1}}],[\"第一次相同时\",{\"1\":{\"106\":1}}],[\"第一次会传入\",{\"1\":{\"99\":1}}],[\"第三方\",{\"1\":{\"88\":2}}],[\"第三方包有很多\",{\"1\":{\"87\":1}}],[\"第三方规范包\",{\"0\":{\"87\":1}}],[\"接收\",{\"1\":{\"440\":1}}],[\"接收新值\",{\"1\":{\"417\":1}}],[\"接收到这个函数执行\",{\"1\":{\"402\":1}}],[\"接收数据\",{\"1\":{\"399\":1,\"440\":2}}],[\"接收请求的功能\",{\"1\":{\"395\":1}}],[\"接收多个参数\",{\"1\":{\"381\":1}}],[\"接收参数\",{\"1\":{\"297\":1}}],[\"接收resolve传递下来的参数\",{\"1\":{\"393\":1}}],[\"接收resolve\",{\"1\":{\"218\":1}}],[\"接收一个错误对象\",{\"1\":{\"388\":1}}],[\"接收一个回调函数\",{\"1\":{\"388\":1,\"439\":1}}],[\"接收一个回调和一个依赖项\",{\"1\":{\"227\":1}}],[\"接收一个回调和一个依赖数组\",{\"1\":{\"111\":1,\"112\":1}}],[\"接收一个回调和一个\",{\"1\":{\"109\":1}}],[\"接收一个回调和一个数组\",{\"1\":{\"107\":1}}],[\"接收一个参数\",{\"1\":{\"384\":1}}],[\"接收一个可枚举对象\",{\"1\":{\"375\":1}}],[\"接收一个字符串或数字类型的参数\",{\"1\":{\"372\":1}}],[\"接收一个服务器对象\",{\"1\":{\"133\":1}}],[\"接收一个是否激活的对象\",{\"1\":{\"132\":1}}],[\"接收一个配置对象\",{\"1\":{\"118\":1}}],[\"接收一个组件作为参数\",{\"1\":{\"110\":1}}],[\"接收一个\",{\"1\":{\"109\":1,\"113\":2,\"114\":1,\"373\":1,\"392\":1,\"393\":1,\"417\":1}}],[\"接收一个初始值作用参数并返回一个数组\",{\"1\":{\"97\":1}}],[\"接口约束函数需要给接口定义一个调用签名\",{\"1\":{\"162\":1}}],[\"接口继承多个接口\",{\"1\":{\"161\":1}}],[\"接口和接口之间叫继承\",{\"1\":{\"161\":1}}],[\"接口中定义的方法都是抽象方法\",{\"1\":{\"159\":1}}],[\"接口只定义对象的结构\",{\"1\":{\"159\":1}}],[\"接口是对象的状态\",{\"1\":{\"159\":1}}],[\"接口\",{\"0\":{\"159\":1},\"1\":{\"164\":1}}],[\"接着绘制会使用的前面定义的样式\",{\"1\":{\"3\":1}}],[\"当模块改变后runtime\",{\"1\":{\"482\":1}}],[\"当使用懒加载时\",{\"1\":{\"481\":1}}],[\"当使用一个新对象去覆盖时应当对之前的数据进行拷贝\",{\"1\":{\"97\":1}}],[\"当项目足够庞大时开启多进程可以大大的减少时间\",{\"1\":{\"473\":1}}],[\"当项目某个模块发生改变时\",{\"1\":{\"469\":1}}],[\"当项目设置flex为1后\",{\"1\":{\"184\":1}}],[\"当程序运行出错时会通过配置\",{\"1\":{\"467\":1}}],[\"当请求地址违背的同源策略就构成了跨域\",{\"1\":{\"400\":1}}],[\"当请求响应成功后\",{\"1\":{\"398\":1}}],[\"当请求的地址与当前地址的协议\",{\"1\":{\"204\":1}}],[\"当状态改变时触发该回调\",{\"1\":{\"397\":1}}],[\"当状态更新时会自动触发组件重新渲染\",{\"1\":{\"97\":1}}],[\"当有一个\",{\"1\":{\"393\":1}}],[\"当属性值被修改时\",{\"1\":{\"384\":1}}],[\"当访问该属性时\",{\"1\":{\"384\":1}}],[\"当访问一个变量时\",{\"1\":{\"199\":1}}],[\"当回调是箭头函数时遵循箭头函数的绑定法则\",{\"1\":{\"326\":1}}],[\"当进入作用域时作用域瞬间出现\",{\"1\":{\"292\":1}}],[\"当条件表达式\",{\"1\":{\"268\":1}}],[\"当hash值改变时不会触发http请求\",{\"1\":{\"245\":1}}],[\"当视图更新后台\",{\"1\":{\"244\":1}}],[\"当向列表前面添加或删除数据时会导致后面的\",{\"1\":{\"243\":1}}],[\"当依赖的数据发生改变时才会重新计算\",{\"1\":{\"239\":1}}],[\"当依赖项变化时才会重新计算函数的返回值\",{\"1\":{\"225\":1}}],[\"当依赖项发生改变时才重新计算\",{\"1\":{\"111\":1}}],[\"当promse调用后\",{\"1\":{\"218\":1}}],[\"当一个模块改变其他依赖的模块也随之改变\",{\"1\":{\"482\":1}}],[\"当一个对象中的属性值改变后\",{\"1\":{\"350\":1}}],[\"当一个属性值被修改后\",{\"1\":{\"208\":1}}],[\"当一块内存地址使用完成未被释放\",{\"1\":{\"205\":1}}],[\"当试图访问一个对象属性时\",{\"1\":{\"207\":1}}],[\"当发生多个作用域嵌套形成的一个链表\",{\"1\":{\"199\":1}}],[\"当后面项目在这放不下\",{\"1\":{\"185\":1}}],[\"当变量声明和赋值同时进行\",{\"1\":{\"138\":1}}],[\"当刷新页面时\",{\"1\":{\"121\":1}}],[\"当前标签上的所有属性对象\",{\"1\":{\"422\":1}}],[\"当前网站下访问其他网站的资源\",{\"1\":{\"400\":1}}],[\"当前循环的数组\",{\"1\":{\"326\":1,\"331\":1}}],[\"当前项在数组中的下标\",{\"1\":{\"326\":1,\"331\":1}}],[\"当前文件都能访问\",{\"1\":{\"291\":1}}],[\"当前进制数\",{\"1\":{\"263\":1}}],[\"当前进制\",{\"1\":{\"263\":1}}],[\"当前\",{\"1\":{\"118\":1}}],[\"当设置延迟值后\",{\"1\":{\"114\":1}}],[\"当数据发生改变时才会重新计算\",{\"1\":{\"417\":1}}],[\"当数据发生变化时触发watcher事件发布消息给订阅者\",{\"1\":{\"234\":1}}],[\"当数据变化时\",{\"1\":{\"243\":1}}],[\"当数据方式改变时触发\",{\"1\":{\"107\":1}}],[\"当数量依赖项发送变化才会重新创建\",{\"1\":{\"112\":1}}],[\"当第二个参数未传递时\",{\"1\":{\"107\":1}}],[\"当输入表单项改变时\",{\"1\":{\"100\":1}}],[\"当组件中的参数名与传递的属性名相同时可以使用批量传递\",{\"1\":{\"98\":1}}],[\"当组件渲染完成后\",{\"1\":{\"97\":1}}],[\"当需要使用\",{\"1\":{\"97\":1}}],[\"当\",{\"1\":{\"97\":1,\"124\":1,\"168\":1,\"225\":1,\"277\":1,\"463\":1}}],[\"当对象不再被引用或不能从根上访问\",{\"1\":{\"35\":1}}],[\"但依赖的模块并未改变\",{\"1\":{\"482\":1}}],[\"但在\",{\"1\":{\"423\":1}}],[\"但\",{\"1\":{\"422\":1}}],[\"但可以使用\",{\"1\":{\"417\":1}}],[\"但可以设置左边距\",{\"1\":{\"43\":1}}],[\"但未被接收\",{\"1\":{\"397\":1}}],[\"但未发送请求\",{\"1\":{\"397\":1}}],[\"但未初始化\",{\"1\":{\"397\":1}}],[\"但不能是一个\",{\"1\":{\"422\":1}}],[\"但不能拼接变量\",{\"1\":{\"355\":1}}],[\"但不是很好\",{\"1\":{\"130\":1}}],[\"但写着比较繁琐\",{\"1\":{\"355\":1}}],[\"但函数内容还保留在块级作用域中\",{\"1\":{\"295\":1}}],[\"但是到了保存校验时发现\",{\"1\":{\"258\":1}}],[\"但是可以修改内嵌的对象或属性\",{\"1\":{\"254\":1}}],[\"但是一旦写了构造器就必须接收props并调用super\",{\"1\":{\"96\":1}}],[\"但内容未变\",{\"1\":{\"243\":1}}],[\"但内容还保留在里面\",{\"1\":{\"206\":1}}],[\"但只能在初始化时才能访问\",{\"1\":{\"206\":1}}],[\"跟函数中的\",{\"1\":{\"96\":1}}],[\"浏览器对象模型\",{\"1\":{\"403\":1}}],[\"浏览器不允许跨域\",{\"1\":{\"400\":1}}],[\"浏览器不支持\",{\"1\":{\"135\":1}}],[\"浏览器判断代码是否执行完的唯一标准是是否有返回值\",{\"1\":{\"263\":1}}],[\"浏览器绘制之前同步执行\",{\"1\":{\"226\":1}}],[\"浏览器可渲染的最小字号为\",{\"1\":{\"188\":1}}],[\"浏览器渲染\",{\"1\":{\"93\":1}}],[\"浏览器层级渲染从低到高\",{\"1\":{\"57\":1}}],[\"首屏加载的优化方案\",{\"0\":{\"235\":1}}],[\"首页加载缓慢\",{\"1\":{\"232\":1}}],[\"首页模版\",{\"1\":{\"93\":1}}],[\"首先会在当前作用域进行查找\",{\"1\":{\"293\":1}}],[\"首先会在当前作用域中查找\",{\"1\":{\"199\":1,\"293\":1}}],[\"首先在路由\",{\"1\":{\"255\":1}}],[\"首先访问顶点\",{\"1\":{\"32\":1,\"166\":1}}],[\"根目录\",{\"1\":{\"93\":1}}],[\"根据里面配置的规则进行检查\",{\"1\":{\"456\":1}}],[\"根据表达式的值在\",{\"1\":{\"418\":1}}],[\"根据状态码是否成功获取到数据\",{\"1\":{\"399\":1}}],[\"根据权限返回内容\",{\"1\":{\"384\":1}}],[\"根据回调函数返回值进行排序\",{\"1\":{\"332\":1}}],[\"根据crm标签计算生成\",{\"1\":{\"257\":1}}],[\"根据返回身份信息与路由中的\",{\"1\":{\"255\":1}}],[\"根据容器大小自动填充\",{\"1\":{\"185\":1}}],[\"根据指令执行相应的操作\",{\"1\":{\"109\":1}}],[\"根据\",{\"1\":{\"24\":1}}],[\"根据两个圆的位置创建径向渐变\",{\"1\":{\"13\":1}}],[\"注入\",{\"1\":{\"476\":1}}],[\"注重的是逻辑\",{\"1\":{\"430\":1}}],[\"注册了多个事件监听\",{\"1\":{\"415\":1}}],[\"注册\",{\"1\":{\"373\":1}}],[\"注释需写在\",{\"1\":{\"91\":1}}],[\"注意使用小驼峰命名\",{\"1\":{\"418\":1}}],[\"注意不要访问自己的属性\",{\"1\":{\"384\":1}}],[\"注意值为undefined的属性\",{\"1\":{\"212\":1}}],[\"注意\",{\"1\":{\"96\":1,\"97\":2,\"120\":1,\"221\":1,\"275\":1,\"300\":1,\"301\":1,\"326\":1,\"330\":1,\"365\":1,\"384\":1,\"473\":1}}],[\"注意点\",{\"1\":{\"91\":1}}],[\"注意兼容\",{\"1\":{\"51\":1}}],[\"注意画笔状态的保存与恢复\",{\"1\":{\"28\":1}}],[\"类数组\",{\"1\":{\"404\":1}}],[\"类数组不能使用数组的方法\",{\"1\":{\"326\":1}}],[\"类时不能确定使用的数据类型\",{\"1\":{\"164\":1}}],[\"类实现多个接口\",{\"1\":{\"161\":1}}],[\"类实现接口\",{\"0\":{\"161\":1}}],[\"类和接口之间叫实现\",{\"1\":{\"161\":1}}],[\"类的三大特点\",{\"1\":{\"153\":1}}],[\"类\",{\"0\":{\"153\":1,\"370\":1},\"1\":{\"173\":1}}],[\"类型转换分为隐式转换\",{\"1\":{\"286\":1}}],[\"类型转换\",{\"0\":{\"286\":1}}],[\"类型的值\",{\"1\":{\"268\":1}}],[\"类型的数据\",{\"1\":{\"210\":2,\"273\":2}}],[\"类型之间没有严格的隔离\",{\"1\":{\"259\":1}}],[\"类型不同\",{\"1\":{\"163\":1}}],[\"类型别名\",{\"0\":{\"143\":1}}],[\"类型断言\",{\"0\":{\"141\":1}}],[\"类型就是该函数本身\",{\"1\":{\"139\":1}}],[\"类型检查\",{\"1\":{\"139\":1}}],[\"类型\",{\"0\":{\"139\":1},\"1\":{\"138\":1,\"139\":2,\"151\":1,\"264\":1}}],[\"类型推断\",{\"0\":{\"138\":1}}],[\"类型声明\",{\"0\":{\"137\":1}}],[\"类似剩余参数\",{\"1\":{\"334\":1}}],[\"类似数组\",{\"1\":{\"219\":1}}],[\"类似\",{\"1\":{\"111\":1,\"253\":1,\"430\":1}}],[\"类似调色盘\",{\"1\":{\"13\":1}}],[\"类名\",{\"1\":{\"418\":1}}],[\"类名会自动计算生成一个唯一的类名\",{\"1\":{\"103\":1}}],[\"类名需要通过\",{\"1\":{\"91\":1}}],[\"类中成员\",{\"1\":{\"154\":1}}],[\"类中的props是挂载到实例对象上的\",{\"1\":{\"98\":1}}],[\"类中方法是直接赋值给事件回调\",{\"1\":{\"96\":1}}],[\"类中构造器可有可无\",{\"1\":{\"96\":1}}],[\"类中通过react\",{\"1\":{\"96\":1}}],[\"类组件中\",{\"1\":{\"97\":1}}],[\"类组件\",{\"0\":{\"96\":1},\"1\":{\"97\":1,\"98\":1}}],[\"大量的注册事件监听\",{\"1\":{\"415\":1}}],[\"大的那一个数\",{\"1\":{\"336\":1}}],[\"大值\",{\"1\":{\"336\":1}}],[\"大于原有长度会创建\",{\"1\":{\"318\":1}}],[\"大于等于\",{\"1\":{\"284\":1}}],[\"大多数情况下对象转字符串的值为\",{\"1\":{\"287\":1}}],[\"大写字母\",{\"1\":{\"284\":1}}],[\"大写会被认为是一个组件\",{\"1\":{\"91\":1}}],[\"大体分为以下三个阶段\",{\"1\":{\"240\":1}}],[\"大小写转换\",{\"1\":{\"314\":1}}],[\"大小\",{\"0\":{\"48\":1}}],[\"必须绑定唯一标识符\",{\"1\":{\"418\":1}}],[\"必须\",{\"1\":{\"417\":1}}],[\"必须调用\",{\"1\":{\"370\":1}}],[\"必须由对象或数组包裹\",{\"1\":{\"333\":1}}],[\"必须由子类重写\",{\"1\":{\"157\":1}}],[\"必须由子类继承实现\",{\"1\":{\"157\":1}}],[\"必须的\",{\"1\":{\"271\":1}}],[\"必须初始化\",{\"1\":{\"260\":1}}],[\"必须是同步函数\",{\"1\":{\"248\":1}}],[\"必须return出去\",{\"1\":{\"239\":1}}],[\"必须使用\",{\"1\":{\"220\":1}}],[\"必须使用一个唯一值作为列表key\",{\"1\":{\"92\":1}}],[\"必须通过\",{\"1\":{\"155\":1}}],[\"必须实现render方法并返回一个\",{\"1\":{\"96\":1}}],[\"必须有且只有一个根标签\",{\"1\":{\"91\":1}}],[\"必须在实现接口时具体实现\",{\"1\":{\"159\":1}}],[\"必须在\",{\"1\":{\"90\":1}}],[\"执行压缩css插件\",{\"1\":{\"464\":1}}],[\"执行时会自动读取配置文件\",{\"1\":{\"458\":1}}],[\"执行时会从全局栈中一行一行的执行\",{\"1\":{\"217\":1}}],[\"执行顺序\",{\"1\":{\"451\":1}}],[\"执行顺序应该是从里到外的\",{\"1\":{\"414\":1}}],[\"执行任务\",{\"1\":{\"414\":1}}],[\"执行的结果\",{\"1\":{\"394\":1}}],[\"执行的过程是同步的\",{\"1\":{\"230\":1}}],[\"执行返回函数是可传入部分参数\",{\"1\":{\"302\":1}}],[\"执行完立即销毁\",{\"1\":{\"297\":1}}],[\"执行阶段\",{\"0\":{\"296\":1},\"1\":{\"295\":1}}],[\"执行else语句\",{\"1\":{\"268\":1}}],[\"执行事件的顺序\",{\"1\":{\"200\":1}}],[\"执行后返回一个新的函数\",{\"1\":{\"193\":1}}],[\"执行先后顺序\",{\"1\":{\"108\":1}}],[\"执行前调用\",{\"1\":{\"107\":1}}],[\"执行流程\",{\"0\":{\"106\":1}}],[\"执行\",{\"1\":{\"91\":1,\"106\":1,\"107\":1,\"268\":1,\"394\":1,\"422\":1,\"447\":1,\"448\":1,\"456\":1}}],[\"来提升加载速度\",{\"1\":{\"479\":1}}],[\"来进行处理\",{\"1\":{\"469\":1}}],[\"来修改此模板字符串指定输出目录\",{\"1\":{\"453\":1}}],[\"来截取对对象成员的访问和修改\",{\"1\":{\"158\":1}}],[\"来创建\",{\"1\":{\"91\":1}}],[\"来指定输出目录\",{\"1\":{\"453\":1}}],[\"来指定\",{\"1\":{\"90\":1,\"91\":1}}],[\"参数必须与之前保持一致\",{\"1\":{\"412\":1}}],[\"参数都是与规则进行匹配的字符串\",{\"1\":{\"356\":1}}],[\"参数说明\",{\"1\":{\"325\":1,\"326\":1,\"331\":1,\"332\":1,\"339\":1,\"340\":1,\"355\":1}}],[\"参数二为负数\",{\"1\":{\"311\":1}}],[\"参数一为整数\",{\"1\":{\"311\":1}}],[\"参数同\",{\"1\":{\"305\":1,\"327\":1,\"328\":1,\"329\":1}}],[\"参数\",{\"1\":{\"302\":2,\"310\":1,\"311\":1,\"312\":2,\"316\":1,\"384\":1}}],[\"参数只有一个时可省略参数的\",{\"1\":{\"277\":1}}],[\"参数是可见的\",{\"1\":{\"201\":1}}],[\"参数不以\",{\"1\":{\"168\":1}}],[\"参数的个数\",{\"1\":{\"163\":1}}],[\"参数或函数返回值添加的一种类型约束\",{\"1\":{\"137\":1}}],[\"参数2\",{\"1\":{\"90\":1}}],[\"参数1\",{\"1\":{\"90\":1}}],[\"参数6表示是否逆时针\",{\"1\":{\"7\":1}}],[\"暴露一个函数\",{\"1\":{\"133\":1}}],[\"暴露\",{\"1\":{\"90\":2}}],[\"引用多少次才进行分割\",{\"1\":{\"480\":1}}],[\"引用对象\",{\"1\":{\"423\":1}}],[\"引用类型存储在堆中\",{\"1\":{\"208\":1}}],[\"引用类型和值类型的区别\",{\"0\":{\"208\":1}}],[\"引用类型\",{\"1\":{\"190\":1}}],[\"引用地址未改变不会触发更新\",{\"1\":{\"97\":1}}],[\"引入css压缩插件\",{\"1\":{\"464\":1}}],[\"引入内置模块\",{\"1\":{\"133\":1}}],[\"引入\",{\"1\":{\"90\":1,\"417\":1,\"483\":1}}],[\"引擎的垃圾回收\",{\"0\":{\"36\":1}}],[\"快速开始\",{\"0\":{\"90\":1,\"447\":1}}],[\"所属对象\",{\"1\":{\"434\":1}}],[\"所有\",{\"1\":{\"422\":1}}],[\"所有的组合式\",{\"1\":{\"422\":1}}],[\"所有的方法都不可枚举\",{\"1\":{\"220\":1}}],[\"所有对象冻结成现在的样子\",{\"1\":{\"385\":1}}],[\"所有内容都会消失\",{\"1\":{\"292\":1}}],[\"所有表达式都有返回值\",{\"1\":{\"263\":1}}],[\"所有使用到变量一定要在依赖数组中声明才能获取到最新的状态\",{\"1\":{\"112\":1}}],[\"所有规则\",{\"1\":{\"88\":1}}],[\"所以取值应遵循出栈规则\",{\"1\":{\"263\":1}}],[\"所以对操作的那一列进行了固定\",{\"1\":{\"258\":1}}],[\"所以未被props定义的属性\",{\"1\":{\"242\":1}}],[\"所以可以使用一个\",{\"1\":{\"99\":1}}],[\"所以会导致this指向错误的问题\",{\"1\":{\"96\":1}}],[\"所以最好选择\",{\"1\":{\"76\":1}}],[\"下载\",{\"1\":{\"451\":1}}],[\"下载webpack依赖\",{\"1\":{\"447\":1}}],[\"下载依赖包\",{\"1\":{\"457\":1,\"459\":1,\"473\":1}}],[\"下载依赖\",{\"1\":{\"447\":1,\"483\":1}}],[\"下载包\",{\"1\":{\"87\":1}}],[\"下划线\",{\"1\":{\"357\":2}}],[\"下标\",{\"1\":{\"325\":1}}],[\"下的文件\",{\"1\":{\"461\":1}}],[\"下的属性进行绑定\",{\"1\":{\"412\":1}}],[\"下的provider组件上的\",{\"1\":{\"105\":1}}],[\"下的\",{\"1\":{\"97\":1,\"105\":1}}],[\"下一个图形开始路径会与当前图像结束路径相连\",{\"1\":{\"3\":1}}],[\"全部引入\",{\"1\":{\"483\":1}}],[\"全部的规则\",{\"1\":{\"86\":1}}],[\"全等于\",{\"1\":{\"263\":1}}],[\"全局搜索\",{\"1\":{\"355\":1}}],[\"全局中\",{\"1\":{\"301\":1}}],[\"全局\",{\"1\":{\"291\":1}}],[\"全局混入\",{\"1\":{\"253\":1}}],[\"全局守卫\",{\"1\":{\"247\":1}}],[\"全局作用域\",{\"1\":{\"35\":1,\"291\":1}}],[\"全称为块级格式化上下文\",{\"1\":{\"174\":1}}],[\"一旦发生改变就会重新打包\",{\"1\":{\"461\":1}}],[\"一旦设置了false就永远不能修改了\",{\"1\":{\"384\":1}}],[\"一致\",{\"1\":{\"428\":1}}],[\"一种跨域解决方案\",{\"1\":{\"402\":1}}],[\"一种约定\",{\"1\":{\"362\":1}}],[\"一开始就写出结束条件\",{\"1\":{\"346\":1}}],[\"一元运算符\",{\"1\":{\"280\":2}}],[\"一次都不执行\",{\"1\":{\"272\":1}}],[\"一般情况下有和没有无本质区别\",{\"1\":{\"267\":1}}],[\"一般情况下不用动\",{\"1\":{\"151\":1}}],[\"一般用于限制对象中的属性\",{\"1\":{\"139\":1}}],[\"一般不允许使用在页面中未定义的变量\",{\"1\":{\"78\":1}}],[\"一个值\",{\"1\":{\"417\":1}}],[\"一个函数\",{\"1\":{\"298\":1}}],[\"一个环境中的元素不会影响到其它环境中的布局\",{\"1\":{\"174\":1}}],[\"一个\",{\"1\":{\"113\":1}}],[\"一样\",{\"1\":{\"96\":1}}],[\"一起下载\",{\"1\":{\"86\":1}}],[\"随着注册次数的增加而增加\",{\"1\":{\"339\":1}}],[\"随着程序执行\",{\"1\":{\"205\":1}}],[\"随机数\",{\"1\":{\"336\":1}}],[\"随边距\",{\"1\":{\"177\":1}}],[\"随\",{\"1\":{\"86\":1}}],[\"随页面滚动而滚动\",{\"1\":{\"52\":1}}],[\"函数中使用\",{\"1\":{\"432\":1}}],[\"函数都必须在\",{\"1\":{\"422\":1}}],[\"函数都是通过\",{\"1\":{\"362\":1}}],[\"函数前面\",{\"1\":{\"394\":1}}],[\"函数传递的数据以数组的形式传递给回调\",{\"1\":{\"392\":1}}],[\"函数等\",{\"1\":{\"384\":1}}],[\"函数自己调用自己的过程\",{\"1\":{\"346\":1}}],[\"函数以参数的形式传给函数\",{\"1\":{\"326\":1}}],[\"函数参数接收不同\",{\"1\":{\"302\":1}}],[\"函数名称\",{\"1\":{\"300\":1}}],[\"函数名相同\",{\"1\":{\"163\":1}}],[\"函数形参的个数\",{\"1\":{\"300\":1}}],[\"函数体仍保留在块级作用域中\",{\"1\":{\"295\":1}}],[\"函数变量进行了提升\",{\"1\":{\"295\":1}}],[\"函数提升时会跳出块级作用域\",{\"1\":{\"295\":1}}],[\"函数提升会跳出块级作用域\",{\"1\":{\"206\":1}}],[\"函数一等公民\",{\"1\":{\"295\":1}}],[\"函数一旦返回内容表示函数执行完成\",{\"1\":{\"276\":1}}],[\"函数转不了数值\",{\"1\":{\"288\":1}}],[\"函数在执行后作用域被保留了\",{\"1\":{\"298\":1}}],[\"函数在执行时才会去访问变量\",{\"1\":{\"278\":1}}],[\"函数在变量提升时会跳出块级作用域\",{\"1\":{\"295\":1}}],[\"函数在声明的时候就已经赋值了\",{\"1\":{\"206\":1}}],[\"函数的原型是prototype\",{\"1\":{\"365\":1}}],[\"函数的参数\",{\"1\":{\"302\":2}}],[\"函数的作用域\",{\"1\":{\"300\":1}}],[\"函数的返回值\",{\"1\":{\"276\":1}}],[\"函数的输入与输出\",{\"0\":{\"276\":1}}],[\"函数调用时向函数内部传递数据\",{\"1\":{\"276\":1}}],[\"函数表达式不会进行变量提升\",{\"1\":{\"295\":1}}],[\"函数表达式和函数提升的区别\",{\"1\":{\"295\":1}}],[\"函数表达式\",{\"1\":{\"275\":1}}],[\"函数表达式提升时不会将整体提升\",{\"1\":{\"206\":1}}],[\"函数声明提升时会将函数整体提升到最前面\",{\"1\":{\"295\":1}}],[\"函数声明\",{\"1\":{\"275\":1}}],[\"函数声明会将整个函数提升到最前面\",{\"1\":{\"206\":1}}],[\"函数类型\",{\"0\":{\"275\":1}}],[\"函数类型接口\",{\"0\":{\"162\":1}}],[\"函数执行\",{\"1\":{\"275\":1,\"417\":1}}],[\"函数执行结果\",{\"1\":{\"221\":1}}],[\"函数执行返回后从栈中弹出\",{\"1\":{\"217\":1}}],[\"函数会将整体提升到最前面\",{\"1\":{\"199\":1}}],[\"函数作用域\",{\"1\":{\"199\":1,\"291\":1}}],[\"函数重载\",{\"0\":{\"163\":1}}],[\"函数数组\",{\"1\":{\"98\":1}}],[\"函数式state\",{\"1\":{\"97\":1}}],[\"函数组件\",{\"0\":{\"95\":1},\"1\":{\"97\":1}}],[\"函数\",{\"0\":{\"274\":1},\"1\":{\"84\":1,\"221\":1,\"287\":1,\"291\":1,\"388\":1,\"422\":1,\"439\":1,\"480\":1}}],[\"每多一个文件都会多插入一次\",{\"1\":{\"476\":1}}],[\"每列的映射关系\",{\"1\":{\"467\":1}}],[\"每间隔一段时间执行一次\",{\"1\":{\"340\":1}}],[\"每个进程启动需要花费\",{\"1\":{\"473\":1}}],[\"每个构造函数都有一个原型对象\",{\"1\":{\"366\":1}}],[\"每个模块都拥有自己的state\",{\"1\":{\"248\":1}}],[\"每个函数上都存在一个原型对象\",{\"1\":{\"207\":1}}],[\"每个项目在网格中\",{\"1\":{\"185\":1}}],[\"每一项对应一个参数\",{\"1\":{\"194\":1}}],[\"每次打包时都要经过\",{\"1\":{\"472\":1}}],[\"每次计算的结果\",{\"1\":{\"331\":1}}],[\"每次迭代值依次与初始值进行计算\",{\"1\":{\"331\":1}}],[\"每次调用都会执行一次\",{\"1\":{\"239\":1}}],[\"每次\",{\"1\":{\"114\":1}}],[\"每条规则\",{\"1\":{\"84\":1}}],[\"每4个值为一组\",{\"1\":{\"24\":1}}],[\"检查和\",{\"1\":{\"472\":1}}],[\"检查当前路由是否与某个路由匹配\",{\"1\":{\"129\":1}}],[\"检查包需要的\",{\"1\":{\"87\":1}}],[\"检查语法的规则\",{\"0\":{\"83\":1}}],[\"检查的规范\",{\"1\":{\"82\":1}}],[\"检查规则\",{\"1\":{\"72\":1}}],[\"usage\",{\"1\":{\"483\":1}}],[\"usebuiltins\",{\"1\":{\"483\":1}}],[\"usepoint\",{\"1\":{\"432\":3}}],[\"useparams\",{\"1\":{\"123\":1}}],[\"use\",{\"1\":{\"133\":2,\"152\":1,\"432\":1,\"445\":2,\"451\":1,\"459\":2,\"463\":1,\"464\":1,\"470\":1,\"471\":1,\"472\":1,\"473\":1,\"476\":1}}],[\"usenavigate\",{\"1\":{\"129\":2}}],[\"usematch\",{\"1\":{\"129\":2}}],[\"usememo\",{\"0\":{\"111\":1,\"225\":1},\"1\":{\"106\":1,\"111\":3,\"225\":1}}],[\"usehistory\",{\"1\":{\"123\":1}}],[\"uselocation\",{\"1\":{\"123\":1}}],[\"uselayouteffect\",{\"0\":{\"226\":1},\"1\":{\"108\":2,\"226\":1}}],[\"user\",{\"1\":{\"186\":1}}],[\"useroutematch\",{\"1\":{\"123\":1}}],[\"usereducer\",{\"0\":{\"109\":1},\"1\":{\"106\":1,\"109\":2}}],[\"useref\",{\"0\":{\"99\":1},\"1\":{\"99\":4,\"113\":1}}],[\"useselector\",{\"1\":{\"118\":2}}],[\"usestate\",{\"1\":{\"97\":3,\"106\":3,\"113\":1,\"114\":1,\"116\":1}}],[\"usedispatch\",{\"1\":{\"118\":2}}],[\"usedispatch获取派发器对象\",{\"1\":{\"118\":1}}],[\"usedata\",{\"1\":{\"116\":4}}],[\"usedeferredvalue\",{\"0\":{\"114\":1},\"1\":{\"114\":1}}],[\"usetransition\",{\"0\":{\"115\":1},\"1\":{\"115\":1}}],[\"useimperativehanle\",{\"0\":{\"113\":1},\"1\":{\"113\":1}}],[\"useinsertioneffect\",{\"1\":{\"108\":2}}],[\"usecallback\",{\"0\":{\"112\":1,\"225\":1},\"1\":{\"112\":3,\"225\":1}}],[\"usecontext\",{\"1\":{\"105\":2}}],[\"useeffect\",{\"0\":{\"107\":1,\"226\":1,\"227\":1,\"228\":1},\"1\":{\"107\":3,\"108\":1,\"226\":1}}],[\"upuser\",{\"1\":{\"402\":2}}],[\"updated\",{\"1\":{\"240\":2,\"431\":1}}],[\"update\",{\"1\":{\"106\":1,\"107\":2}}],[\"ul\",{\"1\":{\"402\":4,\"415\":3}}],[\"ul>\",{\"1\":{\"92\":1,\"402\":1,\"415\":1}}],[\"uesref\",{\"1\":{\"99\":1}}],[\"umd\",{\"1\":{\"90\":2}}],[\"unshift\",{\"0\":{\"323\":1},\"1\":{\"323\":1}}],[\"unknown\",{\"1\":{\"139\":4,\"141\":1}}],[\"undefined表示变量声明后未进行初始化\",{\"1\":{\"191\":1}}],[\"undefined\",{\"1\":{\"99\":2,\"139\":2,\"171\":1,\"190\":1,\"263\":1,\"276\":1,\"289\":1,\"295\":2,\"356\":1,\"358\":2,\"384\":1}}],[\"undef规则会提示错误\",{\"1\":{\"79\":1}}],[\"unpkg\",{\"1\":{\"90\":2,\"91\":1}}],[\"urlencoded\",{\"1\":{\"396\":1}}],[\"url\",{\"1\":{\"44\":1,\"122\":1,\"133\":1,\"201\":2,\"396\":1,\"399\":3,\"402\":2,\"452\":1}}],[\"了解即可\",{\"1\":{\"422\":1}}],[\"了\",{\"1\":{\"78\":1}}],[\"脚手架中\",{\"1\":{\"77\":1}}],[\"格式\",{\"1\":{\"76\":1,\"452\":1}}],[\"｜\",{\"1\":{\"74\":2,\"140\":1,\"448\":1}}],[\"目前是被打包到\",{\"1\":{\"463\":1}}],[\"目标\",{\"1\":{\"414\":1}}],[\"目标服务器\",{\"1\":{\"133\":1}}],[\"目录结构约定\",{\"1\":{\"93\":1}}],[\"目录路径检查目录下的所有文件\",{\"1\":{\"74\":1}}],[\"目的\",{\"1\":{\"57\":1}}],[\"版本5\",{\"1\":{\"119\":1}}],[\"版本\",{\"1\":{\"73\":1,\"87\":1}}],[\"原数组也会改变\",{\"1\":{\"330\":1}}],[\"原数组上操作\",{\"1\":{\"325\":1}}],[\"原数组不变\",{\"1\":{\"319\":1}}],[\"原型对象都包含一个指向构造函数的指针\",{\"1\":{\"366\":1}}],[\"原型是一种实现面向对象编程的的技术\",{\"1\":{\"207\":1}}],[\"原型链是对象继承特性的实现方式\",{\"1\":{\"207\":1}}],[\"原型链\",{\"0\":{\"207\":1,\"366\":1},\"1\":{\"207\":1}}],[\"原型\",{\"0\":{\"207\":1,\"365\":1},\"1\":{\"207\":1,\"363\":1,\"365\":1}}],[\"原生请求xhr使用对象的abort方法\",{\"1\":{\"203\":1}}],[\"原因\",{\"1\":{\"73\":1}}],[\"原理\",{\"1\":{\"57\":1,\"198\":1,\"287\":1}}],[\"会创建一个开发服务器\",{\"1\":{\"461\":1}}],[\"会消除数据的响应式\",{\"1\":{\"435\":1}}],[\"会消耗大量内存和性能且不容易移除监听\",{\"1\":{\"415\":1}}],[\"会触发\",{\"1\":{\"389\":1}}],[\"会触发组件重新渲染\",{\"1\":{\"97\":1}}],[\"会出现无线调用\",{\"1\":{\"384\":1}}],[\"会调用此函数\",{\"1\":{\"384\":2}}],[\"会调用底层的\",{\"1\":{\"106\":1}}],[\"会保留上次匹配的结果从当前下标继续匹配直到为\",{\"1\":{\"356\":1}}],[\"会解构成以下标为属性\",{\"1\":{\"334\":1}}],[\"会根据下标匹配值\",{\"1\":{\"334\":1}}],[\"会强行改变this\",{\"1\":{\"302\":1}}],[\"会去外层寻找\",{\"1\":{\"300\":1}}],[\"会识别块级和函数作用域\",{\"1\":{\"293\":1}}],[\"会忽略块级作用域\",{\"1\":{\"293\":1,\"295\":1}}],[\"会先判断数据类型是否相等\",{\"1\":{\"284\":1}}],[\"会在函数中定义但不会接收参数\",{\"1\":{\"276\":1}}],[\"会在下次\",{\"1\":{\"107\":1}}],[\"会进行\",{\"1\":{\"405\":1}}],[\"会进行类型转换\",{\"1\":{\"284\":1}}],[\"会进行类型比较\",{\"1\":{\"263\":1}}],[\"会进行缓存且有返回值\",{\"1\":{\"430\":1}}],[\"会进行缓存\",{\"1\":{\"248\":1}}],[\"会进行转码\",{\"1\":{\"84\":1}}],[\"会产生错误\",{\"1\":{\"243\":1}}],[\"会阻塞渲染\",{\"1\":{\"226\":1}}],[\"会被垃圾回收机制回收\",{\"1\":{\"219\":1}}],[\"会被函数的参数props接收\",{\"1\":{\"98\":1}}],[\"会以进行中的状态开始\",{\"1\":{\"218\":1}}],[\"会加入到消息队列中\",{\"1\":{\"217\":1}}],[\"会将需要更新的\",{\"1\":{\"230\":1}}],[\"会将\",{\"1\":{\"207\":1}}],[\"会将能放下的项目移动到这\",{\"1\":{\"185\":1}}],[\"会因为泛型不确定是否有这个属性而报错\",{\"1\":{\"164\":1}}],[\"会导致栈溢出报错\",{\"1\":{\"346\":1}}],[\"会导致性能降低\",{\"1\":{\"222\":1}}],[\"会导致其他变量类型检查失效\",{\"1\":{\"139\":1}}],[\"会导致检查失败\",{\"1\":{\"73\":1}}],[\"会从新向服务器发送请求\",{\"1\":{\"121\":1}}],[\"会继续渲染当前组件\",{\"1\":{\"106\":1}}],[\"会检查\",{\"1\":{\"106\":1}}],[\"会自动转为数值类型\",{\"1\":{\"304\":1}}],[\"会自动在函数内部声明\",{\"1\":{\"276\":1}}],[\"会自动检测值是否符合类型声明\",{\"1\":{\"137\":1}}],[\"会自动读取配置\",{\"1\":{\"133\":1}}],[\"会自动的检查组件中有副作用的代码\",{\"1\":{\"106\":1}}],[\"会自动将\",{\"1\":{\"99\":1}}],[\"会自动将数组的元素遍历渲染页面中\",{\"1\":{\"92\":1}}],[\"会丢失author属性\",{\"1\":{\"97\":1}}],[\"会监听state对象\",{\"1\":{\"97\":1}}],[\"会降低\",{\"1\":{\"73\":1}}],[\"会默认解析文档中多个空白格为单个空白格\",{\"1\":{\"45\":1}}],[\"文档对象模型\",{\"1\":{\"403\":1}}],[\"文件也跟着改变\",{\"1\":{\"482\":1}}],[\"文件来保存哈希值和模块的对应的关系\",{\"1\":{\"482\":1}}],[\"文件找到映射后源代码的出错的位置\",{\"1\":{\"467\":1}}],[\"文件方案\",{\"1\":{\"467\":1}}],[\"文件进行配置\",{\"1\":{\"459\":1}}],[\"文件进行监听编译\",{\"1\":{\"146\":1}}],[\"文件扩展名\",{\"1\":{\"453\":1}}],[\"文件名发送到输出目录\",{\"1\":{\"453\":1}}],[\"文件名\",{\"1\":{\"448\":1,\"453\":1}}],[\"文件名通常使用\",{\"1\":{\"432\":1}}],[\"文件输出路径\",{\"1\":{\"448\":1}}],[\"文件路径\",{\"1\":{\"147\":1}}],[\"文件\",{\"1\":{\"133\":1,\"136\":2,\"148\":1,\"446\":1,\"448\":1,\"456\":1,\"479\":2}}],[\"文件使用语言\",{\"1\":{\"72\":1}}],[\"文本格式显示\",{\"1\":{\"418\":1}}],[\"文本节点\",{\"1\":{\"408\":1}}],[\"文本\",{\"1\":{\"61\":1}}],[\"文本绘制的起始点\",{\"1\":{\"18\":1}}],[\"标记一个对象\",{\"1\":{\"438\":1}}],[\"标准的大于\",{\"1\":{\"284\":1}}],[\"标准的算术运算符就是加减乘除\",{\"1\":{\"280\":1}}],[\"标准的那一套\",{\"1\":{\"72\":1}}],[\"标准规则\",{\"1\":{\"88\":1}}],[\"标签生成样式\",{\"1\":{\"463\":1}}],[\"标签与标签的之间的空格属于文本节点\",{\"1\":{\"409\":1}}],[\"标签里面要执行的代码\",{\"1\":{\"402\":1}}],[\"标签的形式添加到\",{\"1\":{\"451\":1}}],[\"标签的解析\",{\"1\":{\"405\":2}}],[\"标签的\",{\"1\":{\"386\":1,\"402\":1}}],[\"标签创建的路由链接会自动向服务器发送请求重新加载页面\",{\"1\":{\"120\":1}}],[\"标签渲染成真实的\",{\"1\":{\"96\":1}}],[\"标签渲染成真实\",{\"1\":{\"95\":1}}],[\"标签应为小写\",{\"1\":{\"91\":1}}],[\"标签属性传递\",{\"1\":{\"98\":1}}],[\"标签属性\",{\"1\":{\"90\":1}}],[\"标签名称\",{\"1\":{\"90\":1}}],[\"标签中的类名需要使用\",{\"1\":{\"90\":1}}],[\"标签\",{\"1\":{\"1\":1,\"63\":3,\"173\":1,\"204\":1,\"402\":1,\"418\":1,\"443\":1}}],[\"是专门用来做\",{\"1\":{\"483\":1}}],[\"是经过编译可以直接使用的\",{\"1\":{\"471\":1}}],[\"是创建一个新的\",{\"1\":{\"434\":1}}],[\"是使用样式\",{\"1\":{\"418\":1}}],[\"是每调用一次就好执行一次\",{\"1\":{\"417\":1}}],[\"是单向的\",{\"1\":{\"417\":1}}],[\"是javascript中的数据结构\",{\"1\":{\"378\":1}}],[\"是fn作为构造函数的基因库\",{\"1\":{\"365\":1}}],[\"是fn函数创建者的原型\",{\"1\":{\"365\":1}}],[\"是指数\",{\"1\":{\"336\":1}}],[\"是底数\",{\"1\":{\"336\":1}}],[\"是不会统计到长度中的\",{\"1\":{\"303\":1}}],[\"是不可见\",{\"1\":{\"201\":1}}],[\"是表达式\",{\"1\":{\"295\":1}}],[\"是es6的内容\",{\"1\":{\"293\":1}}],[\"是es5的内容\",{\"1\":{\"293\":1}}],[\"是先自加再使用\",{\"1\":{\"280\":1}}],[\"是用于语句执行完成后跳出\",{\"1\":{\"269\":1}}],[\"是可选的\",{\"1\":{\"269\":1}}],[\"是基于原型的动态类型的弱类型脚本解释性语言\",{\"1\":{\"259\":1}}],[\"是分发组件可复用的功能非常灵活的方式\",{\"1\":{\"253\":1}}],[\"是将异步代码改写为同步代码的解决方式\",{\"1\":{\"221\":1}}],[\"是无序的\",{\"1\":{\"219\":1}}],[\"是有缓存的\",{\"1\":{\"417\":1}}],[\"是有序的\",{\"1\":{\"219\":1}}],[\"是有长度限制的\",{\"1\":{\"201\":1}}],[\"是相同的\",{\"1\":{\"219\":1}}],[\"是必须的\",{\"1\":{\"204\":1}}],[\"是以明文的方式传输的\",{\"1\":{\"202\":1}}],[\"是变量声明的默认值\",{\"1\":{\"191\":1}}],[\"是继承属性\",{\"1\":{\"183\":1}}],[\"是非继承属性\",{\"1\":{\"183\":1}}],[\"是所有类型的子类型\",{\"1\":{\"139\":1}}],[\"是一等公民的身份\",{\"1\":{\"369\":1}}],[\"是一条赋值语句\",{\"1\":{\"334\":1}}],[\"是一种字典类型的数据结构\",{\"1\":{\"219\":1}}],[\"是一种集合类型的数据结构\",{\"1\":{\"219\":1}}],[\"是一种类型\",{\"1\":{\"159\":1}}],[\"是一种为变量\",{\"1\":{\"137\":1}}],[\"是一个用来生成源代码和构建后代码一一映射的\",{\"1\":{\"467\":1}}],[\"是一个静态资源打包工具\",{\"1\":{\"446\":1}}],[\"是一个重绘重建的过程\",{\"1\":{\"418\":1}}],[\"是一个构造函数\",{\"1\":{\"375\":1}}],[\"是一个单线程的运行环境\",{\"1\":{\"259\":1}}],[\"是一个销毁重建的过程\",{\"1\":{\"237\":1}}],[\"是一个异步代码\",{\"1\":{\"221\":1}}],[\"是一个简单的赋值过程\",{\"1\":{\"208\":1}}],[\"是一个实例化的过程\",{\"1\":{\"198\":1}}],[\"是一个代理对象\",{\"1\":{\"118\":1}}],[\"是一个钩子函数\",{\"1\":{\"109\":1}}],[\"是一个语法规范检查的包\",{\"1\":{\"68\":1}}],[\"是否自动打开浏览器\",{\"1\":{\"461\":1}}],[\"是否深度监听\",{\"1\":{\"429\":1}}],[\"是否可修改\",{\"1\":{\"384\":1}}],[\"是否可以被访问\",{\"1\":{\"384\":1}}],[\"是否可以被修改\",{\"1\":{\"384\":1}}],[\"是否可枚举\",{\"1\":{\"384\":2}}],[\"是否可更改\",{\"1\":{\"384\":1}}],[\"是否指向同一个内存区域\",{\"1\":{\"284\":1}}],[\"是否等于prototype\",{\"1\":{\"198\":1}}],[\"是否严格检查空值\",{\"1\":{\"151\":1}}],[\"是否严格匹配\",{\"1\":{\"119\":1,\"122\":1}}],[\"是否允许用户缩放\",{\"1\":{\"186\":1}}],[\"是否允许不明确类型的\",{\"1\":{\"151\":1}}],[\"是否允许隐式的\",{\"1\":{\"151\":1}}],[\"是否开启严格检查\",{\"1\":{\"151\":1}}],[\"是否生成编译后对文件\",{\"1\":{\"151\":1}}],[\"是否移除注释\",{\"1\":{\"151\":1}}],[\"是否检查\",{\"1\":{\"151\":1}}],[\"是否对\",{\"1\":{\"151\":1}}],[\"是否离开\",{\"1\":{\"124\":1}}],[\"是否使用\",{\"1\":{\"72\":1}}],[\"是否使用框架\",{\"1\":{\"72\":1}}],[\"是\",{\"1\":{\"117\":1,\"281\":1,\"369\":1}}],[\"是异步的\",{\"1\":{\"97\":1}}],[\"模板中必须有一个根节点\",{\"1\":{\"420\":1}}],[\"模块语法的静态结构特性\",{\"1\":{\"475\":1}}],[\"模块\",{\"1\":{\"473\":1}}],[\"模块以\",{\"1\":{\"451\":1,\"453\":1}}],[\"模块化\",{\"0\":{\"386\":1}}],[\"模块使用机制\",{\"1\":{\"72\":1}}],[\"模版编译\",{\"1\":{\"240\":1}}],[\"模拟类组件中的生命钩子\",{\"1\":{\"107\":1}}],[\"模糊度\",{\"1\":{\"16\":1}}],[\"配合grid\",{\"1\":{\"185\":1}}],[\"配合绝对定位使用\",{\"1\":{\"61\":1}}],[\"配置中设置\",{\"1\":{\"453\":1}}],[\"配置对象\",{\"1\":{\"429\":1}}],[\"配置参数\",{\"1\":{\"384\":1}}],[\"配置反向代理\",{\"1\":{\"204\":1}}],[\"配置各切片对象的\",{\"1\":{\"118\":1}}],[\"配置脚步运行和打包\",{\"1\":{\"93\":1}}],[\"配置\",{\"1\":{\"80\":1,\"82\":1,\"448\":1,\"451\":1,\"452\":2,\"461\":1,\"463\":1,\"464\":1,\"476\":1,\"477\":1}}],[\"配置项变为对象形式\",{\"1\":{\"480\":1}}],[\"配置项\",{\"0\":{\"75\":1}}],[\"配置选项选择\",{\"1\":{\"72\":1}}],[\"配置文件生成后可对整个项目下的\",{\"1\":{\"146\":1}}],[\"配置文件导出使用模式\",{\"0\":{\"77\":1}}],[\"配置文件格式\",{\"0\":{\"76\":1},\"1\":{\"456\":1,\"458\":1}}],[\"配置文件报错\",{\"0\":{\"73\":1}}],[\"配置文件\",{\"0\":{\"71\":1,\"72\":1,\"448\":1,\"462\":1},\"1\":{\"72\":1,\"146\":1}}],[\"扩展babel功能\",{\"1\":{\"459\":1}}],[\"扩展webpack功能\",{\"1\":{\"448\":1}}],[\"扩展\",{\"0\":{\"70\":1}}],[\"中指定兼容的版本\",{\"1\":{\"464\":1}}],[\"中进行配置\",{\"1\":{\"459\":1}}],[\"中定义\",{\"1\":{\"445\":1}}],[\"中必须有个根标签\",{\"1\":{\"442\":1}}],[\"中需要通过\",{\"1\":{\"423\":1}}],[\"中可以没有根标签\",{\"1\":{\"442\":1}}],[\"中可以使用\",{\"1\":{\"91\":1}}],[\"中可直接使用\",{\"1\":{\"423\":1}}],[\"中不能访问\",{\"1\":{\"422\":1}}],[\"中不能访问this\",{\"1\":{\"422\":1}}],[\"中属性和方法\",{\"1\":{\"422\":1}}],[\"中创建或移除元素\",{\"1\":{\"418\":1}}],[\"中直接绑定\",{\"1\":{\"412\":1}}],[\"中找\",{\"1\":{\"368\":1}}],[\"中任意一位字符\",{\"1\":{\"357\":1}}],[\"中唯一需要三个操作数\",{\"1\":{\"281\":1}}],[\"中数值并不是一个准确的值\",{\"1\":{\"263\":1}}],[\"中数据传递是单向的\",{\"1\":{\"254\":1}}],[\"中对应的\",{\"1\":{\"243\":1}}],[\"中新增类型\",{\"1\":{\"139\":1}}],[\"中新增的组件\",{\"1\":{\"128\":1}}],[\"中运行\",{\"1\":{\"136\":1}}],[\"中间件调用\",{\"1\":{\"133\":1}}],[\"中默认开始严格匹配\",{\"1\":{\"127\":1}}],[\"中使用并且只在初始化时执行一次\",{\"1\":{\"422\":1}}],[\"中使用此方法实现了数据的双向绑定\",{\"1\":{\"384\":1}}],[\"中使用\",{\"1\":{\"118\":1,\"357\":1}}],[\"中的配置\",{\"1\":{\"447\":1}}],[\"中的属性绑定监听器\",{\"1\":{\"417\":1}}],[\"中的生命周期比\",{\"1\":{\"240\":1}}],[\"中的以下生命周期\",{\"1\":{\"227\":1}}],[\"中的\",{\"1\":{\"128\":1,\"456\":1,\"458\":1,\"463\":1}}],[\"中的回调函数\",{\"1\":{\"112\":1}}],[\"中的数据\",{\"1\":{\"105\":1,\"118\":1}}],[\"中的事件对象是经过\",{\"1\":{\"91\":1}}],[\"中事件需要使用驼峰命名法onclick\",{\"1\":{\"91\":1}}],[\"中通过属性的方式进行事件绑定\",{\"1\":{\"91\":1}}],[\"中配置运行环境就可以使用全局变量或\",{\"1\":{\"78\":1}}],[\"中配置\",{\"1\":{\"72\":1,\"133\":1}}],[\"中\",{\"0\":{\"70\":1,\"230\":1},\"1\":{\"91\":1,\"97\":1,\"451\":1,\"460\":1}}],[\"中内存管理是自动的\",{\"1\":{\"35\":1}}],[\"包括边框\",{\"1\":{\"406\":1}}],[\"包括0不包括1\",{\"1\":{\"336\":1}}],[\"包装对象\",{\"1\":{\"303\":1}}],[\"包装过的\",{\"1\":{\"91\":1}}],[\"包的使用\",{\"0\":{\"88\":1}}],[\"包\",{\"0\":{\"69\":1},\"1\":{\"69\":1}}],[\"包含行\",{\"1\":{\"467\":1}}],[\"包含padding\",{\"1\":{\"410\":4}}],[\"包含文本节点和元素节点\",{\"1\":{\"409\":1}}],[\"包含文本节点\",{\"1\":{\"409\":1}}],[\"包含下标的元素\",{\"1\":{\"325\":1}}],[\"包含了每行\",{\"1\":{\"467\":1}}],[\"包含了多个值的一个集合或列表\",{\"1\":{\"316\":1}}],[\"包含了传递的所有参数\",{\"1\":{\"98\":1}}],[\"包含\",{\"1\":{\"63\":1,\"325\":1,\"471\":1}}],[\"而实例都包含一个指向原型对象的内部指针\",{\"1\":{\"366\":1}}],[\"而函数会\",{\"1\":{\"295\":1}}],[\"而显示转换需要手动调用一些方法进行转换\",{\"1\":{\"286\":1}}],[\"而\",{\"1\":{\"219\":1,\"243\":1}}],[\"而普通函数的this是指向被调用的主体\",{\"1\":{\"195\":1}}],[\"而apply传递的实参是一个数组\",{\"1\":{\"194\":1}}],[\"而是一个近似值\",{\"1\":{\"263\":1}}],[\"而是将它记录在一个js\",{\"1\":{\"244\":1}}],[\"而是通过style指定一个回调函数\",{\"1\":{\"132\":1}}],[\"而是通过element指定\",{\"1\":{\"128\":1}}],[\"而是直接添加到渲染队列中等待渲染\",{\"1\":{\"106\":1}}],[\"而不是在运行时检查\",{\"1\":{\"68\":1}}],[\"而伪类只能使用\",{\"1\":{\"64\":1}}],[\"而伪类是通过特殊的类名对元素进行选择\",{\"1\":{\"64\":1}}],[\"统一存储到实例对象的\",{\"1\":{\"97\":1}}],[\"统一语法\",{\"1\":{\"68\":1}}],[\"统一团队编码规范\",{\"1\":{\"68\":1}}],[\"内的内容作为一个整体进行匹配\",{\"1\":{\"357\":1}}],[\"内部会将多个标签包裹在一个\",{\"1\":{\"442\":1}}],[\"内部会同过\",{\"1\":{\"423\":1}}],[\"内部基于\",{\"1\":{\"424\":1}}],[\"内部不能重写类名\",{\"1\":{\"220\":1}}],[\"内部默认开启严格模式\",{\"1\":{\"220\":1}}],[\"内部将其转换为\",{\"1\":{\"136\":1}}],[\"内存被占用了\",{\"1\":{\"298\":1}}],[\"内存地址相同直接返回true\",{\"1\":{\"212\":1}}],[\"内存不断堆积\",{\"1\":{\"205\":1}}],[\"内存泄露\",{\"0\":{\"205\":1}}],[\"内存管理\",{\"0\":{\"34\":1}}],[\"内容可以通过\",{\"1\":{\"258\":1}}],[\"内容发生变化则创建新的\",{\"1\":{\"243\":1}}],[\"内容超出元素会被拉伸\",{\"1\":{\"184\":1}}],[\"内容\",{\"1\":{\"177\":1}}],[\"内容实际大小\",{\"1\":{\"177\":1}}],[\"内联\",{\"1\":{\"91\":1}}],[\"内置方法\",{\"0\":{\"374\":1}}],[\"内置规范包\",{\"0\":{\"86\":1}}],[\"内置\",{\"1\":{\"68\":1,\"84\":1,\"88\":2}}],[\"好处\",{\"0\":{\"68\":1},\"1\":{\"68\":1}}],[\"介绍一下\",{\"0\":{\"229\":1}}],[\"介绍\",{\"0\":{\"68\":1}}],[\"介绍下深度优先遍历和广度优先遍历\",{\"0\":{\"32\":1,\"166\":1}}],[\"起步\",{\"0\":{\"67\":1,\"417\":1}}],[\"起始位置\",{\"0\":{\"50\":1},\"1\":{\"347\":1}}],[\"后代组件\",{\"1\":{\"440\":1}}],[\"后续数据改变将不会更新\",{\"1\":{\"418\":1}}],[\"后台设置响应头\",{\"1\":{\"402\":1}}],[\"后一项等于前两项的和\",{\"1\":{\"347\":1}}],[\"后者触发失败并改变promise转态\",{\"1\":{\"218\":1}}],[\"后者没有返回值\",{\"1\":{\"196\":1}}],[\"后者隐藏后占据原来的空间\",{\"1\":{\"183\":1}}],[\"后者是浅层次的\",{\"1\":{\"437\":1}}],[\"后者是存在语法错误时不生成编译后对文件\",{\"1\":{\"151\":1}}],[\"后者是父组件中定义\",{\"1\":{\"111\":1}}],[\"后者是css3\",{\"1\":{\"64\":1}}],[\"后相当于关闭了\",{\"1\":{\"139\":1}}],[\"后面未跟配置信息会读取\",{\"1\":{\"447\":1}}],[\"后面加\",{\"1\":{\"358\":1}}],[\"后面的代码将不再执行\",{\"1\":{\"276\":1}}],[\"后面的循环不再执行\",{\"1\":{\"271\":1}}],[\"后面的特殊字符转为普通字符\",{\"1\":{\"263\":1}}],[\"后面可重新赋值\",{\"1\":{\"260\":1}}],[\"后面通过批量处理更新\",{\"1\":{\"230\":1}}],[\"后面只能赋值为string类型的数据\",{\"1\":{\"138\":1}}],[\"后面只能赋值为number类型的数据\",{\"1\":{\"138\":1}}],[\"后面四个值表示圆角的垂直半径\",{\"1\":{\"53\":1}}],[\"前面使用的智能预设\",{\"1\":{\"483\":1}}],[\"前缀\",{\"1\":{\"432\":1}}],[\"前后端分离开发\",{\"1\":{\"232\":1}}],[\"前端\",{\"1\":{\"223\":1}}],[\"前端事先定义好一个用于获取响应数据的回调函数\",{\"1\":{\"204\":1}}],[\"前者触发成功\",{\"1\":{\"218\":1}}],[\"前者不占据空间\",{\"1\":{\"183\":1}}],[\"前者是深层次的\",{\"1\":{\"437\":1}}],[\"前者是在组件自身中定义\",{\"1\":{\"111\":1}}],[\"前者是css2的声明方式\",{\"1\":{\"64\":1}}],[\"前的四个数值表示圆角的水平半径\",{\"1\":{\"53\":1}}],[\"声明周期\",{\"0\":{\"292\":1}}],[\"声明后不可修改\",{\"1\":{\"260\":1}}],[\"声明关键字\",{\"1\":{\"260\":1}}],[\"声明变量的时候不需要给定类型\",{\"1\":{\"259\":1}}],[\"声明式导航\",{\"1\":{\"246\":1}}],[\"声明会进行变量提升\",{\"1\":{\"220\":1}}],[\"声明泛型\",{\"1\":{\"164\":1}}],[\"声明\",{\"1\":{\"64\":1,\"275\":1,\"276\":1}}],[\"伪类\",{\"1\":{\"173\":1}}],[\"伪类可以同时使用多个\",{\"1\":{\"64\":1}}],[\"伪类的区别\",{\"0\":{\"64\":1}}],[\"伪元素选择器\",{\"1\":{\"173\":1}}],[\"伪元素只能同时使用一个\",{\"1\":{\"64\":1}}],[\"伪元素使用\",{\"1\":{\"64\":1}}],[\"伪元素是创建了一个新元素\",{\"1\":{\"64\":1}}],[\"伪元素\",{\"0\":{\"64\":1},\"1\":{\"60\":1}}],[\"~\",{\"1\":{\"63\":1,\"398\":5}}],[\"^dw\",{\"1\":{\"357\":1}}],[\"^prefix\",{\"1\":{\"133\":1}}],[\"^\",{\"1\":{\"63\":1,\"133\":1,\"357\":2}}],[\"开发配置文件\",{\"1\":{\"462\":1}}],[\"开发没有输出文件\",{\"1\":{\"462\":1}}],[\"开发服务器\",{\"0\":{\"461\":1}}],[\"开发模式做的事\",{\"0\":{\"449\":1}}],[\"开发模式\",{\"1\":{\"448\":1,\"467\":1}}],[\"开发中使用的第三方库和插件\",{\"1\":{\"471\":1}}],[\"开发中应当避免直接访问和修改\",{\"1\":{\"365\":1}}],[\"开发中不用直接访问和修改\",{\"1\":{\"363\":1}}],[\"开启缓存\",{\"1\":{\"472\":1}}],[\"开启缓存可以保留之前检查和编译的结果\",{\"1\":{\"472\":1}}],[\"开启babel缓存\",{\"1\":{\"472\":1,\"476\":1}}],[\"开启hmr\",{\"1\":{\"469\":1}}],[\"开启深度监听\",{\"1\":{\"417\":1}}],[\"开启gzip压缩\",{\"1\":{\"250\":1}}],[\"开启后以下4个都为\",{\"1\":{\"151\":1}}],[\"开头以关键字\",{\"1\":{\"275\":1}}],[\"开头时\",{\"1\":{\"168\":1}}],[\"开头的\",{\"1\":{\"63\":1}}],[\"开始的\",{\"1\":{\"403\":1}}],[\"开始删除后面全部元素\",{\"1\":{\"325\":1}}],[\"开始依次递增\",{\"1\":{\"139\":1}}],[\"开始路径\",{\"1\":{\"3\":1}}],[\"关闭缓存文件压缩\",{\"1\":{\"472\":1,\"476\":1}}],[\"关于文档对象模型所有的操作\",{\"1\":{\"403\":1}}],[\"关系选择器\",{\"1\":{\"173\":1}}],[\"关键字声明在\",{\"1\":{\"394\":1}}],[\"关键字声明在函数声明前面\",{\"1\":{\"394\":1}}],[\"关键字\",{\"1\":{\"367\":1,\"371\":1}}],[\"关键字执行的函数\",{\"1\":{\"362\":1}}],[\"关键字调用\",{\"1\":{\"220\":1}}],[\"关键字implements\",{\"1\":{\"161\":1}}],[\"关键字extends\",{\"1\":{\"161\":1}}],[\"关键字形式\",{\"1\":{\"62\":1}}],[\"关联\",{\"0\":{\"52\":1}}],[\"粘性定位\",{\"1\":{\"61\":1}}],[\"相关配置\",{\"1\":{\"462\":2}}],[\"相应地\",{\"1\":{\"366\":1}}],[\"相反\",{\"1\":{\"328\":1}}],[\"相当于componentdidupdate\",{\"1\":{\"107\":1}}],[\"相当于componentdidmount\",{\"1\":{\"107\":1}}],[\"相对于\",{\"1\":{\"396\":1}}],[\"相对于浏览器窗口\",{\"1\":{\"179\":1}}],[\"相对于最近的父级进行定位\",{\"1\":{\"179\":1}}],[\"相对于componentdidmount\",{\"1\":{\"107\":1}}],[\"相对于定位元素\",{\"1\":{\"61\":1}}],[\"相对于自身位置\",{\"1\":{\"61\":1}}],[\"相对于窗口\",{\"1\":{\"61\":1}}],[\"相对定位\",{\"1\":{\"61\":1,\"179\":1}}],[\"相邻块元素垂直\",{\"0\":{\"42\":1}}],[\"固定长度的数组\",{\"1\":{\"139\":1}}],[\"固定定位\",{\"1\":{\"61\":1}}],[\"固定位置\",{\"1\":{\"52\":1}}],[\"层级关系\",{\"1\":{\"61\":1,\"291\":1}}],[\"z\",{\"1\":{\"61\":1,\"357\":2}}],[\"√\",{\"1\":{\"60\":1}}],[\"×\",{\"1\":{\"60\":4,\"316\":1}}],[\"在编译时对每个文件都插入了辅助代码\",{\"1\":{\"476\":1}}],[\"在编译时检查语法\",{\"1\":{\"68\":1}}],[\"在处理时可以排除掉\",{\"1\":{\"471\":1}}],[\"在处理\",{\"1\":{\"450\":1,\"451\":1}}],[\"在处理成功\",{\"1\":{\"221\":1}}],[\"在根目录下创建\",{\"1\":{\"448\":1}}],[\"在根目录下新建\",{\"1\":{\"133\":1}}],[\"在结构\",{\"1\":{\"435\":1}}],[\"在标签中使用的自定义属性不能通过\",{\"1\":{\"387\":1}}],[\"在正则中可以保证调用的统一\",{\"1\":{\"374\":1}}],[\"在原型中添加方法\",{\"1\":{\"370\":1}}],[\"在创建实例对象时函数原型prototype会传递给实例对象的原型\",{\"1\":{\"365\":1}}],[\"在new的过程中会将this指向这个实例对象\",{\"1\":{\"364\":1}}],[\"在量词后面加\",{\"1\":{\"358\":1}}],[\"在里面使用\",{\"1\":{\"357\":1}}],[\"在下次渲染时继续执行\",{\"1\":{\"341\":1}}],[\"在读取时结构\",{\"1\":{\"334\":1}}],[\"在执行过程中遇到\",{\"1\":{\"328\":1}}],[\"在声明的时候就已经赋值\",{\"1\":{\"295\":1}}],[\"在声明之前访问会出现暂时性死区\",{\"1\":{\"220\":1}}],[\"在当前作用域最前面声明所有变量\",{\"1\":{\"295\":1}}],[\"在这之前是锁死的状态\",{\"1\":{\"295\":1}}],[\"在这之前是暂时性死区\",{\"1\":{\"206\":1}}],[\"在这之前也会先调用\",{\"1\":{\"288\":1}}],[\"在你不能确定优先级时\",{\"1\":{\"285\":1}}],[\"在形参最后面\",{\"1\":{\"276\":1}}],[\"在函数声明或表达式中通过变量进行接收\",{\"1\":{\"276\":1}}],[\"在函数组件中\",{\"1\":{\"98\":1}}],[\"在进行转数值时首先会尝试调用\",{\"1\":{\"288\":1}}],[\"在进行一些函数赋值的时候注意区分函数执行\",{\"1\":{\"275\":1}}],[\"在进行代码检查时\",{\"1\":{\"84\":1}}],[\"在整数上进行处理\",{\"1\":{\"263\":1}}],[\"在混入时可能导致变量冲突\",{\"1\":{\"253\":1}}],[\"在服务端生成dom\",{\"1\":{\"249\":1}}],[\"在服务端操作网页文件\",{\"1\":{\"249\":1}}],[\"在客户端生成dom\",{\"1\":{\"249\":1}}],[\"在地址栏中会有一个\",{\"1\":{\"245\":1}}],[\"在获取属性值的时候会先判断是否有target标识\",{\"1\":{\"234\":1}}],[\"在用户与应用程序时动态更新局部模块\",{\"1\":{\"232\":1}}],[\"在调用栈清空的时候立即执行\",{\"1\":{\"217\":1}}],[\"在调用栈清空的时候执行\",{\"1\":{\"217\":1}}],[\"在调用空的\",{\"1\":{\"97\":1}}],[\"在浏览器关闭时会自动删除\",{\"1\":{\"216\":1}}],[\"在各自作用域最前面声明所有变量\",{\"1\":{\"206\":1}}],[\"在预编译阶段会把变量提升到当前作用域的最前面\",{\"1\":{\"199\":1}}],[\"在转换字符串时会过滤掉值为undefined的属性\",{\"1\":{\"192\":1}}],[\"在浮动元素后添加一个块级元素\",{\"1\":{\"180\":1}}],[\"在浮动元素后面添加一个空标签并设置\",{\"1\":{\"60\":1}}],[\"在定义接口时\",{\"1\":{\"164\":1}}],[\"在定义函数\",{\"1\":{\"164\":1}}],[\"在使用useeffect修改样式时会出现闪烁的情况\",{\"1\":{\"108\":1}}],[\"在使用第三方包时\",{\"1\":{\"80\":1}}],[\"在组件渲染完成后异步执行\",{\"1\":{\"226\":1}}],[\"在组件渲染完成后执行\",{\"1\":{\"107\":1}}],[\"在组件中使用\",{\"1\":{\"118\":1}}],[\"在组件每次渲染的时候都会创建一个新的对象\",{\"1\":{\"99\":1}}],[\"在某些情况下\",{\"1\":{\"106\":1}}],[\"在开发模式下\",{\"1\":{\"106\":1}}],[\"在开发中常常需要用到运行环境中的全局变量或\",{\"1\":{\"78\":1}}],[\"在更新过程中会执行两次\",{\"1\":{\"99\":1}}],[\"在状态更新完毕\",{\"1\":{\"97\":1}}],[\"在检查时使用的规范包\",{\"1\":{\"80\":1}}],[\"在文件中访问未定义的变量时\",{\"1\":{\"79\":1}}],[\"在\",{\"1\":{\"78\":2,\"91\":1,\"97\":1,\"107\":1,\"108\":2,\"118\":2,\"133\":1,\"169\":1,\"198\":1,\"221\":1,\"226\":1,\"412\":1,\"442\":1,\"459\":1,\"464\":1}}],[\"在后面检查代码规范时\",{\"1\":{\"73\":1}}],[\"在线教程\",{\"0\":{\"65\":1}}],[\"在没使用闭合路径的情况下\",{\"1\":{\"3\":1}}],[\"高级优化配置\",{\"0\":{\"465\":1}}],[\"高阶组件\",{\"1\":{\"110\":1}}],[\"高度塌陷\",{\"1\":{\"59\":1}}],[\"高为\",{\"1\":{\"6\":1}}],[\"解冻不了\",{\"1\":{\"385\":1}}],[\"解构的元素不能单独存在\",{\"1\":{\"333\":1}}],[\"解构\",{\"0\":{\"333\":1},\"1\":{\"192\":1}}],[\"解析\",{\"1\":{\"418\":1}}],[\"解析字符串为指定基数\",{\"1\":{\"168\":1}}],[\"解析代码时使用的\",{\"1\":{\"81\":1}}],[\"解析空白格\",{\"1\":{\"58\":1}}],[\"解决了这问题\",{\"1\":{\"469\":1}}],[\"解决了回调地狱\",{\"1\":{\"222\":1}}],[\"解决每次点击都进行事件注册的问题\",{\"1\":{\"413\":1}}],[\"解决跨域的问题\",{\"0\":{\"402\":1}}],[\"解决办法\",{\"1\":{\"346\":1}}],[\"解决回调地狱的方法\",{\"0\":{\"344\":1}}],[\"解决误差\",{\"1\":{\"263\":1}}],[\"解决外边距合并\",{\"1\":{\"176\":1}}],[\"解决类名冲突问题\",{\"1\":{\"103\":1}}],[\"解决方法\",{\"1\":{\"96\":1,\"121\":1,\"254\":1,\"426\":1}}],[\"解决方案\",{\"1\":{\"41\":1,\"45\":1,\"73\":1,\"184\":1,\"298\":1}}],[\"解决高度塌陷\",{\"0\":{\"60\":1}}],[\"脱离文档流\",{\"1\":{\"57\":1,\"61\":1}}],[\"浮动会导致高度塌陷\",{\"1\":{\"180\":1}}],[\"浮动带来的问题\",{\"0\":{\"59\":1}}],[\"浮动层级1\",{\"1\":{\"57\":1}}],[\"浮动\",{\"0\":{\"57\":1},\"1\":{\"61\":1,\"175\":1}}],[\"定时器属于异步代码\",{\"1\":{\"338\":1}}],[\"定时器\",{\"0\":{\"338\":1}}],[\"定时器的清除\",{\"1\":{\"240\":1}}],[\"定义\",{\"1\":{\"417\":1}}],[\"定义或修改多个属性\",{\"1\":{\"384\":1}}],[\"定义的响应式对象转换为普通对象并返回\",{\"1\":{\"438\":1}}],[\"定义的响应式对象时\",{\"1\":{\"435\":1}}],[\"定义的响应式是深层次的\",{\"1\":{\"424\":1}}],[\"定义的对象\",{\"1\":{\"429\":1}}],[\"定义的对象时\",{\"1\":{\"429\":1}}],[\"定义的数据无法正确的获取\",{\"1\":{\"429\":1}}],[\"定义的是一个引用类型的数据\",{\"1\":{\"423\":1}}],[\"定义的变量不属于顶层对象\",{\"1\":{\"302\":1}}],[\"定义的类型赋值时不会进行类型检查\",{\"1\":{\"139\":1}}],[\"定义数据状态\",{\"1\":{\"248\":1}}],[\"定义一个空的新数组\",{\"1\":{\"209\":1}}],[\"定义函数类型的接口\",{\"1\":{\"162\":1}}],[\"定义函数类型\",{\"1\":{\"139\":1}}],[\"定义操作\",{\"1\":{\"118\":1}}],[\"定义类的方式继承react\",{\"1\":{\"96\":1}}],[\"定义全局变量\",{\"1\":{\"79\":1}}],[\"定义渐变的大小\",{\"1\":{\"56\":1}}],[\"定位后的校验\",{\"1\":{\"258\":1}}],[\"定位\",{\"0\":{\"49\":1,\"61\":1,\"179\":1},\"1\":{\"61\":1,\"175\":1}}],[\"百分比形式\",{\"1\":{\"62\":1}}],[\"百分比\",{\"1\":{\"55\":1}}],[\"9\",{\"1\":{\"170\":1,\"263\":1,\"288\":2,\"311\":1,\"312\":2,\"330\":1,\"336\":1,\"356\":1,\"357\":2}}],[\"90deg\",{\"1\":{\"55\":1}}],[\"9999\",{\"1\":{\"35\":1}}],[\"渐变开始位置\",{\"1\":{\"55\":1}}],[\"渐变方向\",{\"1\":{\"55\":1}}],[\"渐变色\",{\"0\":{\"54\":1}}],[\"对所有代码进行分割\",{\"1\":{\"480\":1}}],[\"对这部分代码进行了多次打包\",{\"1\":{\"480\":1}}],[\"对这个对象进行求值\",{\"1\":{\"303\":1}}],[\"对图片进行压缩\",{\"1\":{\"477\":1}}],[\"对\",{\"1\":{\"465\":1,\"473\":1}}],[\"对代理对象操作是才会触发视图的更新\",{\"1\":{\"424\":1}}],[\"对对象直接定义个新的属性\",{\"1\":{\"384\":1}}],[\"对边比邻边\",{\"1\":{\"337\":1}}],[\"对边比斜边\",{\"1\":{\"337\":1}}],[\"对实际数组或对象使用时\",{\"1\":{\"333\":1}}],[\"对数值进行累加\",{\"1\":{\"331\":1}}],[\"对数组每一项进行操作\",{\"1\":{\"330\":1}}],[\"对数组进行排序\",{\"1\":{\"332\":1}}],[\"对数组进行增\",{\"1\":{\"325\":1}}],[\"对数组进行扁平化\",{\"1\":{\"320\":1}}],[\"对应的是内存中的地址\",{\"1\":{\"330\":1}}],[\"对原数组进行操作\",{\"1\":{\"321\":1,\"332\":1}}],[\"对变量进行提升\",{\"1\":{\"295\":1}}],[\"对空字符串或\",{\"1\":{\"288\":1}}],[\"对两个操作数或表达式进行求值并返回最终操作数或表达式的值\",{\"1\":{\"282\":1}}],[\"对表达式\",{\"1\":{\"269\":1}}],[\"对各渠道下的用户活跃度\",{\"1\":{\"257\":1}}],[\"对路由进行映射\",{\"1\":{\"119\":1}}],[\"对一个函数进行缓存\",{\"1\":{\"111\":1}}],[\"对象使其变为响应式\",{\"1\":{\"435\":1}}],[\"对象出来\",{\"1\":{\"434\":1}}],[\"对象方式\",{\"1\":{\"418\":1}}],[\"对象方法\",{\"0\":{\"380\":1}}],[\"对象绑定形式\",{\"1\":{\"418\":1}}],[\"对象已经配置了请求方式和地址\",{\"1\":{\"397\":1}}],[\"对象下的某个属性时必须使用函数返回该属性\",{\"1\":{\"429\":1}}],[\"对象下的\",{\"1\":{\"397\":1,\"398\":1}}],[\"对象下的一个文档对象\",{\"1\":{\"369\":1}}],[\"对象执行完成后才触发成功回调\",{\"1\":{\"392\":1}}],[\"对象或者基本类型\",{\"1\":{\"378\":1}}],[\"对象保存键值对\",{\"1\":{\"378\":1}}],[\"对象进行解构\",{\"1\":{\"375\":1}}],[\"对象是由\",{\"1\":{\"369\":1}}],[\"对象的原型是\",{\"1\":{\"365\":1}}],[\"对象的解构\",{\"0\":{\"334\":1}}],[\"对象之间存在引用关系\",{\"1\":{\"350\":1}}],[\"对象之间的内存地址不存在引用关系\",{\"1\":{\"349\":1}}],[\"对象解构\",{\"1\":{\"334\":1}}],[\"对象一般是不能转数值的\",{\"1\":{\"288\":1}}],[\"对象转数值\",{\"1\":{\"288\":1}}],[\"对象转字符串的本质是调用\",{\"1\":{\"287\":1}}],[\"对象调用方法首先会调用自身的\",{\"1\":{\"287\":1}}],[\"对象和数组\",{\"1\":{\"287\":1}}],[\"对象数据类型判断时判断是内存地址\",{\"1\":{\"284\":1}}],[\"对象中的属性和方法可以直接在模板中使用\",{\"1\":{\"422\":1}}],[\"对象中\",{\"1\":{\"244\":1}}],[\"对象实现接口\",{\"0\":{\"160\":1}}],[\"对象并返回\",{\"1\":{\"118\":1}}],[\"对象去代替\",{\"1\":{\"99\":1}}],[\"对象设置到current属性上\",{\"1\":{\"99\":1}}],[\"对象\",{\"0\":{\"301\":1},\"1\":{\"99\":1,\"118\":1,\"139\":1,\"210\":1,\"264\":1,\"265\":1,\"273\":1,\"301\":1,\"375\":1,\"384\":1,\"388\":2,\"397\":1,\"399\":2,\"417\":2,\"422\":1,\"426\":1,\"435\":1,\"441\":1}}],[\"对象形式state\",{\"1\":{\"97\":1}}],[\"对比\",{\"0\":{\"58\":1}}],[\"对角线\",{\"1\":{\"53\":2}}],[\"对齐方式\",{\"1\":{\"18\":1}}],[\"右\",{\"1\":{\"381\":1}}],[\"右下\",{\"1\":{\"53\":1}}],[\"右上左下\",{\"1\":{\"53\":2}}],[\"剪裁\",{\"0\":{\"51\":1}}],[\"默认会将所有\",{\"1\":{\"479\":1}}],[\"默认会将所有对板块重新打包编译\",{\"1\":{\"469\":1}}],[\"默认已经开启\",{\"1\":{\"475\":1}}],[\"默认不具有\",{\"1\":{\"469\":1}}],[\"默认情况下\",{\"1\":{\"453\":1}}],[\"默认情况下指向window\",{\"1\":{\"195\":1}}],[\"默认小于8kb\",{\"1\":{\"452\":1}}],[\"默认get获取值\",{\"1\":{\"428\":1}}],[\"默认只有\",{\"1\":{\"417\":1}}],[\"默认进行贪婪模式匹配\",{\"1\":{\"358\":1}}],[\"默认匹配方式\",{\"1\":{\"358\":1}}],[\"默认window\",{\"1\":{\"326\":1}}],[\"默认逗号\",{\"1\":{\"322\":1}}],[\"默认指向\",{\"1\":{\"301\":2}}],[\"默认返回\",{\"1\":{\"276\":1}}],[\"默认修饰符\",{\"1\":{\"154\":1}}],[\"默认false\",{\"1\":{\"151\":1,\"384\":3}}],[\"默认值\",{\"1\":{\"147\":1,\"148\":1,\"179\":1}}],[\"默认使用\",{\"1\":{\"125\":1,\"131\":1}}],[\"默认窗口\",{\"1\":{\"61\":1}}],[\"默认为设备的宽度\",{\"1\":{\"186\":1}}],[\"默认为1等比缩小\",{\"1\":{\"184\":1}}],[\"默认为0\",{\"1\":{\"184\":1}}],[\"默认为\",{\"1\":{\"61\":1,\"384\":1}}],[\"默认从上到下\",{\"1\":{\"55\":1}}],[\"默认\",{\"1\":{\"50\":1,\"185\":1,\"417\":1,\"471\":1,\"472\":1}}],[\"默认1px\",{\"1\":{\"15\":1}}],[\"平铺整个盒子\",{\"1\":{\"47\":1}}],[\"平铺\",{\"0\":{\"47\":1}}],[\"平角\",{\"1\":{\"15\":2}}],[\"背景\",{\"0\":{\"46\":1}}],[\"行内块元素\",{\"1\":{\"175\":1}}],[\"行内块级\",{\"1\":{\"45\":1}}],[\"行内样式\",{\"1\":{\"173\":1}}],[\"行内样式不再使用activestyle\",{\"1\":{\"132\":1}}],[\"行内\",{\"1\":{\"45\":1}}],[\"行内元素会支持空白格解析\",{\"1\":{\"45\":1}}],[\"行内元素特点\",{\"0\":{\"43\":1}}],[\"块级作用域\",{\"1\":{\"291\":1}}],[\"块级元素格式化上下文\",{\"1\":{\"60\":1}}],[\"块级\",{\"1\":{\"45\":1,\"61\":1,\"199\":1,\"291\":1}}],[\"并接收成功后传递过来的数据\",{\"1\":{\"388\":1}}],[\"并反该唯一任务id\",{\"1\":{\"339\":1}}],[\"并进行\",{\"1\":{\"269\":1}}],[\"并把所有的路由信息配置成一个路由表\",{\"1\":{\"255\":1}}],[\"并创建收集依赖的dep对象\",{\"1\":{\"234\":1}}],[\"并保证返回值的引用地址不变\",{\"1\":{\"225\":1}}],[\"并在完成时调用相应的回调函数\",{\"1\":{\"218\":1}}],[\"并返回一个\",{\"1\":{\"439\":1}}],[\"并返回一个对象\",{\"1\":{\"435\":1}}],[\"并返回一个包装过后具有缓存功能的新组件\",{\"1\":{\"110\":1}}],[\"并返回此对象\",{\"1\":{\"384\":1}}],[\"并返回匹配信息\",{\"1\":{\"129\":1}}],[\"并没有发送服务器请求\",{\"1\":{\"121\":1}}],[\"并将回调函数以参数的形式拼接到请求地址中\",{\"1\":{\"402\":1}}],[\"并将结果作为新的初始值\",{\"1\":{\"331\":1}}],[\"并将\",{\"1\":{\"118\":1}}],[\"并将数据作为参数进行传递\",{\"1\":{\"105\":1}}],[\"并调用实例上的render方法\",{\"1\":{\"96\":1}}],[\"并且源对象中的数据也会改变\",{\"1\":{\"424\":1}}],[\"并且是在props中接收的所有数据\",{\"1\":{\"422\":1}}],[\"并且能够记住键的原始插入顺序\",{\"1\":{\"378\":1}}],[\"并且这个容器的布局与这个容器外的布局互不影响\",{\"1\":{\"174\":1}}],[\"并且这次渲染不会进行任何操作\",{\"1\":{\"106\":1}}],[\"并且需要指定类型为type=\",{\"1\":{\"91\":1}}],[\"并且\",{\"1\":{\"63\":1,\"434\":1}}],[\"并排展示\",{\"1\":{\"57\":1}}],[\"并排展示或上一个行内元素结束标签与下一个行内元素开始标签并排\",{\"1\":{\"45\":1}}],[\"并通过\",{\"1\":{\"1\":1}}],[\"指的是这个页面中所有的标签元素的整体\",{\"1\":{\"403\":1}}],[\"指代的是参数所属的函数\",{\"1\":{\"300\":1}}],[\"指向实例对象\",{\"1\":{\"363\":1}}],[\"指向的方法进行访问\",{\"1\":{\"326\":1}}],[\"指向谁\",{\"1\":{\"301\":1}}],[\"指向调用函数的主体对象\",{\"1\":{\"301\":1}}],[\"指向\",{\"0\":{\"302\":1},\"1\":{\"264\":1,\"388\":1}}],[\"指向一个不存在的空间或空的对象\",{\"1\":{\"263\":1}}],[\"指向这个实例对象\",{\"1\":{\"198\":1}}],[\"指标记录和导出等功能\",{\"1\":{\"257\":1}}],[\"指标管理\",{\"1\":{\"257\":1}}],[\"指令\",{\"1\":{\"109\":1}}],[\"指定corejs版本\",{\"1\":{\"483\":1}}],[\"指定缓存文件及目录\",{\"1\":{\"472\":1}}],[\"指定输出目录\",{\"1\":{\"463\":1}}],[\"指定输出文件目录及名称\",{\"1\":{\"448\":1}}],[\"指定监听端口号\",{\"1\":{\"461\":1}}],[\"指定检查的目录\",{\"1\":{\"457\":1}}],[\"指定小于多少kb的图片转为\",{\"1\":{\"452\":1}}],[\"指定模式为\",{\"1\":{\"462\":2}}],[\"指定模式\",{\"1\":{\"447\":1}}],[\"指定字符结尾\",{\"1\":{\"357\":1}}],[\"指定字符开头\",{\"1\":{\"357\":1}}],[\"指定字体名称\",{\"1\":{\"44\":1}}],[\"指定位置查询\",{\"1\":{\"309\":1}}],[\"指定项目的区域位置\",{\"1\":{\"185\":1}}],[\"指定泛型约束\",{\"1\":{\"164\":1}}],[\"指定编译后文件所在目录\",{\"1\":{\"151\":1}}],[\"指定编译的文件列表\",{\"1\":{\"150\":1}}],[\"指定代码运行时所包含的库\",{\"1\":{\"151\":1}}],[\"指定需要使用的模块规范\",{\"1\":{\"151\":1}}],[\"指定需要编译的\",{\"1\":{\"147\":1}}],[\"指定类型后\",{\"1\":{\"137\":1}}],[\"指定一个命名空间\",{\"1\":{\"118\":1}}],[\"指定\",{\"1\":{\"61\":1,\"81\":1,\"119\":1,\"128\":1,\"151\":1}}],[\"指定父元素高度\",{\"1\":{\"60\":1}}],[\"指定渐变的形状\",{\"1\":{\"56\":1}}],[\"指定元素类型为块级元素\",{\"1\":{\"45\":1}}],[\"指针\",{\"1\":{\"28\":1}}],[\"由最基本的语句组成\",{\"1\":{\"267\":1}}],[\"由最大的\",{\"1\":{\"42\":1}}],[\"由上得出转十进制通用公式\",{\"1\":{\"263\":1}}],[\"由于表格的列太多\",{\"1\":{\"258\":1}}],[\"由调用栈\",{\"1\":{\"217\":1}}],[\"由内容撑开\",{\"1\":{\"43\":1}}],[\"合并到this对象中\",{\"1\":{\"381\":1}}],[\"合并对象\",{\"1\":{\"381\":1}}],[\"合并\",{\"0\":{\"42\":1}}],[\"合成\",{\"0\":{\"20\":1}}],[\"兄弟组件\",{\"1\":{\"242\":1}}],[\"兄弟组件通信\",{\"1\":{\"98\":1}}],[\"兄弟\",{\"0\":{\"42\":1}}],[\"子节点\",{\"1\":{\"409\":1}}],[\"子向父\",{\"1\":{\"242\":1}}],[\"子组件能修改父组件的数据吗\",{\"0\":{\"254\":1}}],[\"子组件\",{\"1\":{\"241\":1}}],[\"子类可重写父类中的方法\",{\"1\":{\"197\":1}}],[\"子类可继承父类的属性和方法\",{\"1\":{\"197\":1}}],[\"子类会覆盖掉父类中的方法\",{\"1\":{\"155\":1}}],[\"子中边距最大的一个\",{\"1\":{\"41\":1}}],[\"子\",{\"0\":{\"41\":1},\"1\":{\"440\":1}}],[\"父节点\",{\"1\":{\"409\":1}}],[\"父元素节点\",{\"1\":{\"409\":1}}],[\"父级状态的更新会向下流到的子组件中\",{\"1\":{\"254\":1}}],[\"父级元素设置overflow\",{\"1\":{\"180\":1}}],[\"父向子\",{\"1\":{\"242\":1}}],[\"父组件向子组件传递的数据\",{\"1\":{\"422\":1}}],[\"父组件\",{\"1\":{\"241\":2,\"440\":1}}],[\"父子组件的挂载顺序\",{\"0\":{\"241\":1}}],[\"父子通信\",{\"1\":{\"98\":1}}],[\"父类型的引用指向子类型的对象\",{\"1\":{\"156\":1}}],[\"父相子绝\",{\"1\":{\"61\":1}}],[\"父\",{\"0\":{\"41\":1}}],[\"嵌套块元素\",{\"0\":{\"41\":1}}],[\"工具\",{\"0\":{\"37\":1}}],[\"不建议混合使用\",{\"1\":{\"422\":1}}],[\"不建议使用\",{\"1\":{\"139\":1}}],[\"不包含boder\",{\"1\":{\"410\":1}}],[\"不包含当前下标位置的字符\",{\"1\":{\"311\":1,\"312\":1}}],[\"不进行\",{\"1\":{\"405\":1}}],[\"不安全\",{\"1\":{\"396\":1}}],[\"不要在get和set方法中访问自己的属性\",{\"1\":{\"384\":1}}],[\"不要return\",{\"1\":{\"239\":1}}],[\"不推荐\",{\"1\":{\"365\":1}}],[\"不区分大小写\",{\"1\":{\"355\":1}}],[\"不必考虑具体细节\",{\"1\":{\"346\":1}}],[\"不必要的提交\",{\"1\":{\"68\":1}}],[\"不传参返回全部内容\",{\"1\":{\"312\":1}}],[\"不传\",{\"1\":{\"304\":1}}],[\"不传入或写null会指向window\",{\"1\":{\"302\":3}}],[\"不是一个数字或算不出的一个值\",{\"1\":{\"263\":1}}],[\"不是字符串\",{\"1\":{\"91\":1}}],[\"不过我们不推荐这么做\",{\"1\":{\"261\":1}}],[\"不常用的库通过cdn的方式引入\",{\"1\":{\"250\":1}}],[\"不利于seo优化\",{\"1\":{\"249\":1}}],[\"不利于维护\",{\"1\":{\"113\":1}}],[\"不管是否渲染都会遍历整个列表\",{\"1\":{\"238\":1}}],[\"不主动删除\",{\"1\":{\"216\":1}}],[\"不存在就push进去\",{\"1\":{\"209\":1}}],[\"不存在则相对于html定位\",{\"1\":{\"179\":1}}],[\"不处理\",{\"1\":{\"171\":1}}],[\"不考虑具体的值\",{\"1\":{\"159\":1}}],[\"不受\",{\"1\":{\"100\":1}}],[\"不会处理在线链接\",{\"1\":{\"477\":1}}],[\"不会处理引用类型的响应式\",{\"1\":{\"436\":1}}],[\"不会传递到实例中\",{\"1\":{\"371\":1}}],[\"不会深层处理\",{\"1\":{\"320\":1}}],[\"不会形成变量污染\",{\"1\":{\"298\":1}}],[\"不会造成变量污染\",{\"1\":{\"297\":1}}],[\"不会跳出函数作用域\",{\"1\":{\"295\":1}}],[\"不会将函数体提升\",{\"1\":{\"295\":1}}],[\"不会将函数变为异步函数\",{\"1\":{\"221\":1}}],[\"不会变量提升\",{\"1\":{\"295\":1}}],[\"不会进行类型转换\",{\"1\":{\"284\":1}}],[\"不会进行标签渲染\",{\"1\":{\"104\":1}}],[\"不会对类型进行比较\",{\"1\":{\"263\":1}}],[\"不会重新加载页面\",{\"1\":{\"245\":1}}],[\"不会频繁的刷新页面\",{\"1\":{\"232\":1}}],[\"不会立即更新\",{\"1\":{\"230\":1}}],[\"不会阻塞浏览器渲染\",{\"1\":{\"226\":1}}],[\"不会在组件重新渲染时重新创建\",{\"1\":{\"112\":1}}],[\"不会触发popstate事件\",{\"1\":{\"245\":1}}],[\"不会触发子组件的重新渲染\",{\"1\":{\"106\":1}}],[\"不会触发组件重新渲染\",{\"1\":{\"97\":1}}],[\"不会检查\",{\"1\":{\"106\":1}}],[\"不会被\",{\"1\":{\"93\":1}}],[\"不需要加引号\",{\"1\":{\"91\":1}}],[\"不同的是\",{\"1\":{\"253\":1}}],[\"不同类型的对象针对相同方法产生的不同行为\",{\"1\":{\"156\":1}}],[\"不同\",{\"1\":{\"91\":1}}],[\"不脱离文档流\",{\"1\":{\"61\":1}}],[\"不占据空间\",{\"1\":{\"61\":2}}],[\"不平铺\",{\"1\":{\"47\":1}}],[\"不支持多行文本\",{\"1\":{\"188\":1}}],[\"不支持\",{\"1\":{\"43\":1}}],[\"不能处理\",{\"1\":{\"455\":1}}],[\"不能用\",{\"1\":{\"371\":1}}],[\"不能是\",{\"1\":{\"340\":1}}],[\"不能是任何值\",{\"1\":{\"139\":1}}],[\"不能对外延生\",{\"1\":{\"291\":1}}],[\"不能直接变更状态\",{\"1\":{\"248\":1}}],[\"不能极大的复用\",{\"1\":{\"243\":1}}],[\"不能捕获错误和\",{\"1\":{\"222\":1}}],[\"不能被遍历\",{\"1\":{\"219\":2}}],[\"不能存放值\",{\"1\":{\"219\":1}}],[\"不能准确的判断引用类型的数据\",{\"1\":{\"211\":1}}],[\"不能进行表示的非常大\",{\"1\":{\"263\":1}}],[\"不能进行\",{\"1\":{\"101\":1}}],[\"不能进行处理\",{\"1\":{\"42\":1}}],[\"不能修改\",{\"1\":{\"79\":1,\"300\":1}}],[\"不能设置上下外边距\",{\"1\":{\"43\":1}}],[\"不能设置宽高\",{\"1\":{\"43\":1}}],[\"不能再访问到的对象\",{\"1\":{\"35\":1}}],[\"不再需要使用的对象\",{\"1\":{\"35\":1}}],[\"垃圾回收机制的简称\",{\"1\":{\"35\":1}}],[\"垃圾回收与\",{\"0\":{\"35\":1}}],[\"仍然是个可达对象\",{\"1\":{\"35\":1}}],[\"时会自动查找配置文件\",{\"1\":{\"456\":1}}],[\"时会遍历到原型中去\",{\"1\":{\"210\":1,\"273\":1}}],[\"时配置\",{\"1\":{\"453\":1}}],[\"时可传入部分参数\",{\"1\":{\"302\":1}}],[\"时才能访问\",{\"1\":{\"295\":1}}],[\"时\",{\"1\":{\"230\":1,\"243\":1,\"245\":1,\"330\":1}}],[\"时就被标记为垃圾\",{\"1\":{\"35\":1}}],[\"时钟\",{\"0\":{\"28\":1}}],[\"java\",{\"0\":{\"489\":1}}],[\"javascript\",{\"0\":{\"189\":1},\"1\":{\"76\":1,\"77\":1,\"117\":1,\"134\":1,\"153\":1,\"259\":1,\"281\":1,\"294\":1,\"384\":1}}],[\"jpegtran\",{\"1\":{\"477\":2}}],[\"jpg\",{\"1\":{\"17\":1,\"22\":1,\"24\":1}}],[\"jc\",{\"1\":{\"347\":2}}],[\"join\",{\"0\":{\"322\":1},\"1\":{\"322\":1,\"399\":1}}],[\"jbk\",{\"1\":{\"288\":1}}],[\"j++\",{\"1\":{\"271\":1}}],[\"j\",{\"1\":{\"271\":5}}],[\"justify\",{\"1\":{\"185\":3}}],[\"justitfy\",{\"1\":{\"184\":1}}],[\"jxs\",{\"1\":{\"130\":1}}],[\"js`\",{\"1\":{\"482\":1}}],[\"js$\",{\"1\":{\"459\":2,\"471\":1,\"472\":1,\"473\":1,\"476\":1}}],[\"jsdelivr\",{\"1\":{\"417\":1}}],[\"js全局方法\",{\"0\":{\"290\":1}}],[\"js最大能表示的值\",{\"1\":{\"263\":1}}],[\"js是单线程任务\",{\"1\":{\"217\":1}}],[\"js在执行时分为预编译阶段和执行阶段\",{\"1\":{\"206\":1}}],[\"js数据类型\",{\"0\":{\"190\":1}}],[\"jspm\",{\"1\":{\"148\":1}}],[\"jsx\",{\"0\":{\"91\":1},\"1\":{\"91\":6,\"95\":1,\"96\":1,\"113\":2,\"116\":1,\"456\":1,\"459\":1}}],[\"js>yaml>json\",{\"1\":{\"76\":1}}],[\"json外的文件需借助loader才能解析\",{\"1\":{\"448\":1}}],[\"jsoncallback=callback\",{\"1\":{\"402\":1}}],[\"jsonp\",{\"1\":{\"204\":1,\"402\":1}}],[\"json\",{\"1\":{\"76\":1,\"133\":1,\"396\":2,\"456\":2,\"458\":3,\"464\":1}}],[\"js\",{\"0\":{\"222\":1,\"483\":1},\"1\":{\"35\":1,\"72\":1,\"76\":1,\"81\":1,\"90\":2,\"91\":3,\"93\":2,\"99\":2,\"100\":1,\"119\":1,\"133\":2,\"135\":1,\"136\":1,\"139\":2,\"140\":1,\"146\":1,\"151\":3,\"152\":3,\"263\":1,\"292\":1,\"417\":2,\"446\":1,\"447\":2,\"448\":1,\"453\":2,\"456\":2,\"458\":3,\"459\":3,\"462\":4,\"463\":2,\"464\":1,\"467\":1,\"469\":3,\"470\":1,\"473\":1,\"479\":3,\"480\":5,\"483\":4}}],[\"释放\",{\"1\":{\"34\":1}}],[\"释放的一个过程\",{\"1\":{\"34\":1}}],[\"变为\",{\"1\":{\"431\":1}}],[\"变化时会重新计算\",{\"1\":{\"248\":1}}],[\"变更之后\",{\"1\":{\"226\":1}}],[\"变量存储位置的分配\",{\"1\":{\"295\":1}}],[\"变量的访问\",{\"1\":{\"293\":1}}],[\"变量在作用域中的特点\",{\"0\":{\"293\":1}}],[\"变量生效的范围\",{\"1\":{\"291\":1}}],[\"变量\",{\"1\":{\"264\":2}}],[\"变量名称对大小写敏感\",{\"1\":{\"261\":1}}],[\"变量也能以\",{\"1\":{\"261\":1}}],[\"变量必须以字母开头\",{\"1\":{\"261\":1}}],[\"变量必须先声明再使用\",{\"1\":{\"260\":1}}],[\"变量声明\",{\"0\":{\"260\":1}}],[\"变量声明时自动分配\",{\"1\":{\"34\":1}}],[\"变量提升的位置\",{\"1\":{\"295\":1}}],[\"变量提升发生在预编译阶段\",{\"1\":{\"206\":1}}],[\"变量提升\",{\"0\":{\"206\":1,\"294\":1}}],[\"变量和方法必须返回出去\",{\"1\":{\"116\":1}}],[\"变换\",{\"0\":{\"19\":1}}],[\"申请\",{\"1\":{\"34\":1}}],[\"从右到左\",{\"1\":{\"451\":1}}],[\"从右往左进行属性覆盖\",{\"1\":{\"381\":1}}],[\"从父级元素依次往子级元素查找\",{\"1\":{\"414\":1}}],[\"从不安全\",{\"1\":{\"400\":1}}],[\"从左往右挨个添加\",{\"1\":{\"381\":1}}],[\"从左到右\",{\"1\":{\"185\":1}}],[\"从a经过b移动到c\",{\"1\":{\"347\":1}}],[\"从后往前\",{\"1\":{\"346\":1}}],[\"从后往前查询\",{\"1\":{\"309\":1}}],[\"从下标\",{\"1\":{\"325\":1}}],[\"从当前位置截取到最后\",{\"1\":{\"311\":1}}],[\"从上往下依次执行的\",{\"1\":{\"259\":1}}],[\"从上到下\",{\"1\":{\"185\":1}}],[\"从顶层元素向目标元素传递\",{\"1\":{\"200\":1}}],[\"从顶点出发\",{\"1\":{\"166\":1}}],[\"从目标元素向顶层元素传递\",{\"1\":{\"200\":1}}],[\"从渲染树中消失\",{\"1\":{\"183\":1}}],[\"从\",{\"1\":{\"73\":1}}],[\"从内容开始\",{\"1\":{\"50\":1,\"51\":1}}],[\"从内边距开始\",{\"1\":{\"50\":1,\"51\":1}}],[\"从边框开始\",{\"1\":{\"50\":1,\"51\":1}}],[\"从根出发可访问到的对象\",{\"1\":{\"35\":1}}],[\"从申请\",{\"1\":{\"34\":1}}],[\"从弧度\",{\"1\":{\"7\":1}}],[\"项目在空间中的占比\",{\"1\":{\"184\":1}}],[\"项目缩小比例\",{\"1\":{\"184\":1}}],[\"项目放大比例\",{\"1\":{\"184\":1}}],[\"项目对齐方式\",{\"1\":{\"184\":1}}],[\"项目创建时选择\",{\"1\":{\"69\":1}}],[\"项目\",{\"0\":{\"30\":1,\"93\":1},\"1\":{\"69\":1,\"185\":1}}],[\"刻度\",{\"1\":{\"28\":1}}],[\"version\",{\"1\":{\"464\":1}}],[\"ver=v1\",{\"1\":{\"402\":1}}],[\"vnode\",{\"1\":{\"243\":1}}],[\"var在提升时会跳出块级作用域\",{\"1\":{\"295\":1}}],[\"var\",{\"1\":{\"260\":2,\"293\":4,\"295\":3}}],[\"var会忽略块级作用域提升到上一层作用域\",{\"1\":{\"206\":1}}],[\"val\",{\"1\":{\"101\":2,\"384\":5,\"402\":2,\"417\":5,\"428\":3}}],[\"value使其监听\",{\"1\":{\"429\":1}}],[\"value的形式\",{\"1\":{\"429\":1}}],[\"value的形式进行获取\",{\"1\":{\"423\":1}}],[\"valueof\",{\"1\":{\"288\":5,\"303\":1}}],[\"values\",{\"1\":{\"273\":1,\"376\":1}}],[\"value\",{\"1\":{\"27\":5,\"105\":1,\"219\":4,\"263\":1,\"379\":1,\"384\":5,\"387\":1,\"402\":3,\"418\":1,\"427\":2,\"429\":2,\"430\":1,\"439\":3}}],[\"value=\",{\"1\":{\"27\":1,\"105\":1}}],[\"viewmodel\",{\"1\":{\"233\":1}}],[\"view\",{\"1\":{\"233\":1,\"423\":1}}],[\"viewport\",{\"0\":{\"186\":1},\"1\":{\"186\":1}}],[\"visibility\",{\"0\":{\"183\":1}}],[\"video\",{\"1\":{\"17\":2}}],[\"v\",{\"0\":{\"237\":1,\"238\":1},\"1\":{\"158\":3,\"237\":2,\"238\":2,\"417\":1,\"418\":15,\"444\":2,\"445\":1}}],[\"void\",{\"1\":{\"139\":3}}],[\"v6\",{\"1\":{\"127\":1,\"128\":1}}],[\"vue提供$set的方法\",{\"1\":{\"426\":1}}],[\"vue性能优化\",{\"0\":{\"251\":1}}],[\"vuex是一种状态管理模式\",{\"1\":{\"248\":1}}],[\"vuex\",{\"0\":{\"248\":1},\"1\":{\"242\":2}}],[\"vue的生命周期\",{\"0\":{\"240\":1}}],[\"vue2和vue3的区别\",{\"0\":{\"420\":1}}],[\"vue2笔记\",{\"0\":{\"416\":1}}],[\"vue2\",{\"0\":{\"425\":1,\"426\":1},\"1\":{\"234\":1,\"238\":1,\"240\":1,\"384\":1,\"420\":1,\"422\":3,\"428\":1,\"431\":2,\"442\":1,\"445\":1}}],[\"vue响应式原理\",{\"0\":{\"234\":1}}],[\"vue3中可以没有\",{\"1\":{\"420\":1}}],[\"vue3笔记\",{\"0\":{\"419\":1}}],[\"vue3\",{\"0\":{\"425\":1,\"427\":1},\"1\":{\"92\":1,\"234\":1,\"238\":1,\"240\":1,\"431\":2,\"442\":1,\"445\":1}}],[\"vue\",{\"0\":{\"231\":1,\"488\":1,\"490\":1},\"1\":{\"77\":1,\"121\":1,\"235\":1,\"253\":3,\"254\":1,\"417\":7,\"420\":1,\"422\":1,\"423\":2,\"424\":2,\"426\":1,\"427\":1,\"428\":1,\"429\":2,\"430\":1,\"432\":1,\"434\":2,\"438\":2,\"439\":2,\"444\":2,\"445\":6,\"469\":1,\"481\":1}}],[\"vscode\",{\"0\":{\"70\":1}}],[\"v8\",{\"0\":{\"36\":1}}],[\"案例\",{\"0\":{\"26\":1}}],[\"++i\",{\"1\":{\"280\":2}}],[\"++\",{\"1\":{\"97\":1,\"109\":1,\"280\":1,\"285\":1}}],[\"+\",{\"1\":{\"24\":7,\"25\":8,\"35\":2,\"111\":1,\"153\":1,\"177\":2,\"181\":1,\"194\":3,\"214\":1,\"263\":20,\"280\":1,\"288\":9,\"307\":1,\"331\":1,\"337\":1,\"347\":3,\"357\":1,\"399\":2,\"428\":2}}],[\"+=\",{\"1\":{\"24\":1,\"345\":1,\"365\":1}}],[\"源图像在画布中的偏移量\",{\"1\":{\"24\":1}}],[\"获取dom\",{\"1\":{\"423\":1}}],[\"获取dom样式\",{\"0\":{\"406\":1}}],[\"获取触发事件的主体对象\",{\"1\":{\"415\":1}}],[\"获取子节点时\",{\"1\":{\"409\":1}}],[\"获取子元素节点\",{\"1\":{\"409\":1}}],[\"获取的内容一致\",{\"1\":{\"409\":1}}],[\"获取的节点也会更新\",{\"1\":{\"404\":1}}],[\"获取上一个元素的节点\",{\"1\":{\"409\":1}}],[\"获取上一个节点\",{\"1\":{\"409\":1}}],[\"获取下一个元素的节点\",{\"1\":{\"409\":1}}],[\"获取下一个节点\",{\"1\":{\"409\":1}}],[\"获取下标对应字符的\",{\"1\":{\"305\":1}}],[\"获取下标对应的字符\",{\"1\":{\"304\":1}}],[\"获取实际的尺寸\",{\"1\":{\"406\":1}}],[\"获取元素的计算样式\",{\"1\":{\"406\":1}}],[\"获取元素从document出发\",{\"1\":{\"403\":1}}],[\"获取或设置自定义属性\",{\"1\":{\"387\":1}}],[\"获取属性值\",{\"1\":{\"387\":1}}],[\"获取属性对应的映射关系\",{\"1\":{\"379\":1}}],[\"获取配置对象信息\",{\"1\":{\"384\":1}}],[\"获取数组的长度\",{\"1\":{\"318\":1}}],[\"获取数据\",{\"1\":{\"227\":1}}],[\"获取字符对应的下标\",{\"1\":{\"309\":1}}],[\"获取state中的数据\",{\"1\":{\"248\":1}}],[\"获取更新前各种状态\",{\"1\":{\"240\":1}}],[\"获取更新后的数据\",{\"1\":{\"227\":1}}],[\"获取对象的所有属性\",{\"1\":{\"212\":1}}],[\"获取泛型参数某个属性时\",{\"1\":{\"164\":1}}],[\"获取一个用于路由跳转的函数\",{\"1\":{\"129\":1}}],[\"获取\",{\"1\":{\"99\":1,\"306\":1,\"404\":1,\"473\":1}}],[\"获取每个像素点信息\",{\"1\":{\"24\":1}}],[\"获取2d画笔\",{\"1\":{\"1\":1}}],[\"使其能在浏览器中正常运行\",{\"1\":{\"458\":1}}],[\"使其不能转换为响应式对象\",{\"1\":{\"438\":1}}],[\"使其变为响应式\",{\"1\":{\"434\":1}}],[\"使其可以复用\",{\"1\":{\"432\":1}}],[\"使其可继续调用\",{\"1\":{\"345\":1}}],[\"使编写\",{\"1\":{\"118\":1}}],[\"使图片完全填充\",{\"1\":{\"48\":1}}],[\"使图片长的一边完全展示\",{\"1\":{\"48\":1}}],[\"使路径外的画布不显示\",{\"1\":{\"22\":1}}],[\"使用注解\",{\"1\":{\"480\":1}}],[\"使用方式\",{\"0\":{\"480\":1}}],[\"使用方法跟\",{\"1\":{\"428\":1}}],[\"使用插件\",{\"1\":{\"457\":1}}],[\"使用插值运算符\",{\"1\":{\"417\":1}}],[\"使用同下\",{\"1\":{\"451\":1}}],[\"使用node\",{\"1\":{\"448\":1}}],[\"使用异步组件时\",{\"1\":{\"444\":1}}],[\"使用hook\",{\"1\":{\"432\":1}}],[\"使用proxy实现响应式\",{\"1\":{\"420\":1}}],[\"使用脚手架创建项目vue\",{\"1\":{\"419\":1}}],[\"使用计算属性时会调用这方法\",{\"1\":{\"417\":1}}],[\"使用类名进行调用\",{\"1\":{\"371\":1}}],[\"使用解构进行变量交换\",{\"0\":{\"335\":1}}],[\"使用运算符\",{\"1\":{\"288\":1}}],[\"使用大写字母进行命名\",{\"1\":{\"260\":1}}],[\"使用不同类型进行运算\",{\"1\":{\"259\":1}}],[\"使用v\",{\"1\":{\"251\":1}}],[\"使用for循环时绑定key\",{\"1\":{\"251\":1}}],[\"使用filter过滤\",{\"1\":{\"209\":1}}],[\"使用display样式控制dom元素的显示和隐藏\",{\"1\":{\"237\":1}}],[\"使用link标签的rel属性设置\",{\"1\":{\"235\":1}}],[\"使用路由懒加载\",{\"1\":{\"235\":1,\"250\":1}}],[\"使用json\",{\"1\":{\"212\":1}}],[\"使用es6的set构造函数\",{\"1\":{\"209\":1}}],[\"使用过多内存消耗就会过大容易导致内存泄露\",{\"1\":{\"193\":1}}],[\"使用过后\",{\"1\":{\"103\":1}}],[\"使用多个泛型参数\",{\"1\":{\"164\":1}}],[\"使用时以传入的类型为准\",{\"1\":{\"164\":1}}],[\"使用时必须通过类名进行调用\",{\"1\":{\"154\":1}}],[\"使用关键字interface\",{\"1\":{\"159\":1}}],[\"使用关键字abstract定义\",{\"1\":{\"157\":1}}],[\"使用关键字extends\",{\"1\":{\"155\":1}}],[\"使用useselector钩子函数可以获取\",{\"1\":{\"118\":1}}],[\"使用useimperativehanle配合react\",{\"1\":{\"113\":1}}],[\"使用createapp工厂函数创建实例\",{\"1\":{\"420\":1}}],[\"使用createslic创建一个\",{\"1\":{\"118\":1}}],[\"使用configurestore创建一个\",{\"1\":{\"118\":1}}],[\"使用自定义\",{\"1\":{\"116\":1}}],[\"使用副作用显现\",{\"1\":{\"106\":1}}],[\"使用onchange事件结合事件对象e\",{\"1\":{\"100\":1}}],[\"使用普通对象创建的\",{\"1\":{\"99\":1}}],[\"使用钩子函数usestate来创建\",{\"1\":{\"97\":1}}],[\"使用bind绑定this\",{\"1\":{\"96\":1}}],[\"使用箭头函数\",{\"1\":{\"96\":1}}],[\"使用对象的形式进行配置\",{\"1\":{\"91\":1}}],[\"使用推荐的\",{\"1\":{\"86\":1}}],[\"使用了\",{\"1\":{\"86\":1}}],[\"使用了第三方包时\",{\"1\":{\"82\":1}}],[\"使用\",{\"0\":{\"152\":1},\"1\":{\"4\":1,\"7\":1,\"13\":1,\"34\":2,\"105\":2,\"118\":1,\"120\":1,\"121\":1,\"133\":1,\"139\":1,\"140\":2,\"142\":2,\"225\":1,\"228\":1,\"243\":1,\"276\":1,\"359\":2,\"418\":1,\"420\":1,\"459\":1,\"460\":2,\"473\":1,\"480\":2,\"481\":1}}],[\"裁剪\",{\"0\":{\"22\":1}}],[\"err\",{\"1\":{\"389\":1}}],[\"error\",{\"1\":{\"97\":3,\"106\":1,\"139\":1,\"265\":2,\"434\":1}}],[\"event\",{\"1\":{\"412\":2}}],[\"eventname\",{\"1\":{\"98\":2}}],[\"every\",{\"0\":{\"328\":1},\"1\":{\"328\":3}}],[\"eg\",{\"1\":{\"271\":1,\"273\":1}}],[\"el\",{\"1\":{\"417\":1}}],[\"else\",{\"1\":{\"212\":2,\"268\":5,\"384\":1,\"418\":2}}],[\"else的区别\",{\"0\":{\"196\":1}}],[\"element=\",{\"1\":{\"128\":2,\"130\":2}}],[\"enforcesizethreshold\",{\"1\":{\"480\":1}}],[\"entries\",{\"1\":{\"273\":1,\"376\":2,\"379\":3}}],[\"entrypoint\",{\"1\":{\"482\":2}}],[\"entry\",{\"1\":{\"152\":1,\"448\":1,\"480\":2}}],[\"end\",{\"1\":{\"185\":2,\"347\":6}}],[\"enumerable\",{\"1\":{\"210\":1,\"273\":1,\"384\":2}}],[\"enum\",{\"1\":{\"139\":3}}],[\"env\",{\"0\":{\"78\":1},\"1\":{\"78\":2,\"88\":1,\"459\":4,\"464\":2,\"483\":2}}],[\"effect\",{\"0\":{\"108\":1},\"1\":{\"107\":5}}],[\"extract\",{\"1\":{\"463\":2}}],[\"ext\",{\"1\":{\"453\":4,\"454\":1,\"470\":1}}],[\"extenddefaultplugins\",{\"1\":{\"477\":1}}],[\"extend\",{\"1\":{\"253\":2}}],[\"extendsions\",{\"1\":{\"152\":1}}],[\"extends\",{\"0\":{\"80\":1,\"149\":1},\"1\":{\"80\":1,\"88\":4,\"96\":3,\"97\":1,\"98\":1,\"149\":1,\"155\":1,\"157\":1,\"161\":1,\"164\":1,\"253\":2,\"370\":2,\"371\":1}}],[\"exec的区别\",{\"1\":{\"356\":1}}],[\"exec\",{\"1\":{\"356\":2,\"358\":2,\"360\":2}}],[\"example\",{\"1\":{\"154\":1}}],[\"exact\",{\"1\":{\"119\":1}}],[\"exclude\",{\"0\":{\"148\":1,\"471\":1},\"1\":{\"148\":1,\"152\":1,\"459\":2,\"471\":3,\"472\":2,\"473\":1,\"476\":1}}],[\"expression\",{\"1\":{\"269\":2}}],[\"exprot\",{\"1\":{\"77\":2}}],[\"export\",{\"1\":{\"110\":1,\"116\":1,\"118\":2,\"386\":1,\"420\":1,\"432\":1,\"440\":2,\"475\":1}}],[\"exports\",{\"1\":{\"88\":1,\"133\":1,\"152\":1,\"448\":1,\"451\":1,\"452\":1,\"453\":2,\"454\":1,\"457\":1,\"459\":1,\"460\":1,\"461\":1,\"463\":1,\"467\":1,\"469\":1,\"470\":1,\"471\":1,\"472\":1,\"473\":1,\"476\":1,\"480\":1,\"483\":1}}],[\"es2015\",{\"1\":{\"475\":1}}],[\"es2021\",{\"1\":{\"78\":1,\"88\":1}}],[\"eslit\",{\"1\":{\"457\":1}}],[\"eslintcache\",{\"1\":{\"472\":1}}],[\"eslintconfig\",{\"1\":{\"456\":1}}],[\"eslintplugin\",{\"1\":{\"457\":2,\"471\":1,\"472\":1,\"473\":1}}],[\"eslintignore\",{\"1\":{\"456\":1}}],[\"eslintrc\",{\"1\":{\"72\":1,\"456\":3}}],[\"eslint\",{\"0\":{\"66\":1,\"69\":1,\"70\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"83\":1,\"84\":1,\"456\":1},\"1\":{\"68\":1,\"69\":2,\"72\":4,\"73\":1,\"74\":2,\"76\":1,\"78\":1,\"80\":2,\"81\":1,\"82\":1,\"84\":1,\"86\":4,\"87\":3,\"88\":2,\"455\":1,\"456\":1,\"457\":2,\"472\":1,\"473\":1}}],[\"es5\",{\"0\":{\"220\":1},\"1\":{\"260\":1,\"370\":1,\"458\":1,\"459\":1}}],[\"es5使用构造函数进行定义\",{\"1\":{\"197\":1}}],[\"es\",{\"1\":{\"151\":1,\"483\":1}}],[\"es6使用关键字\",{\"1\":{\"370\":2}}],[\"es6模板字符串\",{\"1\":{\"263\":1}}],[\"es6中使用关键字class进行定义\",{\"1\":{\"197\":1}}],[\"es6\",{\"0\":{\"220\":1,\"370\":1},\"1\":{\"77\":1,\"96\":1,\"219\":1,\"260\":2,\"370\":1,\"386\":1,\"424\":1,\"455\":1,\"458\":1,\"459\":1,\"483\":2}}],[\"ecmaversion\",{\"1\":{\"73\":2,\"81\":1,\"88\":1}}],[\"empty\",{\"1\":{\"316\":1,\"318\":1}}],[\"emits\",{\"1\":{\"445\":2}}],[\"emit\",{\"1\":{\"242\":1,\"254\":1,\"422\":1}}],[\"em相对于当前元素的字体大小\",{\"1\":{\"187\":1}}],[\"em\",{\"0\":{\"187\":1},\"1\":{\"53\":1,\"187\":1}}],[\"e\",{\"1\":{\"21\":4,\"25\":2,\"27\":8,\"313\":1,\"336\":1,\"402\":2,\"411\":1,\"415\":5,\"432\":3}}],[\"蒙层\",{\"1\":{\"21\":1}}],[\">=\",{\"1\":{\"284\":1,\"332\":1,\"399\":1}}],[\">10px<\",{\"1\":{\"188\":1}}],[\">链接<navlink>\",{\"1\":{\"132\":1}}],[\">关于<\",{\"1\":{\"120\":1}}],[\">首页<\",{\"1\":{\"120\":1}}],[\">hello\",{\"1\":{\"96\":1,\"99\":2,\"103\":1,\"113\":1}}],[\">清空画布<\",{\"1\":{\"27\":1}}],[\">保存签名<\",{\"1\":{\"27\":1}}],[\">橡皮擦<\",{\"1\":{\"27\":1}}],[\">\",{\"1\":{\"21\":1,\"27\":3,\"34\":2,\"91\":2,\"95\":1,\"98\":2,\"101\":1,\"104\":1,\"105\":2,\"111\":1,\"113\":1,\"118\":2,\"119\":7,\"124\":1,\"125\":1,\"126\":1,\"128\":2,\"130\":4,\"131\":1,\"173\":5,\"186\":1,\"188\":1,\"241\":5,\"246\":1,\"263\":17,\"271\":1,\"281\":1,\"284\":1,\"291\":1,\"336\":1,\"347\":9,\"381\":1,\"387\":1,\"402\":1,\"407\":1,\"418\":4,\"443\":2,\"464\":3}}],[\"><\",{\"1\":{\"1\":1,\"21\":1,\"27\":1,\"28\":1,\"91\":1,\"93\":1,\"119\":1,\"128\":2,\"130\":1,\"386\":1,\"407\":1,\"412\":1,\"417\":1,\"418\":4,\"423\":1}}],[\"刮刮乐\",{\"0\":{\"21\":1}}],[\"旋转\",{\"1\":{\"19\":1}}],[\"返回以\",{\"1\":{\"388\":1}}],[\"返回值可以是一个对象或渲染函数\",{\"1\":{\"422\":1}}],[\"返回值就是该属性的值\",{\"1\":{\"384\":1}}],[\"返回值1\",{\"1\":{\"281\":1}}],[\"返回该属性的值\",{\"1\":{\"384\":1}}],[\"返回set对象所有的值\",{\"1\":{\"376\":1}}],[\"返回set对象所有的key\",{\"1\":{\"376\":1}}],[\"返回set对象的键值对\",{\"1\":{\"376\":1}}],[\"返回第一个满足条件的相关描述信息\",{\"1\":{\"356\":1}}],[\"返回最小\",{\"1\":{\"336\":1}}],[\"返回最终累加的值\",{\"1\":{\"331\":1}}],[\"返回排序后的数组\",{\"1\":{\"332\":1}}],[\"返回修改过后的新数组\",{\"1\":{\"330\":1}}],[\"返回修改后的字符串\",{\"1\":{\"310\":1}}],[\"返回删除的内容\",{\"1\":{\"325\":1}}],[\"返回被删除的那一项\",{\"1\":{\"324\":1}}],[\"返回数组改变后的长度\",{\"1\":{\"323\":1}}],[\"返回数组反转后的结果\",{\"1\":{\"321\":1}}],[\"返回拼接后的字符串\",{\"1\":{\"322\":1}}],[\"返回原数组\",{\"1\":{\"317\":1}}],[\"返回截取的内容\",{\"1\":{\"311\":1,\"312\":1}}],[\"返回的值就访问这个属性的值\",{\"1\":{\"384\":1}}],[\"返回的内容不一样\",{\"1\":{\"287\":1}}],[\"返回的是一个普通对象\",{\"1\":{\"99\":1}}],[\"返回布尔类型值\",{\"1\":{\"284\":1}}],[\"返回相除之后的余数\",{\"1\":{\"280\":1}}],[\"返回当前类型的值\",{\"1\":{\"263\":2}}],[\"返回需要的获取\",{\"1\":{\"118\":1}}],[\"返回一个可迭代遍历的数组\",{\"1\":{\"379\":1}}],[\"返回一个可遍历的数组\",{\"1\":{\"379\":1}}],[\"返回一个不重复的\",{\"1\":{\"375\":1}}],[\"返回一个不大于它的最大整数\",{\"1\":{\"336\":1}}],[\"返回一个\",{\"1\":{\"373\":1}}],[\"返回一个唯一且不重复值\",{\"1\":{\"372\":1}}],[\"返回一个实例对象\",{\"1\":{\"362\":1}}],[\"返回一个布尔类型的值\",{\"1\":{\"356\":1}}],[\"返回一个布尔值\",{\"1\":{\"328\":1}}],[\"返回一个新的对象\",{\"1\":{\"349\":1}}],[\"返回一个新数组\",{\"1\":{\"319\":1,\"329\":1}}],[\"返回一个0\",{\"1\":{\"336\":1}}],[\"返回一个整数\",{\"1\":{\"336\":1}}],[\"返回一个比他大的最小整数\",{\"1\":{\"336\":1}}],[\"返回一个待执行的函数\",{\"1\":{\"302\":1}}],[\"返回一个渲染组建\",{\"1\":{\"119\":1}}],[\"返回一个数组\",{\"1\":{\"109\":1,\"313\":1}}],[\"返回一个函数\",{\"1\":{\"107\":1,\"301\":2}}],[\"返回一个普通\",{\"1\":{\"99\":1}}],[\"返回一个渐变对象\",{\"1\":{\"13\":1}}],[\"返回\",{\"1\":{\"95\":1,\"121\":1,\"168\":1,\"171\":1,\"293\":1}}],[\"返回宽度等信息\",{\"1\":{\"18\":1}}],[\"垂直合并\",{\"0\":{\"41\":1}}],[\"垂直对齐方式\",{\"1\":{\"18\":1}}],[\"垂直偏移量\",{\"1\":{\"16\":1}}],[\"基础配置\",{\"0\":{\"446\":1}}],[\"基础\",{\"0\":{\"259\":1}}],[\"基本指令\",{\"0\":{\"418\":1}}],[\"基本数据类型\",{\"0\":{\"263\":1},\"1\":{\"190\":1}}],[\"基本用法\",{\"0\":{\"1\":1}}],[\"基类\",{\"1\":{\"155\":1}}],[\"基线对齐\",{\"1\":{\"18\":1}}],[\"同源策略\",{\"0\":{\"401\":1}}],[\"同步代码异步编程问题\",{\"1\":{\"388\":1}}],[\"同步代码执行完成后异步代码才开始计时执行\",{\"1\":{\"338\":1}}],[\"同构造函数进行创建\",{\"1\":{\"355\":1}}],[\"同call\",{\"1\":{\"302\":1}}],[\"同时存在输入类的\",{\"1\":{\"243\":1}}],[\"同上\",{\"1\":{\"119\":1}}],[\"同\",{\"1\":{\"18\":2,\"309\":1,\"340\":1}}],[\"设置文件名称\",{\"1\":{\"482\":1}}],[\"设置快捷命令\",{\"1\":{\"462\":1}}],[\"设置js文件输出目录\",{\"1\":{\"453\":1}}],[\"设置请求方式和地址\",{\"1\":{\"399\":1}}],[\"设置属性\",{\"1\":{\"387\":1}}],[\"设置属性时可进行操作\",{\"1\":{\"384\":1}}],[\"设置这个属性的值\",{\"1\":{\"384\":1}}],[\"设置跨列开始和结束的网格线\",{\"1\":{\"185\":1}}],[\"设置跨行开始和结束的网格线\",{\"1\":{\"185\":1}}],[\"设置行\",{\"1\":{\"185\":2}}],[\"设置主轴排列方向\",{\"1\":{\"184\":1}}],[\"设置固定高度\",{\"1\":{\"180\":1}}],[\"设置width为0\",{\"1\":{\"178\":1,\"184\":1}}],[\"设置可以作为模块导入的文件\",{\"1\":{\"152\":1}}],[\"设置继承的配置文件\",{\"1\":{\"149\":1}}],[\"设置字面量后只能是字面量的值\",{\"1\":{\"139\":1}}],[\"设置类名同理\",{\"1\":{\"132\":1}}],[\"设置的路由地址\",{\"1\":{\"122\":1}}],[\"设置事件时属性名应为驼峰形式\",{\"1\":{\"90\":1}}],[\"设置浮动后会变成块级元素\",{\"1\":{\"57\":1}}],[\"设置\",{\"1\":{\"45\":1,\"139\":1}}],[\"设置在绘制新形状时应用的合成操作的类型\",{\"1\":{\"20\":1}}],[\"设置大小\",{\"1\":{\"18\":1}}],[\"设置画笔全局透明度\",{\"1\":{\"14\":1}}],[\"设置画笔颜色\",{\"0\":{\"13\":1}}],[\"添加事件监听\",{\"1\":{\"412\":1}}],[\"添加映射关系\",{\"1\":{\"379\":2}}],[\"添加\",{\"1\":{\"376\":1,\"427\":2,\"469\":1}}],[\"添加到函数的原型中\",{\"1\":{\"365\":1}}],[\"添加唯一的标识符\",{\"1\":{\"243\":1}}],[\"添加了强大的类型校验\",{\"1\":{\"134\":1}}],[\"添加根标签<div\",{\"1\":{\"93\":1}}],[\"添加水印\",{\"1\":{\"17\":1}}],[\"添加渐变色\",{\"1\":{\"13\":1}}],[\"画布\",{\"0\":{\"27\":1}}],[\"画布绘制的起始点\",{\"1\":{\"17\":1}}],[\"画笔状态的保存与恢复\",{\"0\":{\"23\":1}}],[\"画半径为\",{\"1\":{\"7\":1}}],[\"水平垂直居中\",{\"0\":{\"182\":1}}],[\"水平\",{\"1\":{\"16\":1}}],[\"阴影颜色\",{\"1\":{\"16\":1}}],[\"阴影\",{\"0\":{\"16\":1}}],[\"偏移量\",{\"1\":{\"15\":1}}],[\"方便拿到传递下来的数据\",{\"1\":{\"388\":1}}],[\"方便后面继续使用\",{\"1\":{\"11\":1}}],[\"方式二\",{\"1\":{\"133\":1,\"141\":1,\"407\":1}}],[\"方式一\",{\"1\":{\"133\":1,\"141\":1,\"407\":1}}],[\"方向值\",{\"1\":{\"55\":1}}],[\"方法继承父类构造器\",{\"1\":{\"370\":1}}],[\"方法传入任务\",{\"1\":{\"339\":1,\"340\":1}}],[\"方法进行挂载\",{\"1\":{\"417\":1}}],[\"方法进行强制转换\",{\"1\":{\"287\":1,\"288\":1,\"289\":1}}],[\"方法进行浅比较\",{\"1\":{\"228\":1}}],[\"方法改变\",{\"1\":{\"264\":1}}],[\"方法能将十进制转成任意进制\",{\"1\":{\"263\":1}}],[\"方法动态添即可\",{\"1\":{\"255\":1}}],[\"方法封装到类内部\",{\"1\":{\"197\":1}}],[\"方法创建一个对象\",{\"1\":{\"303\":1}}],[\"方法创建\",{\"1\":{\"105\":1}}],[\"方法可以将画布转换成一个图片地址\",{\"1\":{\"27\":1}}],[\"方法可以保存当前画笔的状态\",{\"1\":{\"23\":1}}],[\"方法\",{\"0\":{\"373\":1,\"376\":1,\"379\":1},\"1\":{\"23\":1,\"106\":1,\"133\":1,\"153\":1,\"154\":1,\"159\":1,\"287\":1,\"288\":1,\"372\":1,\"417\":3}}],[\"方型\",{\"1\":{\"15\":1}}],[\"bilibili\",{\"1\":{\"402\":1}}],[\"bili\",{\"1\":{\"402\":2}}],[\"bind\",{\"1\":{\"301\":3,\"302\":3,\"418\":1}}],[\"bin\",{\"1\":{\"72\":1,\"74\":1}}],[\"b^2\",{\"1\":{\"337\":1}}],[\"b两项交换位置\",{\"1\":{\"332\":1}}],[\"b合并到一起整体执行\",{\"1\":{\"302\":1}}],[\"breath\",{\"1\":{\"370\":1}}],[\"break\",{\"1\":{\"269\":4,\"271\":3}}],[\"browserslist\",{\"1\":{\"464\":1}}],[\"browserrouter\",{\"1\":{\"119\":1,\"121\":1}}],[\"browser\",{\"1\":{\"78\":1,\"88\":1,\"403\":1}}],[\"b9\",{\"1\":{\"263\":1}}],[\"bfc可解决的问题\",{\"0\":{\"176\":1}}],[\"bfc\",{\"0\":{\"174\":1},\"1\":{\"174\":2}}],[\"bfc化\",{\"1\":{\"60\":1}}],[\"bfs\",{\"1\":{\"166\":1}}],[\"b=\",{\"1\":{\"111\":1}}],[\"buy\",{\"1\":{\"161\":2}}],[\"bundle\",{\"1\":{\"152\":1,\"453\":1,\"463\":1}}],[\"build\",{\"1\":{\"93\":2,\"462\":1}}],[\"button>\",{\"1\":{\"27\":3}}],[\"butt\",{\"1\":{\"15\":1}}],[\"bangumi\",{\"1\":{\"402\":2}}],[\"babel插件\",{\"1\":{\"459\":1}}],[\"babelrc\",{\"1\":{\"458\":3}}],[\"babel等配置\",{\"1\":{\"93\":1}}],[\"babel\",{\"0\":{\"458\":1,\"476\":1},\"1\":{\"91\":5,\"455\":1,\"458\":3,\"459\":12,\"471\":1,\"472\":2,\"473\":1,\"476\":6,\"483\":2}}],[\"base64\",{\"1\":{\"452\":1}}],[\"base\",{\"1\":{\"88\":1,\"149\":1}}],[\"backgroundcolor\",{\"1\":{\"91\":1,\"379\":2,\"418\":1}}],[\"background\",{\"0\":{\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1},\"1\":{\"55\":1}}],[\"backbtn\",{\"1\":{\"27\":2}}],[\"back\",{\"1\":{\"27\":2,\"245\":1}}],[\"block\",{\"0\":{\"58\":1},\"1\":{\"45\":2,\"60\":2,\"174\":1,\"175\":1,\"180\":1}}],[\"bower\",{\"1\":{\"148\":1}}],[\"body\",{\"1\":{\"102\":1,\"187\":1,\"402\":1,\"404\":1,\"407\":2}}],[\"boder\",{\"1\":{\"53\":1,\"410\":2}}],[\"both\",{\"1\":{\"60\":1,\"180\":2}}],[\"bottom\",{\"1\":{\"42\":1,\"49\":1,\"55\":3,\"61\":1,\"178\":1,\"182\":1}}],[\"box2\",{\"1\":{\"379\":1}}],[\"box1\",{\"1\":{\"379\":1}}],[\"box\",{\"0\":{\"177\":1},\"1\":{\"50\":3,\"51\":3,\"177\":2}}],[\"border值\",{\"1\":{\"410\":1}}],[\"border\",{\"1\":{\"41\":1,\"50\":1,\"51\":1,\"53\":2,\"177\":2,\"178\":2}}],[\"boolean\",{\"1\":{\"139\":2,\"140\":1,\"143\":1,\"190\":1,\"263\":1,\"268\":1,\"286\":1,\"289\":1,\"290\":1}}],[\"bool\",{\"1\":{\"25\":2,\"384\":2,\"413\":4}}],[\"b\",{\"1\":{\"35\":2,\"111\":3,\"139\":2,\"170\":4,\"194\":2,\"263\":2,\"283\":3,\"298\":2,\"302\":3,\"332\":8,\"335\":2,\"336\":2,\"347\":4,\"357\":1,\"367\":1,\"373\":2}}],[\"beforerouteleave\",{\"1\":{\"247\":1}}],[\"beforerouteupdate\",{\"1\":{\"247\":1}}],[\"beforerouteenter\",{\"1\":{\"247\":1}}],[\"beforeenter\",{\"1\":{\"247\":1}}],[\"beforeeach\",{\"1\":{\"247\":1}}],[\"beforedestroy\",{\"1\":{\"240\":2,\"431\":1}}],[\"beforeupdate\",{\"1\":{\"240\":2,\"431\":1}}],[\"beforemount\",{\"1\":{\"240\":2,\"241\":2,\"431\":1}}],[\"beforecreate\",{\"1\":{\"240\":2,\"241\":2,\"422\":1,\"431\":1}}],[\"before\",{\"1\":{\"60\":1}}],[\"bevel\",{\"1\":{\"15\":1}}],[\"beziercurveto\",{\"1\":{\"11\":2,\"25\":4}}],[\"beginpath\",{\"1\":{\"7\":4,\"27\":1,\"28\":2}}],[\"begin\",{\"1\":{\"3\":1}}],[\"末端样式\",{\"1\":{\"15\":1}}],[\"宽度\",{\"1\":{\"15\":1}}],[\"透明度\",{\"0\":{\"14\":1}}],[\"n个盘子\",{\"1\":{\"347\":2}}],[\"n的奇数和\",{\"1\":{\"347\":1}}],[\"n的和及1\",{\"1\":{\"347\":1}}],[\"n的阶乘\",{\"1\":{\"347\":1}}],[\"n^0\",{\"1\":{\"263\":1}}],[\"n^1\",{\"1\":{\"263\":1}}],[\"n^2\",{\"1\":{\"263\":1}}],[\"nll\",{\"1\":{\"203\":1}}],[\"n表达占据的比例\",{\"1\":{\"185\":1}}],[\"n\",{\"1\":{\"169\":1,\"185\":1,\"263\":2,\"267\":1,\"313\":1,\"318\":1,\"347\":27,\"357\":3}}],[\"native\",{\"1\":{\"418\":1,\"445\":1}}],[\"nam\",{\"1\":{\"311\":1}}],[\"name获取\",{\"1\":{\"300\":1}}],[\"name2\",{\"1\":{\"295\":3}}],[\"name=\",{\"1\":{\"186\":1}}],[\"name\",{\"1\":{\"35\":5,\"97\":4,\"103\":1,\"118\":2,\"137\":2,\"139\":3,\"140\":3,\"141\":2,\"142\":2,\"143\":3,\"153\":5,\"154\":1,\"155\":3,\"158\":1,\"159\":1,\"160\":2,\"161\":6,\"162\":3,\"164\":5,\"260\":2,\"275\":4,\"276\":3,\"277\":6,\"278\":3,\"293\":2,\"295\":8,\"297\":2,\"300\":2,\"301\":4,\"302\":6,\"308\":2,\"309\":4,\"310\":2,\"311\":9,\"312\":7,\"313\":3,\"316\":2,\"319\":4,\"320\":2,\"322\":2,\"326\":1,\"327\":5,\"334\":7,\"355\":4,\"357\":2,\"363\":3,\"365\":1,\"370\":5,\"371\":3,\"381\":5,\"384\":2,\"386\":1,\"423\":1,\"424\":1,\"426\":2,\"427\":1,\"434\":1,\"438\":1,\"477\":2,\"480\":6,\"482\":2}}],[\"nan\",{\"1\":{\"168\":3,\"263\":1,\"288\":2,\"289\":1}}],[\"navigate\",{\"0\":{\"131\":1},\"1\":{\"131\":1}}],[\"nav\",{\"1\":{\"129\":2}}],[\"navlink>\",{\"1\":{\"120\":1}}],[\"navlink\",{\"0\":{\"120\":1,\"132\":1},\"1\":{\"120\":2}}],[\"npx\",{\"1\":{\"72\":1,\"74\":1,\"447\":1,\"461\":1,\"462\":2}}],[\"npm\",{\"0\":{\"93\":1},\"1\":{\"69\":2,\"74\":1,\"87\":2,\"93\":1,\"118\":1,\"119\":1,\"135\":1,\"136\":1,\"152\":1,\"417\":1,\"447\":2,\"451\":1,\"457\":1,\"459\":1,\"460\":1,\"461\":1,\"463\":1,\"464\":2,\"473\":1,\"476\":1,\"477\":3,\"483\":1}}],[\"network\",{\"0\":{\"482\":1}}],[\"net\",{\"1\":{\"417\":1}}],[\"never\",{\"1\":{\"139\":1}}],[\"nextelementsibling\",{\"1\":{\"409\":1}}],[\"nextsibling\",{\"1\":{\"409\":2}}],[\"next\",{\"1\":{\"35\":1}}],[\"newval\",{\"1\":{\"384\":4,\"417\":4,\"429\":4,\"439\":2}}],[\"newpsd\",{\"1\":{\"384\":4}}],[\"newset\",{\"1\":{\"376\":7}}],[\"newarr\",{\"1\":{\"170\":4,\"209\":5,\"377\":4}}],[\"new\",{\"0\":{\"171\":1},\"1\":{\"11\":1,\"13\":1,\"17\":1,\"22\":1,\"24\":1,\"25\":2,\"28\":1,\"139\":1,\"156\":1,\"158\":1,\"164\":1,\"170\":3,\"171\":1,\"198\":1,\"209\":2,\"220\":1,\"265\":1,\"303\":1,\"316\":4,\"317\":1,\"344\":5,\"355\":2,\"362\":2,\"363\":1,\"368\":1,\"370\":1,\"376\":3,\"379\":1,\"381\":1,\"389\":2,\"392\":3,\"394\":1,\"399\":2,\"417\":1,\"427\":1,\"457\":1,\"460\":1,\"463\":1,\"464\":1,\"471\":1,\"472\":1,\"473\":2,\"477\":1,\"480\":1}}],[\"null表示一个不存在的值或空对象\",{\"1\":{\"191\":1}}],[\"null和undefined的区别\",{\"0\":{\"191\":1}}],[\"null\",{\"1\":{\"32\":1,\"34\":1,\"35\":1,\"99\":1,\"129\":1,\"139\":2,\"166\":2,\"169\":1,\"171\":1,\"190\":1,\"192\":1,\"263\":1,\"288\":1,\"289\":1,\"298\":1,\"349\":1,\"352\":1,\"356\":2,\"360\":1,\"412\":1,\"423\":1}}],[\"num=3\",{\"1\":{\"402\":2}}],[\"num=10\",{\"1\":{\"402\":3}}],[\"num=1\",{\"1\":{\"402\":3}}],[\"num从1开始\",{\"1\":{\"359\":1}}],[\"number>\",{\"1\":{\"164\":1}}],[\"number\",{\"1\":{\"137\":1,\"139\":4,\"143\":1,\"154\":4,\"161\":3,\"162\":2,\"163\":2,\"164\":1,\"190\":1,\"214\":1,\"263\":3,\"286\":1,\"288\":1,\"290\":1,\"328\":2,\"418\":1,\"439\":1}}],[\"num\",{\"1\":{\"28\":3,\"138\":1,\"345\":8,\"357\":1}}],[\"note\",{\"0\":{\"486\":1}}],[\"not\",{\"1\":{\"263\":1,\"464\":1}}],[\"none\",{\"0\":{\"183\":1},\"1\":{\"418\":1}}],[\"noimplicitythis\",{\"1\":{\"151\":1}}],[\"noimplicitany\",{\"1\":{\"151\":1}}],[\"noemitonerror\",{\"1\":{\"151\":1}}],[\"noemit\",{\"1\":{\"151\":1}}],[\"nodetype\",{\"1\":{\"408\":2}}],[\"nodelist\",{\"1\":{\"32\":4,\"166\":7,\"404\":1,\"409\":2}}],[\"node\",{\"0\":{\"136\":1},\"1\":{\"32\":5,\"72\":1,\"74\":1,\"136\":3,\"148\":1,\"152\":1,\"166\":8,\"459\":2,\"471\":3,\"472\":3,\"473\":2,\"476\":1,\"480\":1}}],[\"no\",{\"1\":{\"13\":1,\"47\":1,\"79\":1}}],[\"org\",{\"1\":{\"477\":1}}],[\"origin\",{\"0\":{\"50\":1},\"1\":{\"204\":2}}],[\"os\",{\"1\":{\"473\":3}}],[\"oldval\",{\"1\":{\"417\":3,\"429\":4}}],[\"oldvnode\",{\"1\":{\"243\":1}}],[\"optimization\",{\"1\":{\"480\":1,\"482\":1}}],[\"optimizationlevel\",{\"1\":{\"477\":1}}],[\"optipng\",{\"1\":{\"477\":2}}],[\"options\",{\"1\":{\"381\":5,\"459\":1,\"464\":1,\"472\":1,\"473\":1,\"476\":1}}],[\"open\",{\"1\":{\"399\":2,\"461\":1}}],[\"operator\",{\"1\":{\"280\":1}}],[\"opk\",{\"1\":{\"357\":1}}],[\"oddsum\",{\"1\":{\"347\":2}}],[\"of\",{\"0\":{\"273\":1},\"1\":{\"376\":1,\"379\":1}}],[\"of用于可迭代\",{\"1\":{\"210\":1,\"273\":1}}],[\"of的区别\",{\"0\":{\"210\":1}}],[\"offsettop\",{\"1\":{\"410\":1}}],[\"offsetleft\",{\"1\":{\"410\":1}}],[\"offsetheight\",{\"1\":{\"410\":1}}],[\"offsetwidth\",{\"1\":{\"410\":1}}],[\"offset\",{\"1\":{\"13\":1}}],[\"o2\",{\"1\":{\"35\":1}}],[\"o1\",{\"1\":{\"35\":1}}],[\"object\",{\"0\":{\"369\":1,\"381\":1,\"382\":1,\"383\":1,\"384\":1,\"385\":1},\"1\":{\"139\":2,\"171\":2,\"190\":1,\"192\":2,\"212\":5,\"215\":1,\"219\":2,\"228\":1,\"264\":2,\"287\":5,\"288\":2,\"349\":2,\"363\":1,\"368\":2,\"369\":2,\"381\":1,\"382\":1,\"383\":1,\"384\":6,\"403\":2,\"426\":1,\"427\":1}}],[\"obj1keys\",{\"1\":{\"212\":9}}],[\"obj1\",{\"1\":{\"35\":4,\"212\":7,\"383\":2}}],[\"objgroup\",{\"1\":{\"35\":2}}],[\"obj2keys\",{\"1\":{\"212\":3}}],[\"obj2\",{\"1\":{\"35\":5,\"142\":1,\"212\":6,\"350\":1,\"383\":2}}],[\"obj\",{\"1\":{\"34\":3,\"35\":4,\"97\":4,\"98\":2,\"140\":1,\"142\":1,\"171\":3,\"194\":3,\"215\":2,\"287\":4,\"288\":4,\"301\":2,\"302\":7,\"350\":1,\"362\":1,\"363\":5,\"382\":2,\"384\":8,\"399\":2,\"424\":1,\"426\":2,\"429\":4,\"430\":1,\"438\":2}}],[\"overflow\",{\"1\":{\"41\":1,\"60\":1,\"175\":1,\"176\":1}}],[\"over\",{\"1\":{\"27\":1}}],[\"oneof\",{\"0\":{\"470\":1},\"1\":{\"470\":2}}],[\"on\",{\"1\":{\"418\":1,\"445\":1}}],[\"onreadystatechange\",{\"1\":{\"397\":1,\"399\":2}}],[\"oninput\",{\"1\":{\"384\":1,\"402\":1}}],[\"onunmounted\",{\"1\":{\"240\":1,\"431\":1}}],[\"onupdated\",{\"1\":{\"240\":1,\"431\":1}}],[\"onbeforeunmount\",{\"1\":{\"240\":1,\"431\":1,\"432\":2}}],[\"onbeforeupdate\",{\"1\":{\"240\":1,\"431\":1}}],[\"onbeforemount\",{\"1\":{\"240\":1,\"431\":1}}],[\"onmounted\",{\"1\":{\"240\":1,\"431\":1,\"432\":2}}],[\"onmousemove\",{\"1\":{\"27\":1,\"413\":1}}],[\"onmouseup\",{\"1\":{\"27\":1,\"413\":1}}],[\"onmousedown\",{\"1\":{\"27\":1,\"413\":1}}],[\"once\",{\"1\":{\"418\":2}}],[\"onclick=\",{\"1\":{\"412\":1}}],[\"onclick\",{\"1\":{\"27\":3,\"90\":1,\"91\":1,\"352\":1,\"353\":1,\"402\":1,\"412\":1,\"480\":1}}],[\"onchange\",{\"1\":{\"27\":2}}],[\"onload\",{\"1\":{\"13\":1,\"17\":1,\"22\":1,\"24\":1,\"298\":1,\"402\":1}}],[\"output\",{\"1\":{\"152\":1,\"448\":1,\"453\":2,\"462\":1,\"480\":2}}],[\"outfile\",{\"1\":{\"151\":2}}],[\"outdir\",{\"1\":{\"151\":2}}],[\"outlet\",{\"1\":{\"130\":1}}],[\"out\",{\"1\":{\"21\":1,\"27\":2}}],[\"666\",{\"1\":{\"295\":2}}],[\"66px\",{\"1\":{\"55\":1}}],[\"60\",{\"1\":{\"28\":3,\"263\":1}}],[\"600ms\",{\"1\":{\"473\":1}}],[\"600之间\",{\"1\":{\"398\":1}}],[\"600\",{\"1\":{\"1\":2,\"27\":2,\"28\":2}}],[\"6\",{\"1\":{\"13\":1,\"27\":1,\"91\":1,\"170\":1,\"263\":5,\"288\":2,\"309\":1,\"330\":1,\"331\":1,\"365\":1,\"376\":1}}],[\"ttf|woff2\",{\"1\":{\"454\":1}}],[\"ture\",{\"1\":{\"263\":1,\"268\":1,\"418\":1}}],[\"tuple\",{\"1\":{\"139\":1}}],[\"t2\",{\"1\":{\"164\":1}}],[\"t2>\",{\"1\":{\"164\":1}}],[\"t1\",{\"1\":{\"164\":2}}],[\"t\",{\"1\":{\"164\":8,\"313\":1,\"368\":2}}],[\"threads\",{\"1\":{\"473\":4}}],[\"thread\",{\"0\":{\"473\":1},\"1\":{\"473\":2}}],[\"throttle\",{\"1\":{\"169\":1}}],[\"throw会触发reject回调\",{\"1\":{\"218\":1}}],[\"throw\",{\"1\":{\"139\":1,\"265\":1}}],[\"then\",{\"1\":{\"218\":1,\"344\":2,\"388\":2,\"389\":4,\"480\":1}}],[\"this指向obj\",{\"1\":{\"363\":1}}],[\"this指向foo\",{\"1\":{\"363\":1}}],[\"this\",{\"0\":{\"301\":1,\"302\":1},\"1\":{\"25\":24,\"98\":1,\"99\":1,\"101\":1,\"122\":1,\"151\":1,\"153\":2,\"155\":2,\"158\":6,\"160\":1,\"161\":4,\"169\":3,\"194\":2,\"198\":1,\"264\":1,\"301\":9,\"302\":4,\"308\":1,\"309\":2,\"310\":2,\"311\":6,\"312\":5,\"313\":3,\"316\":2,\"319\":4,\"320\":2,\"322\":2,\"326\":2,\"345\":5,\"355\":4,\"357\":1,\"363\":5,\"365\":2,\"370\":3,\"371\":2,\"377\":15,\"381\":4,\"388\":1,\"417\":2}}],[\"tiemr\",{\"1\":{\"439\":3}}],[\"title=\",{\"1\":{\"98\":1}}],[\"title\",{\"1\":{\"98\":2,\"106\":2,\"113\":2}}],[\"timer\",{\"1\":{\"107\":2,\"169\":2,\"203\":3,\"339\":2,\"340\":2,\"352\":3}}],[\"time\",{\"1\":{\"28\":4}}],[\"ts$\",{\"1\":{\"152\":1}}],[\"tsconfig\",{\"1\":{\"146\":1}}],[\"tsc\",{\"1\":{\"135\":1,\"145\":1,\"146\":2}}],[\"ts\",{\"0\":{\"136\":1,\"152\":1},\"1\":{\"72\":1,\"135\":1,\"136\":3,\"137\":1,\"138\":1,\"139\":3,\"140\":1,\"146\":1,\"147\":1,\"148\":1,\"150\":3,\"151\":1,\"152\":5,\"158\":1,\"164\":2}}],[\"terserwebpackplugin\",{\"1\":{\"473\":2}}],[\"terser\",{\"1\":{\"473\":3}}],[\"term=$\",{\"1\":{\"402\":1}}],[\"teleport>\",{\"1\":{\"443\":1}}],[\"teleport\",{\"0\":{\"443\":1}}],[\"temp\",{\"1\":{\"335\":2,\"347\":5}}],[\"template>\",{\"1\":{\"444\":2}}],[\"template\",{\"1\":{\"185\":4,\"460\":1,\"480\":1}}],[\"testname\",{\"1\":{\"355\":1}}],[\"test<string\",{\"1\":{\"164\":1}}],[\"test<string>\",{\"1\":{\"164\":1}}],[\"test<t1\",{\"1\":{\"164\":1}}],[\"test<t>\",{\"1\":{\"164\":1}}],[\"test\",{\"1\":{\"34\":1,\"35\":2,\"152\":1,\"344\":1,\"355\":2,\"356\":2,\"357\":16,\"368\":3,\"417\":6,\"451\":1,\"452\":1,\"453\":1,\"454\":1,\"459\":2,\"463\":1,\"464\":1,\"470\":1,\"471\":1,\"472\":1,\"473\":1,\"476\":1,\"480\":1}}],[\"text>\",{\"1\":{\"188\":1}}],[\"textbaseline\",{\"1\":{\"18\":2}}],[\"textalign\",{\"1\":{\"18\":2}}],[\"text\",{\"1\":{\"18\":2,\"51\":1,\"91\":2,\"387\":1,\"402\":1}}],[\"tree\",{\"0\":{\"475\":1}}],[\"trigger\",{\"1\":{\"439\":3}}],[\"trim\",{\"0\":{\"315\":1},\"1\":{\"418\":1}}],[\"track\",{\"1\":{\"439\":3}}],[\"transform\",{\"1\":{\"19\":1,\"182\":2,\"188\":1,\"476\":3}}],[\"translate\",{\"1\":{\"19\":2,\"28\":1,\"182\":1}}],[\"transparent\",{\"1\":{\"13\":1,\"178\":1}}],[\"trunc\",{\"1\":{\"336\":1}}],[\"true开启命名空间\",{\"1\":{\"248\":1}}],[\"true\",{\"1\":{\"27\":1,\"78\":3,\"79\":1,\"88\":3,\"124\":2,\"133\":2,\"139\":1,\"151\":1,\"169\":2,\"212\":2,\"271\":2,\"281\":1,\"283\":1,\"288\":2,\"293\":1,\"308\":1,\"327\":1,\"328\":4,\"353\":1,\"355\":2,\"376\":2,\"384\":4,\"413\":1,\"417\":1,\"429\":3,\"453\":1,\"461\":1,\"469\":1,\"472\":2,\"476\":1,\"477\":2,\"480\":2}}],[\"tan\",{\"1\":{\"337\":1}}],[\"targer\",{\"1\":{\"133\":1}}],[\"target\",{\"1\":{\"27\":2,\"100\":1,\"133\":2,\"151\":1,\"402\":1,\"415\":3,\"427\":6}}],[\"tag\",{\"1\":{\"27\":4,\"402\":2}}],[\"typeof返回的是变量的数据类型\",{\"1\":{\"211\":1}}],[\"typeof\",{\"0\":{\"211\":1},\"1\":{\"212\":3,\"264\":2,\"276\":1,\"328\":2}}],[\"types\",{\"1\":{\"150\":1}}],[\"typescript语法\",{\"1\":{\"420\":1}}],[\"typescript\",{\"0\":{\"134\":1},\"1\":{\"92\":1,\"135\":1,\"152\":1,\"459\":2}}],[\"type\",{\"1\":{\"27\":2,\"118\":1,\"143\":1,\"386\":1,\"396\":3,\"452\":1,\"453\":1,\"454\":1}}],[\"type=tag\",{\"1\":{\"402\":1}}],[\"type=accurate\",{\"1\":{\"402\":1}}],[\"type=\",{\"1\":{\"27\":2,\"91\":1,\"386\":1,\"387\":1,\"402\":1}}],[\"toraw\",{\"0\":{\"438\":1},\"1\":{\"438\":3}}],[\"torefs\",{\"0\":{\"433\":1,\"435\":1},\"1\":{\"434\":1,\"435\":3}}],[\"toref\",{\"0\":{\"433\":1,\"434\":1},\"1\":{\"434\":2,\"435\":1}}],[\"touppercase\",{\"0\":{\"314\":1}}],[\"tosring\",{\"1\":{\"263\":1,\"264\":2}}],[\"tostring\",{\"1\":{\"13\":1,\"27\":1,\"170\":1,\"192\":1,\"214\":1,\"215\":2,\"287\":8,\"288\":4,\"349\":1,\"372\":1}}],[\"tolowercase\",{\"0\":{\"314\":1},\"1\":{\"192\":1,\"215\":2,\"264\":1,\"349\":1}}],[\"to=\",{\"1\":{\"120\":2,\"125\":1,\"131\":1,\"132\":1,\"246\":1,\"443\":1}}],[\"toolkit\",{\"0\":{\"118\":1},\"1\":{\"118\":2}}],[\"too\",{\"1\":{\"106\":1}}],[\"to\",{\"1\":{\"55\":3,\"62\":1,\"125\":1}}],[\"topic\",{\"1\":{\"402\":1}}],[\"top\",{\"1\":{\"42\":1,\"49\":1,\"53\":1,\"55\":3,\"61\":1,\"62\":4,\"182\":2}}],[\"todataurl\",{\"1\":{\"27\":2}}],[\"$event\",{\"1\":{\"418\":1}}],[\"$mount\",{\"1\":{\"417\":1}}],[\"$<year>\",{\"1\":{\"359\":1}}],[\"$<month>\",{\"1\":{\"359\":1}}],[\"$<day>\",{\"1\":{\"359\":1}}],[\"$<name>\",{\"1\":{\"359\":1}}],[\"$1\",{\"1\":{\"359\":1}}],[\"$2\",{\"1\":{\"359\":1}}],[\"$3\",{\"1\":{\"359\":1}}],[\"$num\",{\"1\":{\"359\":1}}],[\"$parent\",{\"1\":{\"242\":1}}],[\"$\",{\"1\":{\"13\":1,\"63\":1,\"79\":1,\"158\":1,\"162\":1,\"164\":2,\"261\":1,\"263\":1,\"347\":1,\"357\":8,\"359\":2,\"452\":1,\"453\":1,\"454\":1}}],[\"`runtime\",{\"1\":{\"482\":1}}],[\"`https\",{\"1\":{\"402\":1}}],[\"``\",{\"1\":{\"263\":1}}],[\"`购买$\",{\"1\":{\"161\":1}}],[\"`$\",{\"1\":{\"155\":1,\"158\":1,\"162\":1,\"164\":2,\"347\":1,\"359\":1,\"399\":1}}],[\"`\",{\"1\":{\"13\":2,\"158\":1,\"162\":1,\"164\":2,\"347\":1,\"357\":2,\"359\":1,\"399\":1}}],[\"75\",{\"1\":{\"25\":2}}],[\"7\",{\"1\":{\"13\":1,\"170\":1,\"263\":1}}],[\"8^0\",{\"1\":{\"263\":1}}],[\"8^1\",{\"1\":{\"263\":1}}],[\"8888\",{\"1\":{\"35\":1,\"133\":1}}],[\"8082\",{\"1\":{\"399\":2}}],[\"800\",{\"1\":{\"169\":2,\"203\":1}}],[\"80\",{\"1\":{\"25\":2,\"223\":1}}],[\"8\",{\"1\":{\"13\":1,\"164\":1,\"170\":1,\"192\":1,\"215\":2,\"263\":3,\"264\":1,\"302\":1,\"347\":1,\"349\":1}}],[\"loop2\",{\"1\":{\"271\":1}}],[\"loop1\",{\"1\":{\"271\":2}}],[\"loop机制实现的\",{\"1\":{\"217\":1}}],[\"loaderreact\",{\"1\":{\"469\":1}}],[\"loader\",{\"1\":{\"152\":2,\"448\":1,\"450\":1,\"451\":10,\"452\":2,\"453\":1,\"459\":6,\"463\":4,\"464\":5,\"469\":3,\"470\":4,\"471\":2,\"472\":2,\"473\":3,\"476\":2}}],[\"loader配置\",{\"1\":{\"152\":1}}],[\"loading的加载\",{\"1\":{\"240\":1}}],[\"loading\",{\"1\":{\"126\":1}}],[\"localstorage~存储的是持久化的数据\",{\"1\":{\"216\":1}}],[\"localstorage的区别\",{\"0\":{\"216\":1}}],[\"localhost\",{\"1\":{\"133\":1,\"399\":2,\"461\":1}}],[\"location\",{\"1\":{\"122\":1}}],[\"log\",{\"1\":{\"24\":1,\"35\":1,\"157\":1,\"164\":1,\"265\":1,\"271\":3,\"273\":1,\"295\":9,\"300\":1,\"301\":3,\"302\":3,\"341\":1,\"343\":3,\"344\":3,\"347\":1,\"352\":1,\"353\":1,\"356\":1,\"359\":3,\"360\":1,\"370\":5,\"371\":1,\"379\":1,\"384\":2,\"389\":2,\"399\":2,\"404\":1,\"413\":1,\"429\":2}}],[\"lilist\",{\"1\":{\"415\":2}}],[\"li\",{\"1\":{\"402\":6,\"415\":1}}],[\"lib\",{\"1\":{\"151\":1}}],[\"link>\",{\"1\":{\"120\":1}}],[\"link\",{\"0\":{\"120\":1},\"1\":{\"120\":2,\"246\":1}}],[\"linear\",{\"1\":{\"55\":3}}],[\"lineargradient\",{\"1\":{\"13\":5}}],[\"linedom\",{\"1\":{\"27\":2}}],[\"linedashoffset\",{\"1\":{\"15\":1}}],[\"line\",{\"1\":{\"27\":4}}],[\"linejoin\",{\"1\":{\"15\":1}}],[\"linecap\",{\"1\":{\"15\":1,\"21\":1}}],[\"linewidth\",{\"1\":{\"15\":1,\"21\":1,\"27\":1,\"28\":6}}],[\"lineto\",{\"1\":{\"8\":4,\"21\":1,\"27\":1,\"28\":2}}],[\"li>\",{\"1\":{\"92\":1,\"415\":3}}],[\"list\",{\"1\":{\"92\":1}}],[\"label\",{\"1\":{\"269\":1}}],[\"lazy\",{\"1\":{\"126\":1,\"418\":1}}],[\"latest\",{\"1\":{\"87\":1}}],[\"lastindex\",{\"1\":{\"355\":1}}],[\"lastindexof\",{\"0\":{\"309\":1},\"1\":{\"309\":2}}],[\"lastname\",{\"1\":{\"158\":8,\"164\":2,\"194\":2,\"428\":3,\"429\":3}}],[\"last\",{\"1\":{\"56\":1,\"268\":1,\"464\":1}}],[\"less\",{\"1\":{\"450\":1}}],[\"left\",{\"1\":{\"49\":1,\"53\":1,\"55\":2,\"61\":1,\"182\":2}}],[\"lengthwise>\",{\"1\":{\"164\":1}}],[\"lengthwise\",{\"1\":{\"164\":1}}],[\"length\",{\"0\":{\"318\":1},\"1\":{\"24\":1,\"32\":1,\"164\":2,\"166\":3,\"212\":3,\"273\":1,\"300\":1,\"303\":1,\"365\":1,\"377\":4,\"402\":1,\"473\":1}}],[\"let用于变量的声明\",{\"1\":{\"260\":1}}],[\"let\",{\"1\":{\"13\":1,\"24\":1,\"27\":1,\"28\":1,\"32\":1,\"35\":2,\"139\":1,\"166\":2,\"169\":2,\"192\":2,\"193\":1,\"203\":1,\"206\":1,\"212\":1,\"260\":2,\"271\":3,\"273\":1,\"293\":2,\"295\":3,\"298\":1,\"302\":1,\"334\":3,\"335\":1,\"349\":2,\"350\":1,\"352\":1,\"353\":1,\"360\":1,\"363\":2,\"365\":2,\"376\":2,\"377\":3,\"379\":4,\"381\":1,\"384\":3,\"399\":1,\"413\":1,\"439\":1}}],[\"gifsicle\",{\"1\":{\"477\":3}}],[\"git\",{\"1\":{\"68\":1}}],[\"generator\",{\"1\":{\"453\":2,\"454\":1,\"470\":1}}],[\"getpoint\",{\"1\":{\"432\":3}}],[\"getpassword\",{\"1\":{\"298\":1}}],[\"getval\",{\"1\":{\"417\":2,\"445\":1}}],[\"getter\",{\"1\":{\"417\":1,\"439\":1}}],[\"getters\",{\"1\":{\"158\":1,\"248\":2}}],[\"getboundingclientrect\",{\"1\":{\"406\":1}}],[\"getcomputedstyle\",{\"1\":{\"406\":1}}],[\"getcontext\",{\"1\":{\"1\":3,\"21\":1,\"27\":1,\"28\":1}}],[\"getelementsbytagname\",{\"1\":{\"404\":1}}],[\"getlunbo\",{\"1\":{\"399\":2}}],[\"getattribute\",{\"1\":{\"387\":1}}],[\"getownpropertydescriptor\",{\"1\":{\"384\":1}}],[\"getownpropertynames\",{\"1\":{\"212\":2}}],[\"getobj\",{\"1\":{\"362\":2}}],[\"get和post的区别\",{\"0\":{\"201\":1}}],[\"getfullname\",{\"1\":{\"194\":3}}],[\"getname\",{\"1\":{\"159\":1,\"160\":1,\"164\":1,\"293\":1,\"295\":7,\"301\":2,\"302\":6,\"371\":1}}],[\"get\",{\"1\":{\"158\":1,\"201\":4,\"379\":2,\"384\":3,\"396\":2,\"399\":2,\"404\":1,\"417\":1,\"426\":1,\"427\":2,\"428\":1,\"439\":1}}],[\"getseconds\",{\"1\":{\"28\":1}}],[\"getminutes\",{\"1\":{\"28\":1}}],[\"gethours\",{\"1\":{\"28\":1}}],[\"getimagedata\",{\"1\":{\"24\":2}}],[\"g|gif|webp|svg\",{\"1\":{\"452\":1,\"453\":1}}],[\"go\",{\"1\":{\"245\":1}}],[\"gap\",{\"1\":{\"185\":2}}],[\"gay\",{\"1\":{\"24\":4}}],[\"groups\",{\"1\":{\"356\":1,\"358\":2}}],[\"grow\",{\"1\":{\"184\":1}}],[\"grid\",{\"0\":{\"185\":1},\"1\":{\"185\":9}}],[\"gray\",{\"1\":{\"28\":3}}],[\"gradient\",{\"1\":{\"13\":3,\"55\":3,\"56\":2}}],[\"gradientl\",{\"1\":{\"13\":4}}],[\"gg\",{\"1\":{\"158\":1}}],[\"g\",{\"1\":{\"135\":1,\"136\":1,\"355\":1,\"356\":1,\"360\":1}}],[\"gc\",{\"0\":{\"35\":1},\"1\":{\"35\":1}}],[\"globalproperties\",{\"1\":{\"445\":1}}],[\"globals\",{\"0\":{\"79\":1},\"1\":{\"79\":1}}],[\"globalcompositeoperation\",{\"1\":{\"20\":1,\"21\":1,\"27\":2}}],[\"globalalpha\",{\"1\":{\"14\":1}}],[\"径向渐变\",{\"0\":{\"56\":1}}],[\"径向\",{\"1\":{\"13\":1}}],[\"1<\",{\"1\":{\"415\":1}}],[\"15566666666\",{\"1\":{\"360\":1}}],[\"150\",{\"1\":{\"7\":3,\"9\":1,\"13\":4}}],[\"1个盘子\",{\"1\":{\"347\":2}}],[\"1个值\",{\"1\":{\"53\":1}}],[\"1之间的16位数\",{\"1\":{\"336\":1}}],[\"14455556666\",{\"1\":{\"360\":1}}],[\"14\",{\"1\":{\"170\":1}}],[\"111\",{\"1\":{\"263\":2}}],[\"110000\",{\"1\":{\"263\":1}}],[\"11\",{\"1\":{\"170\":1,\"263\":1,\"360\":1}}],[\"18之前的渲染方式\",{\"1\":{\"90\":1}}],[\"18\",{\"0\":{\"89\":1},\"1\":{\"108\":1,\"111\":1}}],[\"180deg\",{\"1\":{\"55\":1}}],[\"1331411021925517\",{\"1\":{\"402\":1}}],[\"13344445555\",{\"1\":{\"360\":1}}],[\"133\",{\"1\":{\"263\":1}}],[\"133e+33\",{\"1\":{\"263\":1}}],[\"13\",{\"1\":{\"73\":1,\"170\":1,\"347\":1}}],[\"12px任意字号\",{\"1\":{\"188\":1}}],[\"12px\",{\"1\":{\"188\":1}}],[\"12\",{\"1\":{\"28\":2,\"73\":1,\"81\":1,\"88\":1,\"170\":2,\"263\":2}}],[\"1024\",{\"1\":{\"452\":1}}],[\"1011\",{\"1\":{\"263\":2}}],[\"10111001\",{\"1\":{\"263\":2}}],[\"1010\",{\"1\":{\"263\":1}}],[\"10^0\",{\"1\":{\"263\":1}}],[\"10^1\",{\"1\":{\"263\":1}}],[\"10^2\",{\"1\":{\"263\":1}}],[\"10^33次方\",{\"1\":{\"263\":1}}],[\"10px\",{\"1\":{\"53\":2}}],[\"1001\",{\"1\":{\"263\":2}}],[\"1000\",{\"1\":{\"97\":2,\"107\":1,\"343\":1,\"389\":2}}],[\"100\",{\"1\":{\"19\":1,\"25\":2,\"62\":1,\"223\":1,\"263\":1,\"379\":2,\"398\":1}}],[\"100px\",{\"1\":{\"18\":1}}],[\"10\",{\"1\":{\"16\":1,\"27\":1,\"28\":1,\"138\":1,\"139\":1,\"170\":1,\"188\":1,\"193\":1,\"263\":2,\"453\":1,\"454\":1,\"480\":1}}],[\"168\",{\"1\":{\"329\":1}}],[\"16\",{\"1\":{\"13\":1,\"27\":1,\"263\":1}}],[\"1\",{\"0\":{\"168\":1},\"1\":{\"13\":3,\"16\":2,\"19\":2,\"24\":2,\"27\":2,\"28\":1,\"56\":2,\"72\":1,\"74\":1,\"97\":1,\"119\":1,\"126\":1,\"139\":1,\"168\":2,\"170\":1,\"192\":1,\"194\":2,\"209\":5,\"215\":3,\"263\":20,\"264\":1,\"267\":1,\"268\":3,\"269\":2,\"271\":1,\"281\":1,\"287\":2,\"288\":10,\"302\":5,\"304\":2,\"309\":2,\"310\":1,\"311\":3,\"312\":2,\"316\":1,\"325\":14,\"326\":1,\"328\":2,\"329\":1,\"330\":1,\"331\":2,\"332\":6,\"334\":8,\"335\":2,\"336\":1,\"337\":3,\"339\":1,\"340\":2,\"343\":1,\"344\":3,\"347\":29,\"349\":1,\"357\":3,\"359\":3,\"365\":1,\"376\":2,\"377\":3,\"397\":1,\"399\":1,\"406\":1,\"408\":2,\"428\":1,\"464\":1,\"480\":1}}],[\"线条\",{\"1\":{\"27\":1}}],[\"线长度\",{\"1\":{\"15\":1}}],[\"线性渐变\",{\"0\":{\"55\":1}}],[\"线性\",{\"1\":{\"13\":1}}],[\"线段样式\",{\"0\":{\"15\":1}}],[\"线段\",{\"0\":{\"8\":1}}],[\"ajax\",{\"0\":{\"395\":1},\"1\":{\"397\":5,\"398\":1,\"399\":2}}],[\"avi\",{\"1\":{\"360\":1}}],[\"a+\",{\"1\":{\"357\":1}}],[\"a++b\",{\"1\":{\"357\":1}}],[\"adjfkajefaefkjif\",{\"1\":{\"356\":2}}],[\"addattributestosvgelement\",{\"1\":{\"477\":1}}],[\"addeventlisiter\",{\"1\":{\"432\":1}}],[\"addeventlistener\",{\"1\":{\"17\":1,\"21\":2,\"25\":1,\"412\":2,\"413\":1,\"414\":1,\"415\":2}}],[\"address\",{\"1\":{\"370\":3,\"381\":4,\"438\":1}}],[\"addroute\",{\"1\":{\"255\":1}}],[\"addcount\",{\"1\":{\"118\":2}}],[\"addcolorstop\",{\"1\":{\"13\":7}}],[\"add\",{\"1\":{\"109\":2,\"163\":2,\"164\":1,\"345\":3,\"376\":3,\"377\":1}}],[\"a3\",{\"1\":{\"344\":1}}],[\"a2\",{\"1\":{\"344\":1}}],[\"a1\",{\"1\":{\"344\":1}}],[\"a^2\",{\"1\":{\"337\":1}}],[\"a||b\",{\"1\":{\"283\":1}}],[\"await\",{\"0\":{\"221\":1,\"394\":1},\"1\":{\"221\":3,\"222\":2,\"344\":4,\"394\":2}}],[\"await会加入到微任务队列中\",{\"1\":{\"217\":1}}],[\"accept\",{\"1\":{\"469\":1}}],[\"access\",{\"1\":{\"204\":1}}],[\"acc\",{\"1\":{\"402\":4}}],[\"active\",{\"1\":{\"120\":1,\"477\":1}}],[\"activeclassname=\",{\"1\":{\"120\":1}}],[\"actions\",{\"1\":{\"118\":1,\"248\":2}}],[\"actions存储的是\",{\"1\":{\"118\":1}}],[\"action\",{\"1\":{\"27\":1,\"109\":3,\"118\":4,\"248\":1}}],[\"axios通过实例下的canceltoken\",{\"1\":{\"203\":1}}],[\"animal<string>\",{\"1\":{\"164\":2}}],[\"animal<t>\",{\"1\":{\"164\":1}}],[\"animal\",{\"1\":{\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":2}}],[\"any可以定义任意属性\",{\"1\":{\"142\":1}}],[\"any\",{\"1\":{\"138\":1,\"139\":6,\"142\":1,\"151\":1,\"439\":1}}],[\"agea\",{\"1\":{\"371\":1}}],[\"age\",{\"1\":{\"137\":3,\"154\":5,\"164\":2,\"281\":3,\"302\":6,\"334\":2,\"363\":3,\"370\":5,\"371\":1,\"381\":4}}],[\"abc\",{\"1\":{\"263\":1}}],[\"abs\",{\"1\":{\"336\":1}}],[\"abstract\",{\"1\":{\"157\":1}}],[\"absolute\",{\"1\":{\"61\":1,\"179\":1,\"182\":1}}],[\"about\",{\"1\":{\"120\":1,\"125\":1,\"128\":1,\"129\":2,\"130\":1,\"131\":1,\"132\":1}}],[\"assetmodulefilename\",{\"1\":{\"453\":2}}],[\"asset\",{\"1\":{\"452\":1,\"453\":2,\"454\":1}}],[\"assign\",{\"0\":{\"381\":1},\"1\":{\"192\":1,\"381\":1}}],[\"ascii\",{\"1\":{\"305\":1,\"306\":1}}],[\"ascll\",{\"1\":{\"284\":1}}],[\"async\",{\"0\":{\"221\":1,\"394\":1},\"1\":{\"217\":1,\"221\":2,\"222\":1,\"344\":2,\"394\":2,\"422\":1}}],[\"astract\",{\"1\":{\"157\":1}}],[\"as\",{\"1\":{\"119\":1,\"141\":1}}],[\"a=\",{\"1\":{\"111\":1}}],[\"author\",{\"1\":{\"97\":1,\"140\":1,\"142\":1,\"427\":1,\"434\":6,\"438\":1}}],[\"auto\",{\"1\":{\"18\":1,\"43\":1,\"182\":1,\"185\":2}}],[\"article\",{\"0\":{\"485\":1}}],[\"area\",{\"1\":{\"185\":1}}],[\"areas使用\",{\"1\":{\"185\":1}}],[\"areas\",{\"1\":{\"185\":1}}],[\"arg\",{\"1\":{\"171\":2}}],[\"arguments\",{\"1\":{\"169\":2,\"300\":6}}],[\"arg1\",{\"1\":{\"139\":1}}],[\"arr2\",{\"1\":{\"404\":2}}],[\"arr4\",{\"1\":{\"376\":3}}],[\"arrary<t>\",{\"1\":{\"164\":1}}],[\"array<number>\",{\"1\":{\"139\":1}}],[\"array\",{\"1\":{\"139\":1,\"170\":3,\"192\":2,\"209\":1,\"276\":1,\"316\":3,\"317\":1,\"326\":2,\"327\":1,\"331\":1,\"349\":2,\"365\":1,\"376\":1}}],[\"arr\",{\"1\":{\"92\":2,\"170\":5,\"209\":5,\"288\":4,\"316\":2,\"334\":3,\"335\":4,\"377\":6,\"399\":3,\"404\":2}}],[\"arcto\",{\"1\":{\"9\":1}}],[\"arcto画圆弧\",{\"0\":{\"9\":1}}],[\"arc\",{\"1\":{\"7\":6,\"9\":1,\"13\":1,\"22\":1}}],[\"appendchild\",{\"1\":{\"402\":3,\"404\":1,\"407\":4}}],[\"application\",{\"1\":{\"396\":2}}],[\"apply\",{\"1\":{\"169\":2,\"171\":1,\"194\":1,\"302\":4,\"363\":1}}],[\"app2\",{\"1\":{\"105\":1}}],[\"app\",{\"1\":{\"90\":1,\"93\":3,\"95\":1,\"96\":3,\"97\":1,\"98\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"110\":2,\"111\":1,\"113\":1,\"114\":1,\"118\":1,\"122\":1,\"133\":4,\"151\":1,\"417\":2,\"422\":1,\"445\":7,\"480\":2}}],[\"api\",{\"0\":{\"421\":1},\"1\":{\"78\":2,\"133\":2,\"399\":2,\"420\":1,\"422\":1,\"432\":1,\"445\":1}}],[\"airbnb公司规则\",{\"1\":{\"88\":1}}],[\"airbnb\",{\"1\":{\"88\":1}}],[\"align\",{\"1\":{\"184\":2,\"185\":3}}],[\"alwaysstrict\",{\"1\":{\"151\":1}}],[\"alert\",{\"1\":{\"90\":1,\"265\":1}}],[\"allow\",{\"1\":{\"204\":1}}],[\"allowjs\",{\"1\":{\"151\":1}}],[\"all\",{\"0\":{\"392\":1},\"1\":{\"86\":1,\"88\":1,\"392\":1,\"480\":1}}],[\"alt\",{\"1\":{\"63\":2}}],[\"aftereach\",{\"1\":{\"247\":1}}],[\"after\",{\"1\":{\"60\":2,\"180\":1}}],[\"attributes\",{\"1\":{\"477\":1}}],[\"attrs\",{\"1\":{\"242\":1,\"422\":1}}],[\"attachment\",{\"0\":{\"52\":1}}],[\"at\",{\"1\":{\"56\":1}}],[\"a\",{\"1\":{\"27\":5,\"35\":2,\"63\":4,\"111\":3,\"120\":1,\"138\":1,\"139\":12,\"170\":4,\"193\":2,\"194\":2,\"198\":2,\"263\":2,\"283\":7,\"298\":3,\"302\":3,\"313\":1,\"332\":8,\"335\":2,\"336\":2,\"347\":6,\"356\":2,\"357\":8,\"367\":2}}],[\"圆周率\",{\"1\":{\"336\":1}}],[\"圆角\",{\"0\":{\"53\":1},\"1\":{\"15\":2}}],[\"圆锥\",{\"1\":{\"13\":1}}],[\"圆锥渐变\",{\"1\":{\"13\":1}}],[\"圆弧\",{\"0\":{\"7\":1}}],[\"dgg\",{\"1\":{\"295\":1,\"302\":2}}],[\"d\",{\"1\":{\"69\":1,\"87\":1,\"158\":2,\"194\":1,\"304\":1,\"320\":2,\"357\":4,\"359\":3,\"360\":1,\"381\":1,\"447\":1,\"459\":1,\"473\":1,\"476\":1}}],[\"dfs\",{\"1\":{\"32\":2,\"166\":2}}],[\"date\",{\"1\":{\"28\":1,\"302\":2,\"359\":4}}],[\"dataset\",{\"1\":{\"387\":5}}],[\"data为什么是一个函数\",{\"0\":{\"236\":1}}],[\"dataurlcondition\",{\"1\":{\"452\":1}}],[\"dataurl\",{\"1\":{\"27\":2}}],[\"data\",{\"1\":{\"24\":8,\"98\":2,\"116\":3,\"164\":2,\"192\":10,\"349\":10,\"384\":2,\"387\":2,\"399\":6,\"402\":3,\"417\":2,\"418\":1,\"422\":1,\"440\":1}}],[\"do\",{\"0\":{\"272\":1},\"1\":{\"272\":2}}],[\"dosomething\",{\"1\":{\"253\":1}}],[\"dog\",{\"1\":{\"157\":1,\"164\":1}}],[\"dom节点\",{\"1\":{\"415\":1}}],[\"dom节点列表\",{\"1\":{\"210\":1,\"273\":1}}],[\"dom相关方法\",{\"0\":{\"407\":1}}],[\"dom获取\",{\"0\":{\"404\":1}}],[\"domarr\",{\"1\":{\"273\":2}}],[\"dom更新\",{\"1\":{\"240\":1}}],[\"dom\",{\"0\":{\"403\":1},\"1\":{\"90\":6,\"93\":2,\"95\":1,\"96\":2,\"99\":6,\"102\":2,\"108\":2,\"113\":1,\"119\":3,\"120\":1,\"124\":1,\"125\":1,\"128\":1,\"130\":1,\"131\":1,\"226\":1,\"227\":1,\"243\":8,\"287\":1,\"387\":5,\"406\":2,\"412\":5,\"415\":1,\"417\":1,\"418\":1,\"443\":1}}],[\"download\",{\"1\":{\"27\":1}}],[\"document的层级关系\",{\"0\":{\"369\":1}}],[\"document\",{\"1\":{\"1\":1,\"21\":1,\"27\":7,\"28\":1,\"93\":1,\"102\":1,\"273\":1,\"352\":1,\"353\":1,\"369\":1,\"379\":2,\"384\":2,\"387\":1,\"402\":6,\"403\":4,\"404\":4,\"407\":6,\"413\":5,\"415\":3,\"480\":1}}],[\"drawpointer\",{\"1\":{\"28\":4}}],[\"drawscale\",{\"1\":{\"28\":3}}],[\"draw\",{\"1\":{\"25\":3,\"28\":2}}],[\"drawimage\",{\"1\":{\"17\":7,\"22\":1,\"24\":1}}],[\"dy\",{\"1\":{\"24\":2}}],[\"dx\",{\"1\":{\"24\":2}}],[\"dead\",{\"1\":{\"464\":1}}],[\"delay\",{\"1\":{\"439\":2}}],[\"deleteproperty\",{\"1\":{\"427\":2}}],[\"delete\",{\"1\":{\"376\":3,\"377\":1,\"379\":2}}],[\"deep\",{\"1\":{\"417\":1,\"429\":4}}],[\"deepclone\",{\"1\":{\"192\":3,\"349\":3}}],[\"dense\",{\"1\":{\"185\":1}}],[\"debounce\",{\"1\":{\"169\":1}}],[\"destroy\",{\"1\":{\"431\":1}}],[\"destroyed\",{\"1\":{\"240\":2,\"431\":1}}],[\"destination\",{\"1\":{\"21\":1,\"27\":2}}],[\"descriptor\",{\"1\":{\"384\":3}}],[\"description\",{\"1\":{\"280\":1}}],[\"desc\",{\"1\":{\"155\":4}}],[\"devtool\",{\"1\":{\"467\":1}}],[\"devserver\",{\"1\":{\"461\":1,\"462\":1,\"469\":1}}],[\"developmeng\",{\"1\":{\"448\":1}}],[\"development\",{\"1\":{\"90\":2,\"462\":1}}],[\"device\",{\"1\":{\"186\":1}}],[\"dev\",{\"1\":{\"152\":1,\"451\":1,\"457\":1,\"460\":1,\"461\":2,\"462\":3,\"463\":1,\"464\":2,\"477\":3}}],[\"defineasynccomponent\",{\"1\":{\"444\":2}}],[\"definecomponent\",{\"1\":{\"420\":1,\"440\":2}}],[\"definecompoent\",{\"1\":{\"420\":1}}],[\"defineproperties\",{\"1\":{\"384\":1}}],[\"defineproperty对已有的属性读取和修改进行数据劫持\",{\"1\":{\"426\":1}}],[\"defineproperty\",{\"0\":{\"384\":1},\"1\":{\"384\":4,\"426\":1}}],[\"defineproperty劫持各个属性的getter\",{\"1\":{\"234\":1}}],[\"def\",{\"1\":{\"269\":1}}],[\"deferredvalue\",{\"1\":{\"114\":1}}],[\"defaultvendors\",{\"1\":{\"480\":1}}],[\"default>组件内容<\",{\"1\":{\"444\":1}}],[\"default\",{\"1\":{\"109\":1,\"110\":1,\"116\":1,\"118\":1,\"269\":3,\"386\":1,\"420\":1,\"432\":1,\"440\":2,\"444\":1,\"480\":1}}],[\"deg\",{\"1\":{\"13\":1,\"28\":2}}],[\"divdom\",{\"1\":{\"423\":2}}],[\"div\",{\"1\":{\"407\":4}}],[\"div2\",{\"1\":{\"379\":4}}],[\"div1\",{\"1\":{\"379\":3}}],[\"div>\",{\"1\":{\"21\":1,\"27\":1,\"93\":1,\"130\":1,\"407\":2,\"412\":1,\"418\":4,\"423\":1}}],[\"diff\",{\"1\":{\"243\":1}}],[\"dist\",{\"1\":{\"148\":1,\"152\":1,\"417\":1,\"480\":1}}],[\"dispatch\",{\"1\":{\"118\":1}}],[\"dispatchsetdate\",{\"1\":{\"106\":1}}],[\"display\",{\"0\":{\"183\":1},\"1\":{\"45\":1,\"60\":1,\"180\":1,\"418\":1}}],[\"directive\",{\"1\":{\"445\":2}}],[\"direction\",{\"1\":{\"18\":2,\"55\":2,\"184\":1}}],[\"dirname\",{\"1\":{\"152\":1,\"457\":1,\"460\":1,\"471\":1,\"472\":2,\"480\":2}}],[\"dir\",{\"1\":{\"74\":2,\"151\":2,\"265\":1}}],[\"dww\",{\"1\":{\"358\":1}}],[\"dwwwww\",{\"1\":{\"358\":4}}],[\"dw$\",{\"1\":{\"357\":1}}],[\"dw10\",{\"1\":{\"295\":1}}],[\"dw\",{\"1\":{\"17\":1,\"137\":1,\"138\":1,\"160\":1,\"260\":2,\"276\":1,\"277\":2,\"278\":1,\"293\":2,\"295\":7,\"297\":2,\"302\":2,\"304\":3,\"327\":3,\"357\":2,\"358\":2,\"372\":2,\"373\":2}}],[\"创建文档碎片\",{\"1\":{\"407\":1}}],[\"创建文件第一步时选择了强制应用规范\",{\"1\":{\"73\":1}}],[\"创建元素\",{\"1\":{\"407\":1}}],[\"创建了\",{\"1\":{\"369\":1}}],[\"创建了一个私有作用域\",{\"1\":{\"297\":1}}],[\"创建器\",{\"1\":{\"118\":1}}],[\"创建的对象\",{\"1\":{\"441\":1}}],[\"创建的是一个实例\",{\"1\":{\"253\":1}}],[\"创建的\",{\"1\":{\"99\":1,\"369\":1}}],[\"创建根元素\",{\"1\":{\"90\":1}}],[\"创建\",{\"0\":{\"93\":1},\"1\":{\"90\":1,\"112\":1,\"441\":1}}],[\"创建一条从点1到点2的方向的线性渐变\",{\"1\":{\"13\":1}}],[\"创建一个节点碎片\",{\"1\":{\"402\":1}}],[\"创建一个处理数据的回调函数\",{\"1\":{\"402\":1}}],[\"创建一个延长值\",{\"1\":{\"114\":1}}],[\"创建一个\",{\"1\":{\"1\":1,\"423\":1}}],[\"创建渐变色\",{\"1\":{\"13\":1}}],[\"填充数组每一项\",{\"1\":{\"317\":1}}],[\"填充样式\",{\"1\":{\"13\":1}}],[\"填充绘制\",{\"1\":{\"5\":1}}],[\"将复用代码提取为一个单独的文件\",{\"1\":{\"480\":1}}],[\"将复杂的问题简单化\",{\"1\":{\"274\":1}}],[\"将复杂的问题转化为对象的问题\",{\"1\":{\"197\":1}}],[\"将打包生成对文件进行分割\",{\"1\":{\"479\":1}}],[\"将需要使用辅助代码从这引入\",{\"1\":{\"476\":1}}],[\"将浏览器不支持的\",{\"1\":{\"464\":1}}],[\"将项目所有的依赖文件编译成一个或多个文件输出\",{\"1\":{\"446\":1}}],[\"将全局\",{\"1\":{\"445\":1}}],[\"将组件的\",{\"1\":{\"443\":1}}],[\"将不会为其创建\",{\"1\":{\"435\":1}}],[\"将原生事件绑定到组件上\",{\"1\":{\"418\":1}}],[\"将数据同步由\",{\"1\":{\"418\":1}}],[\"将数组以某种字符进行拼接\",{\"1\":{\"322\":1}}],[\"将大量重复的操作委托给父元素\",{\"1\":{\"415\":1}}],[\"将一个由\",{\"1\":{\"438\":1}}],[\"将一个对象转换成url数据格式\",{\"1\":{\"399\":1}}],[\"将一系列代码\",{\"1\":{\"274\":1}}],[\"将父级构造函数中的方法和属性等添加到当前构造函数中\",{\"1\":{\"370\":1}}],[\"将父类构造函数的方法属性等组装到当前构造函数中\",{\"1\":{\"370\":1}}],[\"将实例对象的隐式原型指向构造函数的原型然后并返回一个对象\",{\"1\":{\"363\":1}}],[\"将规则写于\",{\"1\":{\"355\":1}}],[\"将高频率的操作以均匀的时间进行触发\",{\"1\":{\"353\":1}}],[\"将高频率的操作结束或停顿下来\",{\"1\":{\"352\":1}}],[\"将匿名函数或函数声明转化成函数表达式\",{\"1\":{\"297\":1}}],[\"将混入对象传入\",{\"1\":{\"253\":1}}],[\"将vuex值保存到浏览器缓存中\",{\"1\":{\"252\":1}}],[\"将store分成多个模块\",{\"1\":{\"248\":1}}],[\"将构造函数的原型prototype传递给实例对象的原型\",{\"1\":{\"364\":1}}],[\"将构造函数的原型\",{\"1\":{\"198\":1}}],[\"将属性\",{\"1\":{\"197\":1}}],[\"将整个父元素尺寸放大2倍再进行缩放\",{\"1\":{\"188\":1}}],[\"将指向\",{\"1\":{\"169\":1}}],[\"将代码合并为一个文件\",{\"1\":{\"151\":1}}],[\"将所有的请求都转发到index\",{\"1\":{\"121\":1}}],[\"将路由挂载到\",{\"1\":{\"119\":1}}],[\"将路径进行封装\",{\"1\":{\"11\":1}}],[\"将相关的\",{\"1\":{\"109\":1}}],[\"将修改\",{\"1\":{\"106\":1}}],[\"将\",{\"1\":{\"102\":1,\"263\":1,\"357\":1,\"363\":1,\"386\":1,\"394\":1,\"432\":1,\"451\":2,\"458\":1,\"463\":1}}],[\"将上一次的值作为参数可以完美解决\",{\"1\":{\"97\":1}}],[\"将上面的闭合路径移除使用\",{\"1\":{\"7\":1}}],[\"将返回的\",{\"1\":{\"95\":1,\"96\":1}}],[\"将内容渲染到根元素中\",{\"1\":{\"90\":1}}],[\"贝塞尔曲线\",{\"0\":{\"10\":1}}],[\"4$\",{\"1\":{\"482\":1}}],[\"43\",{\"1\":{\"396\":3}}],[\"430\",{\"1\":{\"9\":2}}],[\"456\",{\"1\":{\"384\":2}}],[\"450\",{\"1\":{\"7\":1,\"9\":1,\"11\":4}}],[\"48\",{\"1\":{\"263\":4}}],[\"4180\",{\"1\":{\"461\":1}}],[\"418\",{\"1\":{\"357\":2,\"384\":1}}],[\"41\",{\"1\":{\"263\":1}}],[\"4个角相等\",{\"1\":{\"53\":1}}],[\"4个角\",{\"1\":{\"53\":1}}],[\"4个值\",{\"1\":{\"53\":1}}],[\"4\",{\"1\":{\"19\":1,\"24\":1,\"28\":1,\"111\":1,\"170\":1,\"263\":1,\"311\":1,\"312\":3,\"359\":1,\"365\":1,\"376\":4,\"397\":1,\"399\":3,\"404\":2,\"452\":1}}],[\"404\",{\"1\":{\"121\":1}}],[\"40px\",{\"1\":{\"53\":2}}],[\"400之间\",{\"1\":{\"398\":1}}],[\"400\",{\"1\":{\"13\":2,\"17\":6,\"21\":4,\"24\":6,\"398\":1}}],[\"40\",{\"1\":{\"13\":1}}],[\"425\",{\"1\":{\"11\":2}}],[\"3<\",{\"1\":{\"415\":1}}],[\"3为值的对象\",{\"1\":{\"334\":1}}],[\"34\",{\"1\":{\"288\":2}}],[\"3时无法被解析\",{\"1\":{\"168\":1}}],[\"360deg\",{\"1\":{\"55\":1,\"337\":1}}],[\"3个值\",{\"1\":{\"53\":1}}],[\"33px\",{\"1\":{\"55\":1}}],[\"33\",{\"1\":{\"22\":1,\"282\":3,\"288\":2,\"317\":5}}],[\"304\",{\"1\":{\"398\":1,\"399\":1}}],[\"30px\",{\"1\":{\"53\":2}}],[\"30\",{\"1\":{\"17\":1,\"28\":1,\"480\":2}}],[\"300之间\",{\"1\":{\"398\":1}}],[\"3000\",{\"1\":{\"339\":1,\"340\":1,\"343\":1}}],[\"30000000000000004\",{\"1\":{\"263\":1}}],[\"300\",{\"1\":{\"7\":9,\"8\":4,\"9\":1,\"11\":3,\"13\":3,\"28\":3,\"379\":1,\"398\":1,\"399\":2}}],[\"3\",{\"0\":{\"168\":1},\"1\":{\"13\":1,\"24\":2,\"97\":1,\"168\":1,\"170\":1,\"209\":4,\"240\":1,\"263\":2,\"271\":3,\"282\":4,\"288\":4,\"302\":2,\"316\":2,\"325\":12,\"328\":4,\"329\":5,\"330\":3,\"331\":1,\"332\":4,\"334\":5,\"335\":2,\"336\":1,\"343\":1,\"344\":2,\"347\":1,\"357\":2,\"359\":4,\"365\":1,\"376\":2,\"389\":3,\"397\":1,\"399\":1,\"404\":1,\"408\":1,\"417\":1,\"483\":1}}],[\"325\",{\"1\":{\"11\":1}}],[\"350\",{\"1\":{\"8\":1,\"9\":1,\"11\":1,\"17\":1}}],[\"mpx\",{\"1\":{\"447\":1}}],[\"mp4\",{\"1\":{\"360\":2}}],[\"mp3\",{\"1\":{\"360\":1}}],[\"mutation\",{\"1\":{\"248\":1}}],[\"mutations\",{\"1\":{\"248\":2}}],[\"mvvm模型\",{\"0\":{\"233\":1}}],[\"menuids=0\",{\"1\":{\"396\":2}}],[\"meta\",{\"1\":{\"255\":1}}],[\"method\",{\"1\":{\"399\":3}}],[\"methods\",{\"1\":{\"239\":1,\"253\":1,\"417\":4,\"422\":1}}],[\"methodname\",{\"1\":{\"118\":1}}],[\"message=\",{\"1\":{\"124\":1}}],[\"memoization\",{\"1\":{\"225\":1}}],[\"memo\",{\"0\":{\"110\":1},\"1\":{\"110\":1,\"111\":2,\"225\":1}}],[\"meassuretext\",{\"1\":{\"18\":1}}],[\"msgname\",{\"1\":{\"98\":1}}],[\"m\",{\"1\":{\"28\":2,\"313\":1,\"355\":1}}],[\"myref\",{\"1\":{\"439\":2}}],[\"myset\",{\"1\":{\"377\":3}}],[\"mytostring\",{\"1\":{\"287\":2}}],[\"mycoupon\",{\"1\":{\"261\":2}}],[\"mymixin\",{\"1\":{\"253\":3}}],[\"mymove\",{\"1\":{\"62\":2}}],[\"my\",{\"1\":{\"21\":2,\"357\":1}}],[\"mx\",{\"1\":{\"21\":2}}],[\"mozjpeg\",{\"1\":{\"477\":1}}],[\"mode\",{\"1\":{\"448\":1,\"480\":1}}],[\"mode=development\",{\"1\":{\"447\":1}}],[\"model\",{\"1\":{\"403\":2,\"417\":1,\"418\":1,\"423\":1}}],[\"module即可\",{\"1\":{\"386\":1}}],[\"module\",{\"0\":{\"103\":1},\"1\":{\"88\":1,\"103\":2,\"133\":1,\"152\":2,\"248\":1,\"386\":1,\"448\":2,\"451\":2,\"452\":2,\"453\":3,\"454\":2,\"457\":1,\"459\":3,\"460\":1,\"461\":1,\"463\":2,\"464\":1,\"467\":2,\"469\":3,\"470\":2,\"471\":2,\"472\":2,\"473\":2,\"476\":2,\"480\":1,\"483\":1}}],[\"modules目录中\",{\"1\":{\"471\":1}}],[\"modules\",{\"1\":{\"72\":1,\"74\":1,\"77\":1,\"148\":1,\"152\":1,\"459\":2,\"471\":2,\"472\":3,\"473\":1,\"476\":1,\"480\":1}}],[\"mount\",{\"1\":{\"431\":1}}],[\"mounted\",{\"1\":{\"240\":2,\"241\":2,\"431\":1}}],[\"moudel\",{\"1\":{\"151\":1}}],[\"mousemove\",{\"1\":{\"21\":1,\"25\":1}}],[\"moveto\",{\"1\":{\"7\":3,\"8\":1,\"9\":1,\"11\":1,\"21\":1,\"25\":2,\"27\":1,\"28\":2}}],[\"mixin\",{\"1\":{\"253\":1,\"445\":2}}],[\"mixins\",{\"1\":{\"253\":4}}],[\"minchunks\",{\"1\":{\"480\":2}}],[\"minremainingsize\",{\"1\":{\"480\":1}}],[\"minsize\",{\"1\":{\"480\":2}}],[\"minimizeroptions\",{\"1\":{\"477\":1}}],[\"minimizer\",{\"0\":{\"477\":1},\"1\":{\"464\":2,\"477\":1}}],[\"minimum\",{\"1\":{\"186\":1}}],[\"minicssextractplugin\",{\"1\":{\"463\":4,\"464\":1}}],[\"mini\",{\"1\":{\"463\":2}}],[\"minmax\",{\"1\":{\"185\":1}}],[\"min\",{\"1\":{\"91\":1,\"336\":1}}],[\"min=\",{\"1\":{\"27\":1}}],[\"middleware\",{\"1\":{\"133\":2}}],[\"middle\",{\"1\":{\"18\":1}}],[\"miterlimit\",{\"1\":{\"15\":1}}],[\"mitter\",{\"1\":{\"15\":1}}],[\"markraw\",{\"0\":{\"438\":1},\"1\":{\"438\":3}}],[\"margin\",{\"1\":{\"42\":3,\"181\":1,\"182\":3}}],[\"main\",{\"1\":{\"396\":1,\"402\":2,\"480\":2}}],[\"match\",{\"1\":{\"122\":1,\"129\":1,\"374\":1}}],[\"math\",{\"0\":{\"336\":1},\"1\":{\"7\":5,\"13\":2,\"19\":1,\"22\":1,\"27\":1,\"28\":5,\"332\":1,\"336\":1,\"337\":1}}],[\"many\",{\"1\":{\"106\":2}}],[\"manage\",{\"1\":{\"34\":1,\"35\":5}}],[\"map\",{\"0\":{\"168\":1,\"219\":1,\"330\":1,\"378\":1},\"1\":{\"92\":1,\"168\":1,\"219\":5,\"330\":1,\"378\":2,\"379\":9,\"467\":5}}],[\"maxinitialrequests\",{\"1\":{\"480\":1}}],[\"maximum\",{\"1\":{\"186\":1}}],[\"maxasyncrequests\",{\"1\":{\"480\":1}}],[\"maxsize\",{\"1\":{\"452\":1}}],[\"max\",{\"1\":{\"263\":1,\"336\":1}}],[\"max=\",{\"1\":{\"27\":1}}],[\"maxwidth\",{\"1\":{\"18\":3}}],[\"0以上\",{\"1\":{\"419\":1}}],[\"0不删除\",{\"1\":{\"325\":1}}],[\"0418\",{\"1\":{\"298\":1}}],[\"001\",{\"1\":{\"263\":2}}],[\"000\",{\"1\":{\"13\":1,\"16\":1,\"28\":1}}],[\"0b\",{\"1\":{\"263\":1}}],[\"0x\",{\"1\":{\"168\":1,\"263\":1}}],[\"0px\",{\"1\":{\"62\":2}}],[\"0deg\",{\"1\":{\"55\":1}}],[\"0\",{\"1\":{\"7\":5,\"13\":11,\"14\":1,\"17\":8,\"21\":2,\"22\":3,\"24\":7,\"25\":2,\"27\":2,\"28\":7,\"32\":1,\"61\":1,\"62\":1,\"109\":1,\"114\":1,\"118\":1,\"139\":1,\"166\":2,\"168\":1,\"178\":1,\"182\":4,\"186\":1,\"188\":1,\"212\":1,\"263\":23,\"271\":3,\"288\":3,\"289\":1,\"311\":1,\"325\":4,\"331\":1,\"332\":3,\"334\":1,\"336\":1,\"340\":1,\"345\":1,\"347\":1,\"357\":4,\"358\":2,\"365\":2,\"377\":1,\"397\":1,\"428\":1,\"432\":2,\"480\":2}}],[\"的语法进行编译\",{\"1\":{\"483\":1}}],[\"的处理主要是\",{\"1\":{\"473\":1}}],[\"的热模块替换无需任何处理\",{\"1\":{\"469\":1}}],[\"的其他语法\",{\"1\":{\"455\":1}}],[\"的引用指向对象上的属性\",{\"1\":{\"434\":1}}],[\"的生命周期快\",{\"1\":{\"431\":1}}],[\"的生命周期执行比\",{\"1\":{\"431\":1}}],[\"的第二个参数可修改触发的方式\",{\"1\":{\"414\":1}}],[\"的节点不会更新\",{\"1\":{\"404\":1}}],[\"的地方请求资源\",{\"1\":{\"400\":1}}],[\"的写法\",{\"1\":{\"394\":1}}],[\"的回调函数\",{\"1\":{\"389\":1}}],[\"的执行\",{\"1\":{\"389\":1}}],[\"的对象\",{\"1\":{\"384\":1,\"439\":1}}],[\"的对齐方式\",{\"1\":{\"185\":1}}],[\"的原型链中是否有b\",{\"1\":{\"367\":1}}],[\"的参数\",{\"1\":{\"302\":1}}],[\"的作用域就被保留了\",{\"1\":{\"298\":1}}],[\"的作用域\",{\"1\":{\"298\":1}}],[\"的作用及不建议使用\",{\"0\":{\"243\":1}}],[\"的垃圾回收机制会判断作用域里的变量是否被引用\",{\"1\":{\"292\":1}}],[\"的运算符\",{\"1\":{\"281\":1}}],[\"的快\",{\"1\":{\"240\":1}}],[\"的响应式框架\",{\"1\":{\"233\":1}}],[\"的用法\",{\"0\":{\"227\":1}}],[\"的思想\",{\"1\":{\"225\":1}}],[\"的请把简历给我\",{\"1\":{\"223\":1}}],[\"的继承除了写法以外还有什么区别\",{\"0\":{\"220\":1}}],[\"的形式对未被形参接收的实参进行打包\",{\"1\":{\"276\":1}}],[\"的形式对路由进行映射\",{\"1\":{\"119\":1}}],[\"的形式进行解构\",{\"1\":{\"333\":1}}],[\"的形式进行输出\",{\"1\":{\"265\":1}}],[\"的形式进行存储\",{\"1\":{\"219\":1}}],[\"的形式存储元素\",{\"1\":{\"219\":1}}],[\"的小\",{\"1\":{\"201\":1}}],[\"的过程中会将\",{\"1\":{\"198\":1}}],[\"的字体大小\",{\"1\":{\"187\":1}}],[\"的整数\",{\"1\":{\"168\":1}}],[\"的一个内容\",{\"1\":{\"263\":1}}],[\"的一个矩形\",{\"1\":{\"6\":1}}],[\"的一种抽象\",{\"1\":{\"159\":1}}],[\"的可访问性\",{\"1\":{\"154\":1}}],[\"的版本\",{\"1\":{\"151\":1}}],[\"的解析\",{\"1\":{\"135\":1}}],[\"的容器\",{\"1\":{\"128\":1}}],[\"的方式进行命名\",{\"1\":{\"480\":1}}],[\"的方式进行获取\",{\"1\":{\"359\":2}}],[\"的方式进行捕获组命名\",{\"1\":{\"359\":1}}],[\"的方式创建\",{\"1\":{\"316\":1}}],[\"的方式\",{\"1\":{\"125\":1}}],[\"的方法\",{\"1\":{\"118\":1,\"288\":1}}],[\"的时候才会弹出确认\",{\"1\":{\"124\":1}}],[\"的问题\",{\"1\":{\"121\":1}}],[\"的路由模式一样\",{\"1\":{\"121\":1}}],[\"的区别\",{\"0\":{\"183\":1,\"211\":1,\"213\":1,\"219\":1,\"221\":1},\"1\":{\"111\":1,\"139\":1,\"219\":2,\"271\":1,\"280\":1,\"284\":1,\"302\":1,\"417\":3,\"418\":1}}],[\"的派发器\",{\"1\":{\"109\":1}}],[\"的依赖数据\",{\"1\":{\"107\":1}}],[\"的状态是否相同\",{\"1\":{\"106\":1}}],[\"的逻辑直接写在组件中\",{\"1\":{\"106\":1}}],[\"的钩子函数\",{\"1\":{\"99\":1}}],[\"的普通函数\",{\"1\":{\"95\":1}}],[\"的\",{\"1\":{\"63\":2,\"243\":1,\"388\":1}}],[\"的位置\",{\"1\":{\"49\":2,\"61\":1}}],[\"的值是一个对象\",{\"1\":{\"429\":1}}],[\"的值是否相同\",{\"1\":{\"106\":1}}],[\"的值会被认为是\",{\"1\":{\"271\":1}}],[\"的值\",{\"1\":{\"109\":2,\"118\":2,\"429\":1}}],[\"的值盛泽\",{\"1\":{\"49\":1}}],[\"的值为0\",{\"1\":{\"45\":1}}],[\"的大小\",{\"1\":{\"48\":1}}],[\"的圆弧\",{\"1\":{\"7\":1,\"9\":1}}],[\"到弧度\",{\"1\":{\"7\":1}}],[\"为响应式对象上的某个属性创建\",{\"1\":{\"434\":1}}],[\"为假返回\",{\"1\":{\"283\":2}}],[\"为真返回\",{\"1\":{\"283\":2}}],[\"为虚拟\",{\"1\":{\"243\":1}}],[\"为每个项目划分区域并对应一个标识符\",{\"1\":{\"185\":1}}],[\"为2\",{\"1\":{\"168\":1}}],[\"为0时\",{\"1\":{\"168\":1}}],[\"为接口中的属性或方法定义泛型类型\",{\"1\":{\"164\":1}}],[\"为true时\",{\"1\":{\"133\":1}}],[\"为该\",{\"1\":{\"114\":1}}],[\"为一个对象时\",{\"1\":{\"97\":1}}],[\"为\",{\"1\":{\"91\":1,\"124\":1,\"134\":1,\"268\":1,\"288\":2,\"412\":1}}],[\"为准\",{\"1\":{\"61\":1}}],[\"为下一个绘制点\",{\"1\":{\"8\":1}}],[\"为圆心\",{\"1\":{\"7\":1}}],[\"为起点点画宽为\",{\"1\":{\"6\":1}}],[\"ftp\",{\"1\":{\"401\":1}}],[\"fblq\",{\"1\":{\"347\":3}}],[\"f\",{\"1\":{\"263\":1,\"347\":2,\"370\":1}}],[\"floor\",{\"1\":{\"336\":1}}],[\"flow\",{\"1\":{\"185\":1}}],[\"float\",{\"1\":{\"170\":2,\"175\":1,\"181\":1}}],[\"flex布局\",{\"0\":{\"184\":1}}],[\"flex\",{\"1\":{\"175\":1,\"181\":1,\"182\":1,\"184\":5}}],[\"flat\",{\"0\":{\"320\":1},\"1\":{\"170\":1,\"320\":1}}],[\"func=suggest\",{\"1\":{\"402\":1}}],[\"function和object的关系\",{\"1\":{\"369\":1}}],[\"function\",{\"1\":{\"35\":3,\"95\":1,\"97\":2,\"98\":1,\"103\":1,\"104\":1,\"105\":2,\"106\":1,\"107\":1,\"110\":1,\"111\":2,\"113\":1,\"114\":1,\"130\":1,\"137\":1,\"139\":2,\"163\":2,\"164\":3,\"169\":4,\"171\":1,\"193\":1,\"194\":1,\"212\":1,\"275\":3,\"276\":1,\"277\":2,\"287\":1,\"293\":1,\"295\":4,\"297\":2,\"298\":1,\"300\":1,\"301\":3,\"302\":3,\"341\":1,\"344\":1,\"359\":1,\"362\":2,\"363\":3,\"365\":1,\"368\":3,\"369\":2,\"370\":1,\"384\":1,\"399\":2}}],[\"fun\",{\"1\":{\"162\":1,\"193\":1,\"275\":2,\"301\":2,\"302\":2,\"412\":1}}],[\"fullname\",{\"1\":{\"158\":4,\"428\":2}}],[\"fn<t\",{\"1\":{\"164\":1}}],[\"fn\",{\"1\":{\"112\":1,\"155\":1,\"169\":4,\"171\":3,\"193\":1,\"341\":3,\"365\":4,\"370\":2}}],[\"fragmeng\",{\"1\":{\"442\":1}}],[\"fragment>\",{\"1\":{\"104\":1}}],[\"fragment\",{\"0\":{\"104\":1,\"442\":1},\"1\":{\"104\":1,\"402\":3,\"407\":3}}],[\"freeze\",{\"0\":{\"385\":1}}],[\"fr\",{\"1\":{\"185\":1}}],[\"fromcharcode\",{\"0\":{\"306\":1}}],[\"from或结构可以得到一个去重的数组\",{\"1\":{\"209\":1}}],[\"from\",{\"1\":{\"62\":1,\"93\":1,\"96\":1,\"97\":1,\"99\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":2,\"106\":1,\"107\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"116\":1,\"118\":4,\"119\":2,\"120\":1,\"124\":1,\"125\":2,\"128\":1,\"130\":1,\"131\":1,\"170\":2,\"209\":1,\"376\":1,\"386\":1,\"420\":1,\"422\":1,\"423\":1,\"424\":1,\"428\":1,\"429\":1,\"430\":1,\"432\":2,\"434\":1,\"438\":1,\"439\":1,\"444\":1}}],[\"finally\",{\"1\":{\"344\":1,\"388\":2}}],[\"find\",{\"0\":{\"327\":1},\"1\":{\"327\":1,\"377\":1}}],[\"fistname\",{\"1\":{\"158\":1}}],[\"firstname\",{\"1\":{\"158\":6,\"164\":2,\"194\":2,\"428\":3,\"429\":5,\"430\":2}}],[\"filter\",{\"0\":{\"329\":1},\"1\":{\"209\":1,\"329\":1}}],[\"filename\",{\"1\":{\"152\":1,\"448\":1,\"453\":3,\"454\":1,\"463\":1,\"470\":1,\"480\":1}}],[\"files\",{\"0\":{\"150\":1},\"1\":{\"150\":1}}],[\"file\",{\"1\":{\"74\":2,\"135\":1,\"136\":1,\"145\":1,\"401\":1,\"452\":1}}],[\"filltext\",{\"1\":{\"18\":1}}],[\"fillstyle\",{\"1\":{\"13\":6,\"21\":1,\"23\":2,\"25\":1}}],[\"fillrect\",{\"1\":{\"6\":1,\"13\":1,\"19\":1,\"21\":1}}],[\"fill\",{\"0\":{\"317\":1},\"1\":{\"5\":1,\"6\":1,\"13\":3,\"25\":1,\"185\":1,\"317\":1}}],[\"fixed\",{\"1\":{\"52\":1,\"61\":1,\"179\":1}}],[\"fallback>loading\",{\"1\":{\"444\":1}}],[\"fallback\",{\"1\":{\"444\":1}}],[\"fallback=\",{\"1\":{\"126\":1}}],[\"false\",{\"1\":{\"7\":1,\"27\":2,\"79\":1,\"139\":1,\"169\":1,\"212\":4,\"263\":1,\"268\":1,\"271\":1,\"282\":1,\"288\":2,\"289\":1,\"293\":2,\"328\":2,\"353\":2,\"383\":1,\"413\":2,\"472\":1,\"476\":1,\"477\":1}}],[\"famliy\",{\"1\":{\"44\":1}}],[\"face\",{\"1\":{\"44\":1}}],[\"foo执行\",{\"1\":{\"363\":1}}],[\"foo\",{\"1\":{\"363\":2}}],[\"font\",{\"1\":{\"18\":2,\"44\":2,\"45\":1,\"454\":1}}],[\"formate\",{\"1\":{\"399\":2}}],[\"formatting\",{\"1\":{\"174\":1}}],[\"form\",{\"1\":{\"396\":1}}],[\"forward\",{\"1\":{\"245\":1}}],[\"forwardref使用\",{\"1\":{\"113\":1}}],[\"forwardref\",{\"1\":{\"113\":2}}],[\"forwardref指定返回的\",{\"1\":{\"113\":1}}],[\"for中定义的变量\",{\"1\":{\"238\":1}}],[\"for的优先级更高\",{\"1\":{\"238\":1}}],[\"for比v\",{\"1\":{\"238\":1}}],[\"for优先级\",{\"0\":{\"238\":1}}],[\"foreach\",{\"0\":{\"326\":1},\"1\":{\"170\":1,\"192\":1,\"209\":1,\"326\":1,\"327\":1,\"328\":1,\"329\":1,\"349\":1,\"402\":1,\"415\":1}}],[\"for\",{\"0\":{\"210\":1,\"271\":1,\"273\":2},\"1\":{\"13\":1,\"24\":1,\"28\":1,\"32\":1,\"166\":2,\"192\":1,\"210\":2,\"212\":1,\"228\":1,\"271\":5,\"273\":3,\"349\":1,\"365\":1,\"373\":3,\"376\":1,\"377\":1,\"379\":1,\"399\":1,\"418\":1}}],[\"fff\",{\"1\":{\"13\":1}}],[\"pwa\",{\"0\":{\"484\":1}}],[\"pwd\",{\"1\":{\"298\":2}}],[\"plugin插件会自动将资源变为\",{\"1\":{\"481\":1}}],[\"plugin\",{\"1\":{\"457\":2,\"460\":2,\"463\":2,\"464\":2,\"473\":2,\"476\":3,\"477\":1,\"480\":1}}],[\"plugins\",{\"1\":{\"448\":1,\"457\":1,\"460\":1,\"463\":1,\"464\":2,\"471\":1,\"472\":1,\"473\":1,\"476\":1,\"477\":2,\"480\":1}}],[\"play\",{\"1\":{\"17\":1}}],[\"p3\",{\"1\":{\"392\":2}}],[\"pdefault\",{\"1\":{\"381\":2}}],[\"port\",{\"1\":{\"461\":1}}],[\"portal\",{\"1\":{\"396\":2}}],[\"point\",{\"1\":{\"432\":6}}],[\"pow\",{\"1\":{\"336\":2,\"337\":1}}],[\"pop\",{\"0\":{\"324\":1},\"1\":{\"324\":1}}],[\"postcssoptions\",{\"1\":{\"464\":1}}],[\"postcss\",{\"1\":{\"464\":5}}],[\"post\",{\"1\":{\"201\":3}}],[\"position\",{\"0\":{\"49\":1,\"179\":1},\"1\":{\"55\":2,\"56\":4,\"175\":1,\"181\":1,\"182\":2}}],[\"psd\",{\"1\":{\"384\":5}}],[\"psot\",{\"1\":{\"201\":1,\"396\":1}}],[\"psuh\",{\"1\":{\"125\":1}}],[\"p\",{\"1\":{\"156\":2,\"158\":3,\"427\":1}}],[\"priority\",{\"1\":{\"480\":2}}],[\"private\",{\"1\":{\"154\":2}}],[\"progressive\",{\"1\":{\"477\":1}}],[\"prod\",{\"1\":{\"462\":2}}],[\"production\",{\"1\":{\"448\":1,\"462\":1,\"480\":1}}],[\"profile\",{\"1\":{\"438\":1}}],[\"provide\",{\"0\":{\"440\":1},\"1\":{\"440\":2}}],[\"provide+inject\",{\"1\":{\"242\":1}}],[\"provider>\",{\"1\":{\"105\":1,\"118\":1}}],[\"provider\",{\"1\":{\"105\":1,\"118\":1}}],[\"promise\",{\"0\":{\"218\":1,\"221\":1,\"388\":1,\"390\":1,\"391\":1,\"392\":1,\"393\":1},\"1\":{\"221\":4,\"222\":1,\"344\":6,\"388\":2,\"389\":2,\"392\":9,\"393\":2,\"394\":5,\"444\":1,\"483\":1}}],[\"prompt\",{\"0\":{\"124\":1},\"1\":{\"124\":1}}],[\"proto\",{\"1\":{\"198\":2,\"207\":1,\"363\":2,\"364\":1,\"365\":4,\"368\":1}}],[\"prototype\",{\"1\":{\"171\":1,\"198\":1,\"207\":2,\"215\":1,\"363\":2,\"365\":5,\"368\":2,\"445\":1}}],[\"protected\",{\"1\":{\"154\":2}}],[\"prop\",{\"1\":{\"384\":3}}],[\"property\",{\"1\":{\"264\":1,\"387\":3,\"406\":1}}],[\"propname\",{\"1\":{\"142\":2,\"155\":1,\"427\":6,\"429\":1,\"440\":1}}],[\"propsdiv2\",{\"1\":{\"379\":2}}],[\"propsdiv1\",{\"1\":{\"379\":2}}],[\"props自动刷新\",{\"1\":{\"254\":1}}],[\"props未定义\",{\"1\":{\"96\":1}}],[\"props\",{\"0\":{\"98\":1},\"1\":{\"96\":3,\"97\":1,\"98\":3,\"101\":3,\"105\":1,\"110\":1,\"113\":3,\"118\":1,\"122\":2,\"225\":1,\"242\":1,\"254\":1,\"384\":1,\"422\":1}}],[\"proxy\",{\"1\":{\"133\":7,\"423\":1,\"424\":2,\"427\":2}}],[\"prelaod\",{\"1\":{\"481\":1}}],[\"preload\",{\"0\":{\"481\":1},\"1\":{\"481\":5}}],[\"presets\",{\"1\":{\"459\":2,\"483\":1}}],[\"preset\",{\"1\":{\"459\":6,\"464\":2,\"483\":2}}],[\"prevent\",{\"1\":{\"418\":1}}],[\"previouselementsibling\",{\"1\":{\"409\":1}}],[\"previoussibling\",{\"1\":{\"409\":1}}],[\"prefetch\",{\"0\":{\"481\":1},\"1\":{\"235\":1,\"481\":5}}],[\"prefix\",{\"1\":{\"133\":1}}],[\"precount++\",{\"1\":{\"97\":1}}],[\"precount\",{\"1\":{\"97\":1}}],[\"pre\",{\"1\":{\"35\":1}}],[\"pending\",{\"1\":{\"218\":1}}],[\"person2\",{\"1\":{\"371\":1}}],[\"person\",{\"1\":{\"154\":1,\"158\":2,\"160\":1,\"370\":1,\"381\":2}}],[\"performance\",{\"0\":{\"37\":1}}],[\"peerdependencies\",{\"1\":{\"87\":1}}],[\"px是一个绝对单位\",{\"1\":{\"187\":1}}],[\"px\",{\"0\":{\"187\":1},\"1\":{\"53\":1,\"55\":1}}],[\"publish\",{\"1\":{\"98\":1}}],[\"public\",{\"1\":{\"93\":1,\"154\":2,\"480\":1}}],[\"pubsub\",{\"1\":{\"98\":2}}],[\"pubsubjs\",{\"1\":{\"98\":1}}],[\"purecomponent\",{\"1\":{\"97\":1}}],[\"push\",{\"0\":{\"323\":1},\"1\":{\"32\":1,\"122\":2,\"131\":1,\"166\":4,\"170\":1,\"192\":1,\"209\":2,\"246\":1,\"323\":1,\"349\":1,\"377\":2,\"399\":1}}],[\"putimagedata\",{\"1\":{\"24\":2}}],[\"password正在被访问\",{\"1\":{\"384\":1}}],[\"pay\",{\"1\":{\"161\":6}}],[\"payload\",{\"1\":{\"118\":1}}],[\"parallel\",{\"1\":{\"473\":1}}],[\"params\",{\"1\":{\"122\":1,\"276\":2,\"277\":2,\"477\":1}}],[\"parentelement\",{\"1\":{\"409\":2}}],[\"parentnode\",{\"1\":{\"402\":1,\"407\":1,\"409\":2}}],[\"parent\",{\"1\":{\"113\":1,\"242\":1,\"407\":4,\"408\":1,\"409\":1,\"412\":2}}],[\"parser\",{\"1\":{\"452\":1}}],[\"parseroptions\",{\"1\":{\"81\":1,\"88\":1}}],[\"parsefloat\",{\"1\":{\"286\":1,\"288\":1,\"290\":1}}],[\"parse转换成对象\",{\"1\":{\"192\":1}}],[\"parseint\",{\"0\":{\"168\":1},\"1\":{\"168\":3,\"214\":1,\"286\":1,\"288\":1,\"290\":1}}],[\"parseoptions\",{\"0\":{\"81\":1}}],[\"packages\",{\"1\":{\"148\":1}}],[\"package\",{\"1\":{\"72\":1,\"133\":1,\"456\":1,\"458\":1,\"464\":1}}],[\"padding\",{\"1\":{\"41\":1,\"50\":1,\"51\":1,\"177\":1}}],[\"pagey\",{\"1\":{\"21\":1,\"25\":2,\"432\":1}}],[\"pagex\",{\"1\":{\"21\":1,\"25\":2,\"432\":1}}],[\"path模块\",{\"1\":{\"448\":1}}],[\"pathrewrite\",{\"1\":{\"133\":2}}],[\"pathname\",{\"1\":{\"122\":1}}],[\"path=\",{\"1\":{\"119\":3,\"128\":2,\"130\":2}}],[\"path\",{\"1\":{\"25\":1,\"74\":4,\"119\":1,\"122\":1,\"126\":1,\"135\":1,\"136\":1,\"145\":1,\"152\":4,\"386\":1,\"448\":1,\"457\":1,\"460\":1,\"471\":1,\"472\":2,\"480\":5}}],[\"path2d\",{\"0\":{\"11\":1},\"1\":{\"11\":1,\"25\":1}}],[\"pattern\",{\"1\":{\"13\":2}}],[\"p>\",{\"1\":{\"21\":1}}],[\"pngquant\",{\"1\":{\"477\":1}}],[\"png|jpe\",{\"1\":{\"452\":1,\"453\":1}}],[\"png\",{\"1\":{\"13\":1,\"63\":2}}],[\"pinfo\",{\"1\":{\"438\":1}}],[\"pink\",{\"1\":{\"25\":2}}],[\"pig\",{\"1\":{\"155\":1,\"156\":1}}],[\"pixijs\",{\"0\":{\"29\":1}}],[\"pixidata\",{\"1\":{\"24\":2}}],[\"pi\",{\"1\":{\"7\":5,\"13\":1,\"19\":1,\"22\":1,\"28\":5,\"336\":1,\"337\":1}}],[\"p2\",{\"1\":{\"7\":2,\"392\":2}}],[\"p1\",{\"1\":{\"7\":2,\"392\":2}}],[\"runtimechunk\",{\"1\":{\"482\":1}}],[\"runtime\",{\"1\":{\"476\":4,\"482\":1}}],[\"rules中的规则会重写包中的规范\",{\"1\":{\"82\":1}}],[\"rules\",{\"0\":{\"82\":1},\"1\":{\"88\":1,\"152\":1,\"448\":1,\"451\":1,\"452\":1,\"453\":1,\"454\":1,\"459\":2,\"463\":1,\"464\":1,\"470\":1,\"471\":1,\"472\":1,\"473\":1,\"476\":1}}],[\"rnd=0\",{\"1\":{\"402\":1}}],[\"rtx\",{\"0\":{\"118\":1},\"1\":{\"118\":2}}],[\"rtl\",{\"1\":{\"18\":2}}],[\"race\",{\"0\":{\"393\":1}}],[\"radix\",{\"1\":{\"168\":3}}],[\"radial\",{\"1\":{\"56\":2}}],[\"radius\",{\"1\":{\"53\":3}}],[\"range\",{\"1\":{\"27\":1}}],[\"random\",{\"1\":{\"13\":1,\"27\":1,\"332\":1,\"336\":1}}],[\"right\",{\"1\":{\"49\":1,\"55\":1,\"61\":1,\"182\":1}}],[\"roles\",{\"1\":{\"255\":2}}],[\"row\",{\"1\":{\"185\":8}}],[\"rows\",{\"1\":{\"185\":1}}],[\"route\",{\"1\":{\"128\":3}}],[\"routes>\",{\"1\":{\"128\":1,\"130\":1}}],[\"routes\",{\"0\":{\"128\":1},\"1\":{\"128\":2}}],[\"route>\",{\"1\":{\"126\":1,\"128\":2,\"130\":2}}],[\"routeprops\",{\"1\":{\"119\":2}}],[\"router>\",{\"1\":{\"119\":3}}],[\"router\",{\"1\":{\"119\":4,\"120\":1,\"121\":1,\"124\":1,\"125\":1,\"128\":1,\"130\":1,\"131\":1,\"246\":1}}],[\"rouer\",{\"1\":{\"119\":1}}],[\"round\",{\"1\":{\"15\":2,\"21\":1,\"47\":1,\"336\":1}}],[\"root\",{\"1\":{\"90\":2,\"93\":4,\"95\":1,\"98\":2,\"119\":1}}],[\"rotate\",{\"1\":{\"19\":2,\"28\":3}}],[\"r2\",{\"1\":{\"13\":1}}],[\"r1\",{\"1\":{\"13\":1}}],[\"rgba\",{\"1\":{\"13\":1,\"24\":1}}],[\"r\",{\"1\":{\"7\":2,\"9\":2}}],[\"reuseexistingchunk\",{\"1\":{\"480\":2}}],[\"reg2\",{\"1\":{\"358\":2,\"360\":2}}],[\"reg\",{\"1\":{\"355\":4,\"356\":2,\"358\":2,\"359\":4,\"360\":2}}],[\"regexp\",{\"1\":{\"355\":2}}],[\"reverse\",{\"0\":{\"321\":1}}],[\"reject触发的错误\",{\"1\":{\"388\":1}}],[\"reject\",{\"0\":{\"391\":1},\"1\":{\"344\":1,\"389\":2,\"392\":1,\"393\":1}}],[\"reject两个回调\",{\"1\":{\"218\":1}}],[\"rejected\",{\"1\":{\"218\":1}}],[\"removeviewbox\",{\"1\":{\"477\":1}}],[\"removeeventlisiter\",{\"1\":{\"432\":1}}],[\"removeeventlistener\",{\"1\":{\"412\":2,\"413\":1}}],[\"removechild\",{\"1\":{\"402\":1,\"407\":3}}],[\"removecomments\",{\"1\":{\"151\":1}}],[\"rem相对于根元素\",{\"1\":{\"187\":1}}],[\"rem是一个相对单位\",{\"1\":{\"187\":1}}],[\"rem的区别\",{\"0\":{\"187\":1}}],[\"readystate\",{\"1\":{\"397\":1,\"399\":2}}],[\"readonly\",{\"0\":{\"437\":1},\"1\":{\"154\":3,\"441\":2}}],[\"reactive\",{\"0\":{\"424\":1},\"1\":{\"423\":1,\"424\":3,\"429\":4,\"432\":2,\"434\":1,\"435\":1,\"438\":2,\"441\":2}}],[\"reactrouter6\",{\"0\":{\"127\":1}}],[\"reactrouter\",{\"0\":{\"119\":1}}],[\"react<\",{\"1\":{\"93\":1,\"95\":1,\"96\":2,\"99\":2,\"102\":1,\"103\":1,\"104\":1,\"110\":1,\"113\":1,\"130\":1}}],[\"reactdom\",{\"1\":{\"90\":3,\"93\":2,\"102\":2}}],[\"react\",{\"0\":{\"89\":1,\"93\":1,\"224\":1,\"230\":1},\"1\":{\"90\":10,\"91\":8,\"92\":2,\"93\":9,\"95\":1,\"96\":5,\"97\":9,\"98\":2,\"99\":2,\"100\":2,\"101\":1,\"102\":1,\"104\":1,\"105\":5,\"106\":4,\"107\":3,\"109\":1,\"110\":3,\"111\":2,\"112\":2,\"113\":3,\"118\":6,\"119\":5,\"120\":1,\"121\":1,\"124\":1,\"125\":1,\"128\":1,\"130\":4,\"131\":1,\"133\":1,\"459\":1}}],[\"resource\",{\"1\":{\"453\":1,\"454\":1}}],[\"resolved\",{\"1\":{\"218\":1}}],[\"resolve\",{\"0\":{\"390\":1},\"1\":{\"152\":2,\"344\":10,\"389\":5,\"392\":1,\"393\":1,\"457\":1,\"460\":1,\"471\":1,\"472\":2,\"480\":2}}],[\"responsetext\",{\"1\":{\"397\":1,\"399\":2}}],[\"res2\",{\"1\":{\"389\":2}}],[\"rest\",{\"1\":{\"363\":2}}],[\"restore\",{\"1\":{\"23\":2,\"28\":6}}],[\"result\",{\"1\":{\"356\":2,\"359\":5,\"365\":3,\"402\":4}}],[\"res\",{\"1\":{\"171\":3,\"360\":3,\"389\":3,\"480\":1}}],[\"replace第二个参数可以是一个函数\",{\"1\":{\"359\":1}}],[\"replacestate方法向当前浏览器会话的历史堆栈中添加或替换一个状态\",{\"1\":{\"245\":1}}],[\"replace\",{\"0\":{\"310\":1},\"1\":{\"122\":1,\"125\":1,\"131\":1,\"310\":1,\"359\":3,\"374\":1}}],[\"repeating\",{\"1\":{\"55\":1,\"56\":1}}],[\"repeat\",{\"0\":{\"47\":1},\"1\":{\"13\":2,\"47\":1,\"185\":1}}],[\"re\",{\"1\":{\"106\":2}}],[\"reflect\",{\"1\":{\"427\":4}}],[\"refimpl\",{\"1\":{\"423\":1,\"434\":1}}],[\"refs\",{\"1\":{\"242\":1}}],[\"ref=\",{\"1\":{\"96\":1,\"99\":2,\"113\":2,\"423\":1}}],[\"ref\",{\"0\":{\"423\":1},\"1\":{\"96\":1,\"99\":2,\"113\":6,\"423\":5,\"429\":3,\"434\":3,\"435\":2,\"439\":1,\"440\":1,\"441\":1}}],[\"recommended\",{\"1\":{\"86\":1,\"88\":1}}],[\"rect\",{\"1\":{\"6\":2,\"105\":1}}],[\"request\",{\"1\":{\"399\":2}}],[\"requestanimationframe\",{\"1\":{\"17\":1,\"28\":1,\"341\":2}}],[\"require\",{\"1\":{\"77\":1,\"133\":1,\"152\":1,\"457\":1,\"460\":1,\"463\":1,\"464\":1,\"473\":2,\"480\":2}}],[\"relative\",{\"1\":{\"61\":2,\"179\":2}}],[\"renders\",{\"1\":{\"106\":2}}],[\"render=\",{\"1\":{\"101\":1,\"119\":1}}],[\"render后才被调用\",{\"1\":{\"97\":1}}],[\"render\",{\"1\":{\"17\":3,\"28\":3,\"90\":2,\"93\":1,\"95\":1,\"96\":2,\"98\":3,\"101\":1,\"119\":2,\"128\":1}}],[\"redirect\",{\"1\":{\"125\":1}}],[\"reduce\",{\"0\":{\"331\":1},\"1\":{\"331\":1}}],[\"reducers\",{\"1\":{\"118\":1}}],[\"reducer\",{\"1\":{\"118\":5}}],[\"reduxjs\",{\"1\":{\"118\":2}}],[\"reduxt\",{\"1\":{\"118\":1}}],[\"redux都是比不可少的\",{\"1\":{\"118\":1}}],[\"redux\",{\"0\":{\"117\":1,\"118\":1},\"1\":{\"117\":1,\"118\":5}}],[\"red\",{\"1\":{\"13\":3,\"18\":1,\"23\":1,\"25\":1,\"28\":1,\"55\":2,\"91\":1,\"132\":1,\"178\":1,\"379\":1,\"418\":1}}],[\"return\",{\"1\":{\"1\":1,\"27\":1,\"32\":2,\"35\":3,\"95\":1,\"96\":2,\"98\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":3,\"106\":1,\"107\":1,\"109\":3,\"110\":1,\"111\":3,\"113\":3,\"116\":1,\"120\":1,\"130\":1,\"153\":1,\"155\":1,\"158\":1,\"160\":1,\"161\":2,\"164\":3,\"166\":4,\"169\":3,\"170\":1,\"171\":1,\"192\":3,\"193\":1,\"194\":1,\"212\":7,\"222\":1,\"276\":1,\"277\":3,\"287\":1,\"288\":1,\"295\":1,\"297\":2,\"298\":2,\"327\":1,\"330\":1,\"344\":1,\"345\":3,\"347\":9,\"349\":3,\"353\":1,\"363\":1,\"365\":1,\"377\":4,\"384\":3,\"389\":1,\"399\":1,\"402\":1,\"417\":3,\"422\":1,\"427\":3,\"428\":1,\"432\":2,\"434\":1,\"435\":1,\"439\":4,\"440\":2}}],[\"拆分数组\",{\"1\":{\"333\":1}}],[\"拆分方式\",{\"1\":{\"6\":1}}],[\"拆分绘制方式\",{\"1\":{\"6\":1}}],[\"580\",{\"1\":{\"17\":2}}],[\"50000\",{\"1\":{\"480\":1}}],[\"500之间\",{\"1\":{\"398\":1}}],[\"500\",{\"1\":{\"7\":1,\"9\":1,\"11\":1,\"13\":1,\"398\":1,\"439\":1}}],[\"50\",{\"1\":{\"7\":2,\"19\":1,\"25\":4,\"86\":1,\"182\":4}}],[\"5\",{\"1\":{\"6\":2,\"13\":1,\"14\":1,\"19\":2,\"57\":1,\"119\":1,\"170\":2,\"188\":1,\"309\":1,\"311\":2,\"312\":2,\"332\":1,\"347\":1,\"358\":2,\"365\":1,\"376\":1,\"419\":1,\"477\":1}}],[\"2<\",{\"1\":{\"415\":1}}],[\"21\",{\"1\":{\"381\":1}}],[\"210\",{\"1\":{\"28\":1}}],[\"2个盘子\",{\"1\":{\"347\":1}}],[\"2个值\",{\"1\":{\"53\":1}}],[\"2math\",{\"1\":{\"337\":1}}],[\"29\",{\"1\":{\"302\":1}}],[\"290\",{\"1\":{\"28\":1}}],[\"2的幂数等于转其他进制需要的位数进行分离\",{\"1\":{\"263\":1}}],[\"24\",{\"1\":{\"263\":2}}],[\"2^4\",{\"1\":{\"263\":1}}],[\"2^0\",{\"1\":{\"263\":6}}],[\"2^1\",{\"1\":{\"263\":6}}],[\"2^2\",{\"1\":{\"263\":5}}],[\"2^3\",{\"1\":{\"263\":4}}],[\"23\",{\"1\":{\"137\":1,\"276\":1,\"281\":2,\"302\":3,\"334\":2}}],[\"230\",{\"1\":{\"28\":1}}],[\"271\",{\"1\":{\"263\":1}}],[\"270deg\",{\"1\":{\"55\":1}}],[\"275\",{\"1\":{\"11\":1}}],[\"28\",{\"1\":{\"359\":3}}],[\"280\",{\"1\":{\"68\":1,\"86\":1}}],[\"285\",{\"1\":{\"28\":1,\"84\":1}}],[\"287\",{\"1\":{\"6\":2}}],[\"2020\",{\"1\":{\"359\":3}}],[\"2022\",{\"1\":{\"302\":1}}],[\"20px\",{\"1\":{\"53\":2,\"178\":1}}],[\"20\",{\"1\":{\"13\":1,\"17\":1,\"21\":1,\"381\":1,\"480\":1}}],[\"200之间\",{\"1\":{\"398\":1}}],[\"20000\",{\"1\":{\"480\":1}}],[\"2000\",{\"1\":{\"343\":1,\"352\":1,\"353\":1,\"477\":1}}],[\"200px\",{\"1\":{\"62\":2}}],[\"200\",{\"1\":{\"7\":1,\"8\":1,\"13\":5,\"18\":2,\"19\":3,\"22\":2,\"24\":2,\"25\":2,\"379\":1,\"398\":1,\"399\":2,\"439\":1}}],[\"2\",{\"0\":{\"168\":1},\"1\":{\"7\":4,\"13\":1,\"17\":1,\"22\":2,\"24\":3,\"28\":7,\"72\":1,\"74\":1,\"97\":1,\"119\":1,\"126\":1,\"168\":1,\"170\":2,\"194\":2,\"209\":8,\"215\":1,\"240\":1,\"263\":8,\"268\":3,\"281\":1,\"302\":5,\"310\":1,\"311\":1,\"312\":2,\"316\":1,\"325\":12,\"326\":1,\"330\":1,\"331\":2,\"334\":7,\"336\":1,\"337\":2,\"339\":1,\"340\":1,\"343\":1,\"344\":3,\"347\":4,\"358\":2,\"359\":3,\"365\":1,\"376\":4,\"397\":1,\"399\":1,\"408\":1,\"417\":1,\"464\":1,\"480\":1}}],[\"256\",{\"1\":{\"396\":1}}],[\"255\",{\"1\":{\"13\":1,\"24\":1}}],[\"25\",{\"1\":{\"6\":4,\"19\":1,\"25\":6}}],[\"250\",{\"1\":{\"6\":2,\"8\":2,\"11\":1,\"17\":1,\"28\":1}}],[\"2d\",{\"1\":{\"1\":1,\"21\":1,\"27\":1,\"28\":1}}],[\"以上的语法处理\",{\"1\":{\"483\":1}}],[\"以上配置是否锁定\",{\"1\":{\"384\":1}}],[\"以下方式任选其一\",{\"1\":{\"456\":1}}],[\"以下配置是否锁定\",{\"1\":{\"384\":1}}],[\"以一个或多个文件作为打包入口\",{\"1\":{\"446\":1}}],[\"以传入的参数作为原型进行的对象的创建\",{\"1\":{\"382\":1}}],[\"以供所有实例对象调用\",{\"1\":{\"365\":1}}],[\"以foo作为原型创建一个对象\",{\"1\":{\"363\":1}}],[\"以对象作为主要的操作核心\",{\"1\":{\"361\":1}}],[\"以最后一次为准\",{\"1\":{\"352\":1}}],[\"以最近的\",{\"1\":{\"61\":1}}],[\"以指定字符切割字符串\",{\"1\":{\"313\":1}}],[\"以数组的形式进行参数接收\",{\"1\":{\"302\":1}}],[\"以数组的形式存储函数的实参\",{\"1\":{\"300\":1}}],[\"以目录\",{\"1\":{\"265\":1}}],[\"以健值对\",{\"1\":{\"219\":1}}],[\"以键值对的形式进行存储\",{\"1\":{\"216\":1}}],[\"以当前文件作为模版创建新的html\",{\"1\":{\"460\":1}}],[\"以当前位置为基准进行偏移\",{\"1\":{\"179\":1}}],[\"以当前路径进行裁剪\",{\"1\":{\"22\":1}}],[\"以便使用该类型下的方法或属性\",{\"1\":{\"141\":1}}],[\"以文本内容剪裁\",{\"1\":{\"51\":1}}],[\"以起始点与点1连接的线和点1与点2连接的线作为切线画半径为\",{\"1\":{\"9\":1}}],[\"以\",{\"1\":{\"6\":1,\"7\":1,\"63\":1,\"333\":1,\"418\":1}}],[\"矩形\",{\"0\":{\"6\":1}}],[\"symbol\",{\"0\":{\"372\":1},\"1\":{\"367\":2,\"372\":2,\"373\":7,\"374\":3}}],[\"sys\",{\"1\":{\"150\":1}}],[\"sdfajdsfoie9320\",{\"1\":{\"357\":7}}],[\"sin\",{\"1\":{\"337\":1}}],[\"sizing\",{\"0\":{\"177\":1}}],[\"size\",{\"0\":{\"48\":1},\"1\":{\"45\":1,\"56\":2,\"377\":3}}],[\"swicth\",{\"1\":{\"269\":1}}],[\"switchstatus\",{\"1\":{\"353\":4}}],[\"switch>\",{\"1\":{\"126\":1}}],[\"switch\",{\"0\":{\"269\":1},\"1\":{\"109\":1,\"269\":1}}],[\"slot\",{\"1\":{\"444\":2}}],[\"slots\",{\"1\":{\"253\":2,\"422\":1}}],[\"slice\",{\"0\":{\"311\":1},\"1\":{\"13\":1,\"27\":1,\"192\":2,\"215\":2,\"264\":1,\"311\":5,\"349\":1}}],[\"svg\",{\"1\":{\"477\":1}}],[\"svgo\",{\"1\":{\"477\":3}}],[\"svg>\",{\"1\":{\"188\":1}}],[\"svg矢量图设置text\",{\"1\":{\"188\":1}}],[\"some\",{\"0\":{\"328\":1},\"1\":{\"328\":2,\"377\":1}}],[\"solid\",{\"1\":{\"178\":1}}],[\"sort\",{\"0\":{\"332\":1},\"1\":{\"170\":2,\"332\":3}}],[\"sourcemap\",{\"0\":{\"467\":1}}],[\"source方法创建一个取消请求的实例\",{\"1\":{\"203\":1}}],[\"source\",{\"1\":{\"27\":1,\"467\":3}}],[\"special\",{\"1\":{\"402\":2}}],[\"splice\",{\"0\":{\"325\":1},\"1\":{\"325\":5,\"377\":1}}],[\"splitchunks\",{\"1\":{\"480\":1}}],[\"split\",{\"0\":{\"313\":1,\"479\":1},\"1\":{\"170\":1,\"313\":2,\"479\":1}}],[\"spa\",{\"0\":{\"232\":1}}],[\"space\",{\"1\":{\"47\":1}}],[\"sherry\",{\"1\":{\"360\":1}}],[\"show\",{\"1\":{\"237\":1,\"251\":1,\"418\":3}}],[\"show的区别\",{\"0\":{\"237\":1}}],[\"showinfo\",{\"1\":{\"161\":2}}],[\"shrink\",{\"1\":{\"184\":1}}],[\"shift\",{\"0\":{\"324\":1},\"1\":{\"166\":1,\"324\":1}}],[\"shaking\",{\"0\":{\"475\":1}}],[\"shallowreadonly\",{\"0\":{\"437\":1}}],[\"shallowreactive\",{\"0\":{\"436\":1},\"1\":{\"436\":1}}],[\"shallowref\",{\"0\":{\"436\":1},\"1\":{\"436\":1}}],[\"shanghai\",{\"1\":{\"276\":1}}],[\"shape\",{\"1\":{\"56\":2}}],[\"shadowoffsety\",{\"1\":{\"16\":1}}],[\"shadowoffsetx\",{\"1\":{\"16\":2}}],[\"shadowcolor\",{\"1\":{\"16\":2}}],[\"shadowblur\",{\"1\":{\"16\":2}}],[\"sass\",{\"1\":{\"450\":1}}],[\"say\",{\"1\":{\"153\":1,\"155\":1,\"156\":1,\"157\":2,\"370\":1}}],[\"savebtn\",{\"1\":{\"27\":2}}],[\"save\",{\"1\":{\"23\":2,\"27\":2,\"28\":6,\"152\":1,\"451\":1,\"457\":1,\"460\":1,\"461\":1,\"463\":1,\"464\":2,\"477\":3}}],[\"suggest\",{\"1\":{\"402\":2}}],[\"sum\",{\"1\":{\"331\":2,\"345\":2,\"347\":2,\"365\":2}}],[\"suspense\",{\"0\":{\"444\":1}}],[\"suspense>\",{\"1\":{\"126\":1,\"444\":1}}],[\"suspense组件fallback属性指定路由加载完成之前显示的页面\",{\"1\":{\"126\":1}}],[\"substring\",{\"0\":{\"312\":1},\"1\":{\"312\":3}}],[\"substr\",{\"0\":{\"312\":1},\"1\":{\"312\":3}}],[\"subscribe\",{\"1\":{\"98\":1}}],[\"sub\",{\"1\":{\"109\":1,\"345\":3,\"402\":1}}],[\"super\",{\"1\":{\"96\":1,\"155\":4,\"370\":2,\"371\":1}}],[\"serve\",{\"1\":{\"461\":1}}],[\"server\",{\"1\":{\"93\":1,\"461\":1,\"462\":1}}],[\"send\",{\"1\":{\"399\":2}}],[\"send方法可接收请求参数\",{\"1\":{\"399\":1}}],[\"seo不友好\",{\"1\":{\"232\":1}}],[\"sessionstorage浏览器本地存储的一种方式\",{\"1\":{\"216\":1}}],[\"sessionstorage\",{\"0\":{\"216\":1}}],[\"self\",{\"1\":{\"184\":1,\"185\":2}}],[\"selector\",{\"1\":{\"180\":1}}],[\"search\",{\"1\":{\"122\":1,\"374\":1,\"402\":4}}],[\"setrequestheader\",{\"1\":{\"396\":1}}],[\"setattribute\",{\"1\":{\"387\":1}}],[\"setup的参数\",{\"1\":{\"422\":1}}],[\"setup\",{\"0\":{\"422\":1},\"1\":{\"240\":2,\"422\":7,\"431\":2,\"432\":2,\"434\":1,\"439\":1,\"440\":2,\"444\":1,\"445\":1}}],[\"setupproxy\",{\"1\":{\"133\":2}}],[\"setinterval\",{\"0\":{\"340\":1},\"1\":{\"217\":1,\"340\":1}}],[\"set\",{\"0\":{\"219\":1,\"375\":1},\"1\":{\"158\":1,\"170\":3,\"209\":2,\"219\":5,\"375\":2,\"376\":3,\"379\":3,\"384\":3,\"417\":1,\"426\":1,\"427\":2,\"428\":1,\"439\":1}}],[\"setter\",{\"1\":{\"234\":1,\"417\":2,\"439\":1}}],[\"setters\",{\"1\":{\"158\":1}}],[\"settitle\",{\"1\":{\"106\":2,\"107\":2,\"113\":2}}],[\"settimeout\",{\"0\":{\"221\":1,\"339\":1},\"1\":{\"97\":2,\"107\":1,\"169\":2,\"203\":1,\"217\":1,\"221\":1,\"339\":1,\"340\":1,\"343\":3,\"352\":1,\"353\":1,\"389\":2,\"439\":1}}],[\"setdata\",{\"1\":{\"116\":3}}],[\"setstate方法进行修改\",{\"1\":{\"97\":1}}],[\"setstate\",{\"0\":{\"106\":1,\"230\":1},\"1\":{\"97\":4,\"106\":2,\"230\":2}}],[\"setobj\",{\"1\":{\"97\":4}}],[\"setcount\",{\"1\":{\"97\":4,\"114\":1}}],[\"setlinedash\",{\"1\":{\"15\":1}}],[\"styl\",{\"1\":{\"450\":1}}],[\"style=\",{\"1\":{\"91\":1,\"132\":1,\"418\":1}}],[\"style\",{\"1\":{\"91\":1,\"406\":1,\"418\":1,\"451\":4,\"463\":2,\"469\":1,\"470\":1}}],[\"stop\",{\"1\":{\"418\":1}}],[\"stoppropagation\",{\"1\":{\"414\":1}}],[\"store=\",{\"1\":{\"118\":1}}],[\"store\",{\"1\":{\"118\":11}}],[\"str2\",{\"1\":{\"360\":2}}],[\"str6\",{\"1\":{\"358\":2}}],[\"str\",{\"1\":{\"138\":1,\"356\":2,\"358\":1,\"360\":2}}],[\"strictnullchecks\",{\"1\":{\"151\":1}}],[\"strict\",{\"1\":{\"151\":1}}],[\"strictmode标签开启严格模式\",{\"1\":{\"106\":1}}],[\"stringify转换成json字符串再进行比较\",{\"1\":{\"212\":1}}],[\"stringify转换成json字符串\",{\"1\":{\"192\":1}}],[\"string\",{\"0\":{\"306\":1},\"1\":{\"137\":3,\"139\":5,\"140\":3,\"141\":1,\"142\":5,\"143\":1,\"153\":3,\"154\":1,\"155\":4,\"158\":4,\"159\":2,\"161\":5,\"162\":3,\"163\":2,\"168\":2,\"190\":1,\"214\":1,\"263\":1,\"287\":1,\"290\":1,\"303\":1}}],[\"stroe\",{\"1\":{\"118\":1}}],[\"stroketext\",{\"1\":{\"17\":1,\"18\":2}}],[\"strokestyle\",{\"1\":{\"13\":2,\"18\":1,\"27\":1,\"28\":2}}],[\"strokerect\",{\"1\":{\"6\":2}}],[\"stroke\",{\"1\":{\"5\":1,\"7\":4,\"8\":1,\"9\":1,\"11\":1,\"21\":1,\"22\":1,\"25\":1,\"27\":1,\"28\":2}}],[\"sticky\",{\"1\":{\"61\":1}}],[\"status\",{\"1\":{\"398\":1,\"399\":4}}],[\"static\",{\"1\":{\"154\":1,\"179\":1,\"371\":2,\"377\":1}}],[\"statements\",{\"1\":{\"269\":2}}],[\"statement\",{\"1\":{\"267\":2,\"268\":5,\"271\":1,\"272\":2}}],[\"state\",{\"0\":{\"97\":1},\"1\":{\"97\":8,\"106\":3,\"109\":9,\"114\":3,\"118\":6,\"229\":1,\"230\":2,\"248\":1}}],[\"standalone\",{\"1\":{\"91\":1}}],[\"standard来举例\",{\"1\":{\"87\":1}}],[\"standard\",{\"1\":{\"80\":2,\"87\":2,\"88\":1}}],[\"starttransition\",{\"1\":{\"115\":2}}],[\"start\",{\"1\":{\"56\":1,\"93\":2,\"185\":2,\"347\":6}}],[\"stack\",{\"1\":{\"34\":1,\"35\":5,\"166\":5}}],[\"s\",{\"1\":{\"28\":2,\"118\":1,\"313\":1,\"357\":4,\"402\":1}}],[\"scss\",{\"1\":{\"450\":1}}],[\"scopes\",{\"1\":{\"300\":1}}],[\"scoll\",{\"1\":{\"52\":1}}],[\"scalable\",{\"1\":{\"186\":1}}],[\"scale=1\",{\"1\":{\"186\":1}}],[\"scale\",{\"1\":{\"19\":2,\"186\":3,\"188\":1}}],[\"script\",{\"0\":{\"489\":1},\"1\":{\"204\":1,\"386\":1,\"402\":11}}],[\"scripts\",{\"1\":{\"93\":5,\"462\":1}}],[\"script>\",{\"1\":{\"1\":1,\"21\":1,\"27\":1,\"28\":1,\"90\":2,\"91\":2,\"386\":1,\"417\":1,\"418\":1}}],[\"square\",{\"1\":{\"15\":1}}],[\"src^=\",{\"1\":{\"63\":1}}],[\"src=\",{\"1\":{\"63\":2,\"90\":2,\"91\":1,\"417\":1}}],[\"src\",{\"1\":{\"13\":1,\"17\":1,\"22\":1,\"24\":1,\"44\":1,\"63\":1,\"93\":1,\"147\":1,\"152\":1,\"402\":2,\"457\":1,\"461\":1,\"471\":1,\"472\":1,\"480\":2}}],[\"绘制方向\",{\"1\":{\"18\":1}}],[\"绘制方式\",{\"0\":{\"5\":1}}],[\"绘制最大宽度\",{\"1\":{\"18\":1}}],[\"绘制文本\",{\"0\":{\"18\":1}}],[\"绘制视频\",{\"1\":{\"17\":1}}],[\"绘制到画布多宽多高的位置\",{\"1\":{\"17\":1}}],[\"绘制多宽多高\",{\"1\":{\"17\":1}}],[\"绘制图片\",{\"0\":{\"17\":1}}],[\"绘制图形\",{\"0\":{\"2\":1}}],[\"绘制描边矩形\",{\"1\":{\"6\":1}}],[\"绘制填充矩形\",{\"1\":{\"6\":1}}],[\"可让浏览器在空闲的时间加载后面需要使用的资源\",{\"1\":{\"481\":1}}],[\"可为打包模块命名\",{\"1\":{\"480\":1}}],[\"可为对象下的每个属性创建\",{\"1\":{\"435\":1}}],[\"可直接在\",{\"1\":{\"456\":1}}],[\"可直接在模版中使用\",{\"1\":{\"417\":1}}],[\"可指定去多少位\",{\"1\":{\"453\":1}}],[\"可指定为负\",{\"1\":{\"61\":1}}],[\"可提升性能\",{\"1\":{\"418\":1}}],[\"可配合\",{\"1\":{\"418\":1}}],[\"可配置多个\",{\"1\":{\"133\":1}}],[\"可定义一个\",{\"1\":{\"417\":1}}],[\"可阻止事件的冒泡\",{\"1\":{\"414\":1}}],[\"可减少dom的操作\",{\"1\":{\"407\":1}}],[\"可获取元素行内样式或设置元素样式\",{\"1\":{\"406\":1}}],[\"可获取dom节点\",{\"1\":{\"240\":1}}],[\"可在原型上添加方法和属性\",{\"1\":{\"365\":1}}],[\"可简写为\",{\"1\":{\"334\":1}}],[\"可多个\",{\"1\":{\"325\":1}}],[\"可正可负\",{\"1\":{\"312\":2}}],[\"可重写tostring方法\",{\"1\":{\"287\":1}}],[\"可删除\",{\"1\":{\"277\":1}}],[\"可结束本次循环\",{\"1\":{\"271\":1}}],[\"可选\",{\"1\":{\"268\":1,\"271\":1,\"429\":1}}],[\"可选属性\",{\"0\":{\"142\":1}}],[\"可进行用户身份的校验\",{\"1\":{\"247\":1}}],[\"可进行图案填充\",{\"1\":{\"13\":1}}],[\"可复用性\",{\"1\":{\"233\":1}}],[\"可被垃圾回收机制回收\",{\"1\":{\"219\":1}}],[\"可用location\",{\"1\":{\"245\":1}}],[\"可用于主动释放引用\",{\"1\":{\"191\":1}}],[\"可用通过\",{\"1\":{\"155\":1}}],[\"可视区域\",{\"1\":{\"186\":1}}],[\"可单独设置\",{\"1\":{\"185\":1}}],[\"可单独设置某个角\",{\"1\":{\"53\":1}}],[\"可有可无的属性\",{\"1\":{\"142\":1}}],[\"可根据特定的名称得到对应的枚举值\",{\"1\":{\"139\":1}}],[\"可省略host\",{\"1\":{\"133\":1}}],[\"可修改样式布局\",{\"1\":{\"108\":1}}],[\"可动态的插入标签等\",{\"1\":{\"108\":1}}],[\"可能会出现卡顿\",{\"1\":{\"340\":1}}],[\"可能会出现值计算错误的问题\",{\"1\":{\"97\":1}}],[\"可能会覆盖后面的元素\",{\"1\":{\"59\":1}}],[\"可通过实参的形式将错误信息传递给catch\",{\"1\":{\"389\":1}}],[\"可通过实参的方式将数据传递给\",{\"1\":{\"389\":1}}],[\"可通过前缀\",{\"1\":{\"387\":1}}],[\"可通过改变\",{\"1\":{\"326\":1}}],[\"可通过arguments\",{\"1\":{\"300\":1}}],[\"可通过\",{\"1\":{\"61\":1,\"287\":1,\"288\":1,\"289\":1,\"339\":1,\"340\":1,\"398\":1}}],[\"可与其他元素并列一排\",{\"1\":{\"43\":1}}],[\"可达对象\",{\"1\":{\"35\":1}}],[\"可使用正则匹配\",{\"1\":{\"310\":1}}],[\"可使用箭头函数\",{\"1\":{\"301\":1}}],[\"可使用进制表示\",{\"1\":{\"139\":1}}],[\"可使用uselayouteffect进行替换\",{\"1\":{\"108\":1}}],[\"可使用\",{\"1\":{\"19\":1,\"412\":1}}],[\"可以生成一个\",{\"1\":{\"482\":1}}],[\"可以返回一个\",{\"1\":{\"444\":1}}],[\"可以显示的控制和触发响应\",{\"1\":{\"439\":1}}],[\"可以解决数组去重的问题\",{\"1\":{\"375\":1}}],[\"可以解决这个问题\",{\"1\":{\"97\":1}}],[\"可以对属性是否可以被修改\",{\"1\":{\"384\":1}}],[\"可以对\",{\"1\":{\"375\":1}}],[\"可以通过在\",{\"1\":{\"453\":1}}],[\"可以通过使用\",{\"1\":{\"285\":1}}],[\"可以通过实现接口来定义类的数据结构\",{\"1\":{\"161\":1}}],[\"可以声明变量\",{\"1\":{\"271\":1}}],[\"可以判断出具体的数据类型\",{\"1\":{\"264\":1}}],[\"可以判断类型后进行赋值\",{\"1\":{\"139\":1}}],[\"可以替代\",{\"1\":{\"227\":1}}],[\"可以存放任何值\",{\"1\":{\"219\":1}}],[\"可以准确的判断引用类型数据\",{\"1\":{\"211\":1}}],[\"可以设置1\",{\"1\":{\"188\":1}}],[\"可以是变量\",{\"1\":{\"417\":1}}],[\"可以是任何有效的\",{\"1\":{\"384\":1}}],[\"可以是任何值\",{\"1\":{\"219\":1}}],[\"可以是多个\",{\"1\":{\"302\":1}}],[\"可以是定值\",{\"1\":{\"186\":1}}],[\"可以是字符串形式\",{\"1\":{\"80\":1}}],[\"可以说bfc就是一个作用范围\",{\"1\":{\"174\":1}}],[\"可以更友好的提示错误信息\",{\"1\":{\"163\":1}}],[\"可以简化联合类型\",{\"1\":{\"143\":1}}],[\"可以取其中一种类型\",{\"1\":{\"140\":1}}],[\"可以连接多个类型\",{\"1\":{\"140\":1}}],[\"可以在组件内部继续使用路由映射\",{\"1\":{\"130\":1}}],[\"可以在标签体内创建内容\",{\"1\":{\"1\":1}}],[\"可以直接使用缓存\",{\"1\":{\"398\":1}}],[\"可以直接修改\",{\"1\":{\"118\":1}}],[\"可以直接访问\",{\"1\":{\"98\":1}}],[\"可以进行\",{\"1\":{\"101\":1}}],[\"可以使用一个变量代替数据类型\",{\"1\":{\"164\":1}}],[\"可以使用outlet组件进行嵌套路由站位\",{\"1\":{\"130\":1}}],[\"可以使用\",{\"1\":{\"100\":1,\"263\":1,\"435\":1}}],[\"可以使用插值表达式\",{\"1\":{\"91\":1}}],[\"可以确保每次渲染获取的都是同一个对象\",{\"1\":{\"99\":1}}],[\"可以省略前缀eslint\",{\"1\":{\"80\":1}}],[\"可以修改\",{\"1\":{\"79\":1,\"318\":1}}],[\"可以读取\",{\"1\":{\"79\":2}}],[\"可以创建独立的配置文件\",{\"1\":{\"72\":1}}],[\"可以找到内存中的垃圾进行释放和回收\",{\"1\":{\"35\":1}}],[\"可以将画笔抬起移至下一个绘制起点\",{\"1\":{\"7\":1}}],[\"可清除画布上的内容\",{\"1\":{\"4\":1}}],[\"hmr\",{\"1\":{\"469\":2}}],[\"hot\",{\"1\":{\"469\":4}}],[\"hotmodulereplacement\",{\"0\":{\"469\":1},\"1\":{\"469\":1}}],[\"host\",{\"1\":{\"461\":1}}],[\"hooks\",{\"0\":{\"229\":1},\"1\":{\"229\":1}}],[\"hook\",{\"0\":{\"116\":1,\"432\":1},\"1\":{\"116\":1,\"432\":2}}],[\"hlt\",{\"1\":{\"347\":4}}],[\"highlight=\",{\"1\":{\"402\":1}}],[\"his\",{\"1\":{\"311\":1}}],[\"history模式\",{\"1\":{\"245\":1}}],[\"history\",{\"1\":{\"122\":2}}],[\"hidden\",{\"0\":{\"183\":1},\"1\":{\"60\":1,\"180\":1,\"184\":1}}],[\"hidden样式\",{\"1\":{\"41\":1}}],[\"h1dom\",{\"1\":{\"384\":3}}],[\"h1ref\",{\"1\":{\"96\":2,\"99\":4}}],[\"h1><\",{\"1\":{\"111\":1}}],[\"h1>\",{\"1\":{\"91\":1,\"93\":1,\"95\":1,\"96\":2,\"98\":1,\"99\":2,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"110\":1,\"111\":1,\"113\":2,\"130\":1,\"415\":1}}],[\"h1\",{\"1\":{\"90\":3,\"91\":2,\"103\":1,\"384\":1,\"404\":6,\"415\":4}}],[\"http默认端口是80\",{\"1\":{\"202\":1}}],[\"http和https的区别\",{\"0\":{\"202\":1}}],[\"http\",{\"1\":{\"133\":3,\"202\":1,\"399\":2,\"401\":1,\"477\":1}}],[\"https是http协议更加安全的版本\",{\"1\":{\"202\":1}}],[\"https\",{\"1\":{\"90\":2,\"91\":1,\"396\":1,\"401\":1,\"417\":1}}],[\"htmlwebpackplugin\",{\"1\":{\"460\":3,\"480\":2}}],[\"htmlcollection的区别\",{\"1\":{\"409\":1}}],[\"htmlcollection\",{\"1\":{\"404\":1,\"409\":1}}],[\"htmlheadelement\",{\"1\":{\"287\":1}}],[\"html元素在这个环境中按照规则进行布局\",{\"1\":{\"174\":1}}],[\"html\",{\"1\":{\"45\":1,\"93\":1,\"121\":1,\"187\":1,\"396\":1,\"405\":2,\"418\":3,\"443\":2,\"451\":1,\"460\":4,\"464\":1,\"480\":2}}],[\"href=\",{\"1\":{\"63\":2}}],[\"href\",{\"1\":{\"27\":1,\"63\":2}}],[\"handler\",{\"1\":{\"417\":1}}],[\"handlecount\",{\"1\":{\"97\":2}}],[\"handlechange\",{\"1\":{\"27\":3}}],[\"has\",{\"1\":{\"376\":2,\"377\":1,\"379\":2}}],[\"hasinstance\",{\"1\":{\"367\":2}}],[\"hash获取hash值\",{\"1\":{\"245\":1}}],[\"hash模式\",{\"1\":{\"245\":1}}],[\"hash\",{\"1\":{\"122\":2,\"453\":6,\"454\":1,\"470\":1}}],[\"hashrouter\",{\"1\":{\"121\":2}}],[\"hartpath\",{\"1\":{\"11\":5}}],[\"hello\",{\"1\":{\"90\":1,\"91\":1,\"93\":1,\"97\":3,\"98\":2,\"101\":1,\"105\":2,\"106\":2,\"107\":2,\"113\":1,\"319\":2}}],[\"heart\",{\"1\":{\"25\":5}}],[\"heartpath\",{\"1\":{\"25\":10}}],[\"height\",{\"1\":{\"25\":1,\"27\":1,\"28\":1,\"185\":2,\"379\":2}}],[\"height=\",{\"1\":{\"1\":1,\"21\":1,\"27\":1,\"28\":1}}],[\"h\",{\"1\":{\"4\":1,\"6\":4,\"17\":2,\"24\":2,\"25\":2,\"28\":2,\"313\":1,\"422\":2}}],[\"w3\",{\"1\":{\"477\":1}}],[\"www\",{\"1\":{\"396\":1,\"477\":1}}],[\"wui\",{\"1\":{\"396\":1}}],[\"writable\",{\"1\":{\"384\":2}}],[\"world\",{\"1\":{\"319\":2}}],[\"works\",{\"1\":{\"473\":1}}],[\"work\",{\"1\":{\"302\":1}}],[\"want\",{\"1\":{\"396\":2}}],[\"warn\",{\"1\":{\"265\":1}}],[\"warp\",{\"1\":{\"184\":1}}],[\"watcheffect\",{\"0\":{\"430\":1},\"1\":{\"430\":3}}],[\"watch是监测vue实例对象的变化\",{\"1\":{\"417\":1}}],[\"watch\",{\"0\":{\"429\":1},\"1\":{\"239\":1,\"417\":3,\"429\":6}}],[\"watch和methods的区别\",{\"0\":{\"239\":1}}],[\"weakmap\",{\"0\":{\"219\":1},\"1\":{\"219\":5}}],[\"weakset\",{\"0\":{\"219\":1},\"1\":{\"219\":5}}],[\"webpackchunkname\",{\"1\":{\"480\":2}}],[\"webpack内置了这个插件\",{\"1\":{\"473\":1}}],[\"webpack中使用\",{\"0\":{\"457\":1}}],[\"webpack5\",{\"1\":{\"452\":1}}],[\"webpack开启gzip压缩\",{\"1\":{\"235\":1}}],[\"webpack\",{\"0\":{\"152\":1,\"491\":1},\"1\":{\"77\":1,\"93\":1,\"152\":3,\"446\":2,\"447\":6,\"448\":2,\"451\":2,\"453\":1,\"455\":1,\"457\":2,\"459\":1,\"460\":2,\"461\":3,\"462\":6,\"464\":2,\"465\":1,\"467\":1,\"469\":2,\"470\":1,\"473\":2,\"475\":1,\"477\":1,\"479\":1,\"480\":2,\"481\":1}}],[\"window\",{\"0\":{\"369\":1},\"1\":{\"169\":1,\"298\":1,\"301\":4,\"302\":1,\"326\":1,\"369\":3,\"388\":1,\"403\":1,\"432\":2}}],[\"width\",{\"1\":{\"25\":1,\"27\":1,\"28\":1,\"178\":1,\"185\":2,\"186\":3,\"379\":2}}],[\"width=device\",{\"1\":{\"186\":1}}],[\"width=\",{\"1\":{\"1\":1,\"21\":1,\"27\":1,\"28\":1}}],[\"why\",{\"0\":{\"168\":1}}],[\"what\",{\"0\":{\"168\":1}}],[\"while\",{\"0\":{\"272\":2},\"1\":{\"166\":1,\"272\":4,\"356\":1,\"360\":1}}],[\"when=\",{\"1\":{\"124\":1}}],[\"when\",{\"1\":{\"124\":1}}],[\"w\",{\"1\":{\"4\":1,\"6\":4,\"17\":2,\"24\":2,\"25\":2,\"145\":1,\"146\":1,\"158\":1,\"194\":1,\"304\":2,\"320\":2,\"357\":4}}],[\"yhh\",{\"1\":{\"387\":3}}],[\"yhh=\",{\"1\":{\"387\":1}}],[\"y=\",{\"1\":{\"188\":1}}],[\"yaml\",{\"1\":{\"76\":1}}],[\"y的值\",{\"1\":{\"56\":1}}],[\"yellow\",{\"1\":{\"23\":1,\"55\":1,\"440\":1}}],[\"y2\",{\"1\":{\"9\":1,\"13\":2}}],[\"y1\",{\"1\":{\"9\":1,\"13\":2}}],[\"y\",{\"1\":{\"4\":1,\"6\":4,\"7\":2,\"8\":2,\"13\":1,\"15\":2,\"16\":1,\"17\":2,\"18\":3,\"21\":2,\"24\":2,\"25\":16,\"27\":4,\"48\":1,\"49\":2,\"163\":2,\"188\":1,\"432\":2,\"447\":1}}],[\"xmlns\",{\"1\":{\"477\":1}}],[\"xmlhttprequest\",{\"1\":{\"395\":1,\"399\":2}}],[\"xx\",{\"1\":{\"469\":1}}],[\"xhr\",{\"1\":{\"399\":15}}],[\"xww\",{\"1\":{\"302\":1}}],[\"x=\",{\"1\":{\"188\":1}}],[\"x2\",{\"1\":{\"9\":1,\"13\":2}}],[\"x1\",{\"1\":{\"9\":1,\"13\":2}}],[\"x\",{\"1\":{\"4\":1,\"6\":4,\"7\":2,\"8\":2,\"13\":1,\"15\":2,\"17\":2,\"18\":3,\"21\":2,\"24\":2,\"25\":16,\"27\":4,\"28\":4,\"48\":1,\"49\":2,\"56\":1,\"163\":2,\"164\":2,\"240\":2,\"384\":1,\"396\":1,\"431\":2,\"432\":2,\"444\":1,\"445\":2}}],[\"ip相同\",{\"1\":{\"401\":1}}],[\"iperson\",{\"1\":{\"159\":1,\"160\":1}}],[\"it\",{\"1\":{\"302\":1}}],[\"iterator\",{\"1\":{\"210\":1,\"273\":1}}],[\"items\",{\"1\":{\"185\":3}}],[\"item\",{\"1\":{\"92\":2,\"166\":3,\"170\":4,\"184\":1,\"192\":2,\"209\":7,\"326\":2,\"327\":2,\"328\":4,\"329\":2,\"330\":2,\"331\":3,\"349\":2,\"377\":10,\"379\":2,\"402\":2,\"415\":2,\"418\":1}}],[\"iexm<t>\",{\"1\":{\"164\":1}}],[\"iallinfo\",{\"1\":{\"161\":1}}],[\"icarinfo\",{\"1\":{\"161\":3}}],[\"icar\",{\"1\":{\"161\":4}}],[\"id选择器\",{\"1\":{\"173\":1}}],[\"id\",{\"1\":{\"129\":1,\"162\":3,\"339\":1,\"340\":1,\"417\":1,\"480\":1}}],[\"id=\",{\"1\":{\"1\":1,\"21\":1,\"27\":1,\"28\":1,\"93\":1}}],[\"interview\",{\"0\":{\"487\":1}}],[\"interlaced\",{\"1\":{\"477\":1}}],[\"interface\",{\"1\":{\"159\":1,\"161\":3,\"162\":1,\"164\":2}}],[\"inject\",{\"0\":{\"440\":1},\"1\":{\"440\":3}}],[\"innerhtml\",{\"1\":{\"402\":1,\"405\":1}}],[\"innertext\",{\"1\":{\"384\":2,\"402\":2,\"404\":1,\"405\":1,\"415\":4}}],[\"incrementexpression\",{\"1\":{\"271\":2}}],[\"includes判断新数组中是否存在\",{\"1\":{\"209\":1}}],[\"includes\",{\"0\":{\"308\":1},\"1\":{\"192\":1,\"209\":1,\"212\":1,\"308\":1,\"349\":1}}],[\"include\",{\"0\":{\"147\":1,\"471\":1},\"1\":{\"147\":1,\"471\":1}}],[\"inputval\",{\"1\":{\"439\":1}}],[\"inputdom\",{\"1\":{\"384\":5,\"387\":4}}],[\"input\",{\"1\":{\"258\":1,\"273\":1,\"356\":1,\"358\":2,\"384\":1,\"387\":1,\"402\":4,\"418\":1}}],[\"in用于可枚举\",{\"1\":{\"210\":1,\"273\":1}}],[\"in和for\",{\"0\":{\"210\":1}}],[\"in\",{\"0\":{\"273\":1},\"1\":{\"192\":1,\"273\":1,\"349\":1,\"399\":1}}],[\"instaceof\",{\"1\":{\"198\":1}}],[\"instanceof返回的是布尔值\",{\"1\":{\"211\":1}}],[\"instanceof\",{\"0\":{\"211\":1},\"1\":{\"171\":1,\"198\":1,\"367\":2}}],[\"install\",{\"1\":{\"118\":1,\"152\":1,\"451\":1,\"457\":1,\"459\":1,\"460\":1,\"461\":1,\"463\":1,\"464\":2,\"477\":3}}],[\"infinity\",{\"1\":{\"170\":1,\"263\":4}}],[\"info\",{\"1\":{\"87\":1,\"427\":2,\"434\":4,\"435\":1,\"438\":3}}],[\"invalid\",{\"1\":{\"73\":1}}],[\"initialexpression\",{\"1\":{\"271\":2}}],[\"initial\",{\"1\":{\"186\":2}}],[\"initialstate\",{\"1\":{\"118\":1}}],[\"init\",{\"1\":{\"72\":2,\"146\":1,\"447\":1}}],[\"indexof\",{\"0\":{\"309\":1},\"1\":{\"209\":2,\"309\":3,\"377\":1}}],[\"index\",{\"0\":{\"243\":1},\"1\":{\"61\":1,\"93\":2,\"119\":1,\"152\":1,\"209\":2,\"243\":1,\"326\":2,\"327\":1,\"331\":1,\"356\":1,\"358\":2,\"377\":3,\"396\":1,\"418\":2,\"447\":1,\"460\":1,\"480\":1}}],[\"inline\",{\"0\":{\"58\":1},\"1\":{\"45\":2,\"60\":1,\"175\":1}}],[\"isreadonly\",{\"1\":{\"441\":1}}],[\"isreactive\",{\"1\":{\"441\":1}}],[\"isref\",{\"1\":{\"441\":1}}],[\"is\",{\"0\":{\"383\":1},\"1\":{\"228\":1,\"357\":3,\"383\":1}}],[\"isadd\",{\"1\":{\"418\":4}}],[\"isarray\",{\"1\":{\"170\":1}}],[\"isactive\",{\"1\":{\"132\":2}}],[\"isexact\",{\"1\":{\"122\":1}}],[\"isproxy\",{\"1\":{\"441\":1}}],[\"ispending\",{\"1\":{\"115\":1}}],[\"ispointinpath\",{\"1\":{\"25\":2}}],[\"isdraw\",{\"1\":{\"27\":4}}],[\"ishover\",{\"1\":{\"25\":2}}],[\"immediate\",{\"1\":{\"429\":2}}],[\"implements\",{\"1\":{\"161\":2}}],[\"important\",{\"1\":{\"173\":1}}],[\"import\",{\"1\":{\"77\":1,\"93\":1,\"96\":1,\"97\":1,\"99\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":2,\"106\":1,\"107\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"116\":1,\"118\":4,\"119\":2,\"120\":1,\"124\":1,\"125\":1,\"126\":1,\"128\":1,\"130\":1,\"131\":1,\"386\":1,\"420\":1,\"422\":1,\"423\":1,\"424\":1,\"428\":1,\"429\":1,\"430\":1,\"432\":2,\"434\":1,\"438\":1,\"439\":1,\"444\":2,\"475\":1,\"480\":2,\"483\":2}}],[\"ima\",{\"1\":{\"63\":2}}],[\"imageminimizerplugin\",{\"1\":{\"477\":1}}],[\"imagemin\",{\"1\":{\"477\":8}}],[\"imagedata\",{\"1\":{\"24\":11}}],[\"image\",{\"0\":{\"477\":1},\"1\":{\"13\":1,\"17\":1,\"22\":1,\"24\":1,\"55\":1,\"477\":1}}],[\"img\",{\"1\":{\"13\":5,\"17\":9,\"22\":4,\"24\":4,\"63\":6,\"453\":2}}],[\"i++\",{\"1\":{\"13\":1,\"28\":1,\"32\":1,\"166\":2,\"212\":1,\"271\":2,\"280\":2,\"365\":1,\"377\":1}}],[\"i\",{\"1\":{\"13\":3,\"24\":10,\"28\":2,\"32\":3,\"69\":1,\"87\":1,\"93\":1,\"119\":1,\"135\":1,\"136\":1,\"166\":6,\"192\":3,\"212\":8,\"271\":7,\"273\":2,\"313\":1,\"349\":3,\"355\":3,\"365\":3,\"376\":1,\"377\":4,\"396\":1,\"399\":3,\"447\":1,\"451\":1,\"463\":1,\"464\":1,\"473\":1,\"476\":1,\"483\":1}}],[\"if比v\",{\"1\":{\"238\":1}}],[\"if的优先级更高\",{\"1\":{\"238\":1}}],[\"if和v\",{\"0\":{\"237\":1,\"238\":1}}],[\"ifun\",{\"1\":{\"162\":2}}],[\"if\",{\"1\":{\"1\":1,\"27\":1,\"32\":1,\"166\":2,\"169\":1,\"192\":3,\"209\":2,\"212\":6,\"237\":1,\"268\":5,\"271\":1,\"295\":1,\"347\":6,\"349\":3,\"353\":1,\"377\":2,\"384\":1,\"399\":3,\"402\":1,\"413\":1,\"418\":5,\"469\":1}}],[\"=1587885147163`\",{\"1\":{\"402\":1}}],[\"=$\",{\"1\":{\"399\":1}}],[\"=约束条件\",{\"1\":{\"360\":1}}],[\"==先进行类型转换再进行值的比较\",{\"1\":{\"213\":1}}],[\"==会进行类型转换\",{\"1\":{\"213\":1}}],[\"==\",{\"0\":{\"213\":1},\"1\":{\"212\":2,\"214\":1,\"263\":1,\"284\":4,\"377\":1}}],[\"===会先判断数据类型是否相等\",{\"1\":{\"213\":1}}],[\"===不会进行类型转换\",{\"1\":{\"213\":1}}],[\"===\",{\"0\":{\"213\":1},\"1\":{\"27\":2,\"32\":1,\"166\":2,\"192\":2,\"209\":2,\"212\":2,\"263\":1,\"282\":2,\"284\":4,\"327\":1,\"328\":2,\"329\":1,\"347\":7,\"349\":2,\"377\":2,\"399\":3}}],[\"=>\",{\"1\":{\"13\":1,\"17\":2,\"21\":2,\"22\":1,\"24\":1,\"25\":1,\"27\":9,\"28\":4,\"32\":1,\"73\":1,\"90\":1,\"91\":1,\"92\":1,\"97\":5,\"98\":1,\"99\":1,\"101\":1,\"102\":1,\"105\":1,\"107\":4,\"108\":2,\"109\":1,\"111\":1,\"112\":1,\"113\":1,\"115\":1,\"116\":1,\"118\":2,\"119\":1,\"122\":1,\"126\":1,\"132\":1,\"133\":1,\"139\":1,\"162\":1,\"164\":1,\"166\":2,\"168\":1,\"169\":2,\"170\":4,\"192\":3,\"193\":1,\"203\":1,\"209\":2,\"277\":3,\"278\":1,\"287\":1,\"288\":1,\"298\":1,\"326\":1,\"327\":1,\"328\":2,\"329\":1,\"330\":1,\"331\":1,\"332\":3,\"339\":1,\"340\":1,\"343\":3,\"344\":9,\"347\":5,\"349\":3,\"352\":2,\"353\":2,\"377\":2,\"384\":1,\"389\":7,\"394\":1,\"399\":2,\"402\":5,\"412\":1,\"413\":4,\"415\":3,\"422\":1,\"428\":1,\"429\":6,\"430\":1,\"432\":4,\"439\":3,\"444\":1,\"480\":2,\"482\":1}}],[\"=\",{\"1\":{\"1\":2,\"11\":1,\"13\":14,\"14\":1,\"16\":4,\"17\":4,\"18\":5,\"21\":8,\"22\":3,\"23\":2,\"24\":10,\"25\":9,\"27\":28,\"28\":15,\"32\":3,\"34\":3,\"35\":8,\"88\":1,\"90\":2,\"91\":1,\"92\":2,\"93\":2,\"96\":1,\"97\":5,\"98\":2,\"99\":5,\"102\":1,\"105\":2,\"106\":1,\"107\":1,\"109\":1,\"111\":1,\"112\":1,\"113\":2,\"114\":2,\"115\":1,\"116\":2,\"118\":5,\"122\":1,\"126\":1,\"129\":2,\"133\":2,\"137\":2,\"138\":2,\"139\":1,\"142\":2,\"143\":1,\"152\":2,\"153\":1,\"155\":1,\"156\":1,\"158\":6,\"160\":1,\"161\":2,\"162\":1,\"164\":1,\"166\":9,\"169\":4,\"170\":3,\"171\":2,\"192\":6,\"193\":2,\"194\":1,\"203\":2,\"209\":3,\"212\":5,\"253\":2,\"260\":2,\"263\":3,\"271\":3,\"273\":1,\"275\":1,\"277\":2,\"278\":2,\"281\":1,\"287\":3,\"288\":4,\"293\":2,\"295\":4,\"298\":2,\"301\":1,\"302\":4,\"316\":2,\"334\":4,\"335\":4,\"337\":2,\"339\":1,\"340\":1,\"344\":3,\"345\":2,\"347\":7,\"349\":6,\"350\":1,\"352\":3,\"353\":4,\"355\":3,\"356\":3,\"358\":3,\"359\":2,\"360\":8,\"362\":1,\"363\":6,\"365\":4,\"368\":1,\"370\":4,\"373\":1,\"376\":2,\"377\":8,\"379\":5,\"381\":4,\"382\":1,\"383\":2,\"384\":15,\"387\":2,\"392\":3,\"399\":6,\"402\":17,\"404\":4,\"407\":4,\"412\":1,\"413\":7,\"415\":5,\"417\":1,\"423\":2,\"424\":1,\"426\":1,\"427\":2,\"428\":4,\"429\":1,\"430\":1,\"432\":5,\"434\":1,\"438\":4,\"439\":4,\"440\":2,\"444\":1,\"448\":1,\"451\":1,\"452\":1,\"453\":2,\"454\":1,\"457\":2,\"459\":1,\"460\":2,\"461\":1,\"463\":2,\"464\":1,\"467\":1,\"469\":1,\"470\":1,\"471\":1,\"472\":1,\"473\":4,\"476\":1,\"480\":4,\"483\":1}}],[\"cpus\",{\"1\":{\"473\":1}}],[\"cpu\",{\"1\":{\"473\":1}}],[\"customref\",{\"0\":{\"439\":1},\"1\":{\"439\":2}}],[\"current\",{\"1\":{\"99\":2}}],[\"cdn\",{\"1\":{\"417\":1}}],[\"c^2\",{\"1\":{\"337\":1}}],[\"ceil\",{\"1\":{\"336\":1}}],[\"center\",{\"1\":{\"18\":1,\"49\":1}}],[\"cachegroups\",{\"1\":{\"480\":1}}],[\"cachelocation\",{\"1\":{\"472\":1}}],[\"cachecompression\",{\"1\":{\"472\":1,\"476\":1}}],[\"cachedirectory\",{\"1\":{\"472\":1,\"476\":1}}],[\"cache\",{\"0\":{\"472\":1,\"482\":1},\"1\":{\"472\":2}}],[\"catch\",{\"1\":{\"218\":1,\"344\":1,\"388\":2,\"389\":1,\"392\":1,\"393\":1,\"480\":1}}],[\"callback\",{\"1\":{\"402\":1,\"412\":2,\"413\":3,\"469\":1}}],[\"callee\",{\"1\":{\"300\":3}}],[\"call和apply的区别\",{\"0\":{\"194\":1}}],[\"call\",{\"1\":{\"192\":1,\"194\":1,\"215\":2,\"264\":1,\"302\":5,\"349\":1}}],[\"calc\",{\"1\":{\"181\":1}}],[\"calsses\",{\"1\":{\"103\":1}}],[\"canrun\",{\"1\":{\"169\":4}}],[\"canvas>\",{\"1\":{\"1\":1,\"21\":1,\"27\":1,\"28\":1}}],[\"canvas\",{\"0\":{\"0\":1},\"1\":{\"1\":6,\"18\":1,\"21\":6,\"25\":7,\"27\":11,\"28\":6}}],[\"carinfo\",{\"1\":{\"161\":1}}],[\"car\",{\"1\":{\"161\":2}}],[\"case\",{\"1\":{\"109\":2,\"269\":2}}],[\"c\",{\"1\":{\"99\":2,\"263\":1,\"302\":2,\"347\":6}}],[\"cb\",{\"1\":{\"97\":3,\"301\":2,\"429\":1}}],[\"creature\",{\"1\":{\"370\":2,\"371\":1}}],[\"createdocumentfragment\",{\"1\":{\"402\":1}}],[\"created\",{\"1\":{\"240\":2,\"241\":2,\"431\":1}}],[\"createslice\",{\"1\":{\"118\":2}}],[\"createcontext\",{\"1\":{\"105\":2}}],[\"createconicgradient\",{\"1\":{\"13\":2}}],[\"createportal\",{\"0\":{\"102\":1},\"1\":{\"102\":1}}],[\"createpath\",{\"1\":{\"25\":3}}],[\"createpattern\",{\"1\":{\"13\":2}}],[\"createref\",{\"1\":{\"96\":1}}],[\"createref方法获取\",{\"1\":{\"96\":1}}],[\"createroot\",{\"1\":{\"90\":1,\"93\":1}}],[\"createradialgradient\",{\"1\":{\"13\":2}}],[\"create\",{\"0\":{\"382\":1},\"1\":{\"84\":1,\"171\":1,\"363\":1,\"382\":1}}],[\"createelementfragment\",{\"1\":{\"407\":2}}],[\"createelement\",{\"1\":{\"27\":1,\"90\":1,\"91\":1,\"402\":2,\"404\":1,\"407\":2}}],[\"createheart\",{\"1\":{\"25\":2}}],[\"createlineargradient\",{\"1\":{\"13\":2}}],[\"cref\",{\"1\":{\"113\":2}}],[\"crossorigin><\",{\"1\":{\"90\":2}}],[\"ccc\",{\"1\":{\"21\":1,\"379\":1}}],[\"cssminimizerplugin\",{\"1\":{\"464\":2}}],[\"css$\",{\"1\":{\"451\":1,\"463\":1,\"464\":1,\"470\":1}}],[\"css实现三角形\",{\"0\":{\"178\":1}}],[\"css选择器及优先级\",{\"0\":{\"173\":1}}],[\"css3\",{\"0\":{\"39\":1},\"1\":{\"464\":1}}],[\"css\",{\"0\":{\"103\":1,\"172\":1},\"1\":{\"18\":2,\"103\":2,\"450\":1,\"451\":6,\"463\":6,\"464\":3,\"469\":1,\"470\":2}}],[\"chunkfilename\",{\"1\":{\"480\":2}}],[\"chunks\",{\"1\":{\"480\":1}}],[\"cheap\",{\"1\":{\"467\":1}}],[\"checkobj\",{\"1\":{\"212\":2}}],[\"checktype\",{\"1\":{\"192\":4,\"349\":4}}],[\"checkjs\",{\"1\":{\"151\":1}}],[\"childnodes\",{\"1\":{\"409\":1}}],[\"child\",{\"1\":{\"407\":6}}],[\"children=\",{\"1\":{\"119\":1}}],[\"children\",{\"1\":{\"32\":2,\"113\":1,\"119\":1,\"128\":1,\"166\":6,\"409\":1}}],[\"chatcodeat\",{\"0\":{\"305\":1}}],[\"charat\",{\"0\":{\"304\":1},\"1\":{\"304\":3,\"305\":1}}],[\"change\",{\"1\":{\"418\":1}}],[\"changea\",{\"1\":{\"193\":1}}],[\"changeorigin\",{\"1\":{\"133\":2}}],[\"changestate\",{\"1\":{\"97\":1}}],[\"ch\",{\"1\":{\"17\":3}}],[\"cw\",{\"1\":{\"17\":3}}],[\"cy\",{\"1\":{\"17\":4}}],[\"cx\",{\"1\":{\"17\":4}}],[\"code\",{\"0\":{\"479\":1},\"1\":{\"479\":1}}],[\"cos\",{\"1\":{\"337\":1}}],[\"cookies是网站标记用户身份的一段加密的数据\",{\"1\":{\"216\":1}}],[\"cookies\",{\"0\":{\"216\":1}}],[\"cors\",{\"1\":{\"204\":1,\"402\":1}}],[\"corejs\",{\"1\":{\"483\":1}}],[\"core\",{\"0\":{\"483\":1},\"1\":{\"150\":1,\"459\":1,\"483\":4}}],[\"column\",{\"1\":{\"185\":3}}],[\"columns\",{\"1\":{\"185\":4}}],[\"color1\",{\"1\":{\"55\":1}}],[\"colordom\",{\"1\":{\"27\":2}}],[\"color\",{\"1\":{\"13\":1,\"25\":3,\"27\":4,\"28\":4,\"56\":2,\"132\":1,\"178\":1,\"440\":7}}],[\"countstore\",{\"1\":{\"118\":3}}],[\"countreducer\",{\"1\":{\"118\":4}}],[\"countdispatch\",{\"1\":{\"109\":2}}],[\"count会一直使用原来的值\",{\"1\":{\"97\":1}}],[\"count++\",{\"1\":{\"97\":1,\"118\":1}}],[\"count\",{\"1\":{\"97\":2,\"109\":1,\"111\":3,\"114\":2,\"118\":2}}],[\"commit\",{\"1\":{\"248\":1}}],[\"commonjs\",{\"1\":{\"77\":2,\"78\":1,\"88\":1}}],[\"composition\",{\"0\":{\"421\":1},\"1\":{\"420\":1,\"432\":1}}],[\"componentwillunmount\",{\"1\":{\"227\":1}}],[\"componentdidupdate\",{\"1\":{\"227\":1}}],[\"componentdidupdate钩子\",{\"1\":{\"107\":1}}],[\"componentdidmount\",{\"1\":{\"227\":1}}],[\"components\",{\"1\":{\"148\":1}}],[\"component=\",{\"1\":{\"119\":1}}],[\"component\",{\"1\":{\"96\":2,\"97\":1,\"98\":1,\"119\":2,\"126\":3,\"128\":1,\"445\":2}}],[\"component类\",{\"1\":{\"96\":1}}],[\"comp\",{\"1\":{\"253\":1}}],[\"computed可以监听自己定义\",{\"1\":{\"417\":1}}],[\"computed\",{\"0\":{\"239\":1,\"428\":1},\"1\":{\"239\":1,\"417\":5,\"428\":3,\"430\":2}}],[\"compileroptions\",{\"0\":{\"151\":1}}],[\"com\",{\"1\":{\"90\":2,\"91\":1,\"98\":1,\"396\":1,\"402\":1,\"444\":1}}],[\"cover\",{\"1\":{\"48\":1}}],[\"condition\",{\"1\":{\"268\":4,\"271\":4,\"272\":2}}],[\"concat\",{\"0\":{\"307\":1,\"319\":1},\"1\":{\"192\":1,\"319\":2}}],[\"configurable\",{\"1\":{\"384\":2}}],[\"configurestore\",{\"1\":{\"118\":1}}],[\"configs\",{\"1\":{\"149\":1}}],[\"config\",{\"1\":{\"80\":2,\"87\":3,\"152\":1,\"429\":1,\"445\":3,\"447\":1,\"448\":1,\"458\":2,\"459\":3,\"462\":4,\"467\":1,\"469\":1,\"470\":1}}],[\"continue\",{\"1\":{\"271\":3}}],[\"control\",{\"1\":{\"204\":1}}],[\"context\",{\"0\":{\"105\":1},\"1\":{\"105\":10,\"174\":1,\"422\":1,\"457\":1,\"471\":1,\"472\":1}}],[\"content=\",{\"1\":{\"186\":1}}],[\"content\",{\"1\":{\"50\":1,\"51\":1,\"60\":1,\"177\":1,\"180\":1,\"184\":1,\"185\":2,\"396\":1}}],[\"contain\",{\"1\":{\"48\":1}}],[\"container2\",{\"1\":{\"418\":3}}],[\"container\",{\"1\":{\"21\":1,\"418\":3}}],[\"consumer>\",{\"1\":{\"105\":2}}],[\"consumer\",{\"1\":{\"105\":1}}],[\"console\",{\"1\":{\"24\":1,\"35\":1,\"157\":1,\"164\":1,\"265\":4,\"271\":3,\"273\":1,\"295\":9,\"300\":1,\"301\":3,\"302\":3,\"341\":1,\"343\":3,\"344\":3,\"347\":1,\"352\":1,\"353\":1,\"356\":1,\"359\":3,\"360\":1,\"370\":5,\"371\":1,\"379\":1,\"384\":2,\"389\":2,\"399\":2,\"404\":1,\"413\":1,\"429\":2}}],[\"const提升时不会跳出块级作用域\",{\"1\":{\"295\":1}}],[\"const的区别\",{\"1\":{\"293\":1}}],[\"const用于常量的声明\",{\"1\":{\"260\":1}}],[\"const变量也进行了提升\",{\"1\":{\"206\":1}}],[\"constructor\",{\"1\":{\"25\":1,\"96\":1,\"153\":1,\"154\":1,\"155\":1,\"158\":1,\"161\":1,\"368\":1,\"370\":3,\"371\":1,\"377\":1,\"381\":1}}],[\"const\",{\"1\":{\"1\":2,\"11\":1,\"13\":5,\"17\":2,\"21\":4,\"22\":1,\"24\":3,\"25\":3,\"27\":12,\"28\":10,\"32\":1,\"34\":1,\"35\":2,\"90\":2,\"91\":1,\"92\":2,\"93\":2,\"97\":2,\"98\":2,\"99\":4,\"102\":1,\"105\":2,\"106\":1,\"107\":1,\"109\":1,\"111\":1,\"112\":1,\"113\":2,\"114\":2,\"115\":1,\"116\":2,\"118\":5,\"122\":1,\"126\":1,\"129\":2,\"133\":1,\"137\":2,\"138\":3,\"139\":9,\"140\":3,\"141\":1,\"142\":2,\"143\":1,\"152\":1,\"156\":1,\"158\":1,\"160\":1,\"162\":1,\"164\":1,\"166\":6,\"170\":2,\"171\":2,\"192\":2,\"193\":1,\"194\":1,\"209\":3,\"212\":2,\"253\":2,\"260\":2,\"273\":1,\"275\":1,\"277\":2,\"278\":1,\"281\":1,\"287\":2,\"288\":3,\"293\":1,\"295\":2,\"301\":1,\"302\":5,\"316\":2,\"334\":1,\"339\":1,\"340\":1,\"344\":3,\"345\":1,\"347\":5,\"349\":2,\"355\":2,\"356\":2,\"358\":3,\"359\":2,\"360\":4,\"362\":1,\"368\":1,\"370\":1,\"373\":1,\"376\":1,\"379\":2,\"382\":1,\"383\":2,\"384\":4,\"387\":1,\"392\":3,\"399\":4,\"402\":10,\"404\":3,\"407\":4,\"413\":1,\"415\":3,\"417\":1,\"423\":2,\"424\":1,\"426\":1,\"427\":2,\"428\":2,\"429\":1,\"430\":1,\"432\":3,\"434\":1,\"438\":3,\"439\":1,\"440\":2,\"444\":1,\"457\":1,\"460\":1,\"463\":1,\"464\":1,\"473\":3,\"480\":2}}],[\"clean\",{\"1\":{\"453\":1}}],[\"clearinterval\",{\"1\":{\"340\":2}}],[\"cleartimeout\",{\"1\":{\"107\":1,\"169\":1,\"203\":1,\"339\":2,\"352\":1,\"439\":1}}],[\"clearfix\",{\"1\":{\"60\":1}}],[\"clearbtn\",{\"1\":{\"27\":2}}],[\"clear\",{\"1\":{\"27\":2,\"60\":2,\"180\":1,\"379\":3}}],[\"clearrect\",{\"1\":{\"4\":1,\"25\":1,\"27\":1,\"28\":1}}],[\"cloneobj\",{\"1\":{\"192\":6,\"349\":6}}],[\"cloumns\",{\"1\":{\"185\":1}}],[\"closepath\",{\"1\":{\"7\":4,\"27\":1,\"28\":2}}],[\"close\",{\"1\":{\"3\":1}}],[\"classes\",{\"1\":{\"103\":1}}],[\"classname=\",{\"1\":{\"91\":1,\"103\":1}}],[\"classname\",{\"1\":{\"90\":2,\"91\":1}}],[\"class\",{\"1\":{\"25\":1,\"91\":1,\"96\":3,\"97\":1,\"98\":1,\"153\":1,\"154\":1,\"155\":1,\"157\":2,\"158\":1,\"161\":2,\"164\":1,\"220\":4,\"227\":1,\"370\":3,\"371\":1,\"377\":1,\"381\":1,\"417\":1,\"418\":1}}],[\"class=\",{\"1\":{\"21\":1,\"27\":6,\"407\":2,\"412\":1,\"418\":3}}],[\"cli必须在4\",{\"1\":{\"419\":1}}],[\"cli\",{\"1\":{\"152\":1,\"447\":1}}],[\"clip\",{\"0\":{\"51\":1},\"1\":{\"22\":1}}],[\"clienttop\",{\"1\":{\"410\":1}}],[\"clientleft\",{\"1\":{\"410\":1}}],[\"clientheight\",{\"1\":{\"410\":1}}],[\"clientwidth\",{\"1\":{\"410\":1}}],[\"client\",{\"1\":{\"93\":2}}],[\"clienty\",{\"1\":{\"21\":1,\"27\":2}}],[\"clientx\",{\"1\":{\"21\":1,\"27\":2}}],[\"click\",{\"1\":{\"21\":1,\"27\":1,\"413\":2,\"415\":2,\"432\":2}}],[\"ctx\",{\"1\":{\"1\":1,\"6\":3,\"7\":18,\"8\":5,\"9\":3,\"11\":1,\"13\":15,\"14\":1,\"16\":4,\"17\":5,\"18\":6,\"19\":4,\"21\":9,\"22\":4,\"23\":4,\"24\":3,\"25\":9,\"27\":11,\"28\":32,\"105\":3}}],[\"<template\",{\"1\":{\"444\":2}}],[\"<teleport\",{\"1\":{\"443\":1}}],[\"<text\",{\"1\":{\"188\":1}}],[\"<day>\",{\"1\":{\"359\":1}}],[\"<div>\",{\"1\":{\"130\":1}}],[\"<div\",{\"1\":{\"21\":1,\"27\":1,\"407\":2,\"412\":1,\"418\":4,\"423\":1}}],[\"<month>\",{\"1\":{\"359\":1}}],[\"<meta\",{\"1\":{\"186\":1}}],[\"<year>\",{\"1\":{\"359\":1}}],[\"<name>\",{\"1\":{\"359\":1}}],[\"<navigate\",{\"1\":{\"131\":1}}],[\"<navlink\",{\"1\":{\"120\":1,\"132\":1}}],[\"<=银时\",{\"1\":{\"360\":1}}],[\"<=sherry\",{\"1\":{\"360\":1}}],[\"<=约束条件\",{\"1\":{\"360\":1}}],[\"<=\",{\"1\":{\"284\":1,\"399\":1}}],[\"<outlet\",{\"1\":{\"130\":1}}],[\"<about\",{\"1\":{\"128\":1,\"130\":1}}],[\"<app\",{\"1\":{\"95\":1,\"101\":1,\"105\":1,\"118\":1,\"119\":1}}],[\"<svg>\",{\"1\":{\"188\":1}}],[\"<string>name\",{\"1\":{\"141\":1}}],[\"<switch>\",{\"1\":{\"126\":1}}],[\"<suspense>\",{\"1\":{\"444\":1}}],[\"<suspense\",{\"1\":{\"126\":1}}],[\"<script\",{\"1\":{\"90\":2,\"91\":2,\"386\":1,\"417\":1}}],[\"<script>\",{\"1\":{\"1\":1,\"21\":1,\"27\":1,\"28\":1,\"418\":1}}],[\"<react\",{\"1\":{\"130\":1}}],[\"<redirect\",{\"1\":{\"125\":1}}],[\"<route\",{\"1\":{\"128\":2,\"130\":2}}],[\"<routes>\",{\"1\":{\"128\":1,\"130\":1}}],[\"<route><\",{\"1\":{\"126\":1}}],[\"<router\",{\"1\":{\"119\":3,\"246\":1}}],[\"<router>\",{\"1\":{\"119\":1}}],[\"<link\",{\"1\":{\"120\":1}}],[\"<li>这里li\",{\"1\":{\"415\":3}}],[\"<li>\",{\"1\":{\"92\":1}}],[\"<home\",{\"1\":{\"119\":2,\"128\":1}}],[\"<h1><\",{\"1\":{\"415\":1}}],[\"<h1>\",{\"1\":{\"98\":1,\"101\":1,\"105\":1,\"106\":1,\"111\":1,\"113\":1}}],[\"<h1>hello\",{\"1\":{\"93\":1,\"95\":1,\"96\":1,\"102\":1,\"104\":1,\"110\":1,\"130\":1}}],[\"<h1\",{\"1\":{\"91\":1,\"96\":1,\"99\":2,\"103\":1,\"113\":1}}],[\"<propname>\",{\"1\":{\"164\":1}}],[\"<prompt\",{\"1\":{\"124\":1}}],[\"<provider\",{\"1\":{\"118\":1}}],[\"<p>一等奖<\",{\"1\":{\"21\":1}}],[\"<fragment>\",{\"1\":{\"104\":1}}],[\"<children\",{\"1\":{\"113\":1}}],[\"<count\",{\"1\":{\"111\":1}}],[\"<context\",{\"1\":{\"105\":2}}],[\"<component\",{\"1\":{\"119\":1}}],[\"<com\",{\"1\":{\"98\":2}}],[\"<canvas\",{\"1\":{\"1\":1,\"21\":1,\"27\":1,\"28\":1}}],[\"<ul><\",{\"1\":{\"402\":1}}],[\"<ul>\",{\"1\":{\"92\":1,\"415\":1}}],[\"<button\",{\"1\":{\"27\":3}}],[\"<input\",{\"1\":{\"27\":2,\"387\":1,\"402\":1}}],[\"<\",{\"1\":{\"1\":1,\"13\":1,\"21\":2,\"24\":1,\"27\":2,\"28\":2,\"32\":1,\"61\":3,\"91\":2,\"92\":2,\"98\":1,\"101\":1,\"104\":1,\"105\":3,\"106\":1,\"111\":1,\"113\":1,\"118\":1,\"119\":3,\"126\":2,\"128\":1,\"130\":3,\"166\":2,\"188\":2,\"212\":1,\"271\":3,\"284\":3,\"285\":4,\"332\":1,\"360\":1,\"365\":1,\"377\":1,\"399\":2,\"407\":1,\"415\":1,\"418\":5,\"443\":2,\"444\":2,\"464\":2}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
