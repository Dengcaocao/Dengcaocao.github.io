const e=JSON.parse('{"key":"v-6a804144","path":"/performance_js/","title":"","lang":"zh-CN","frontmatter":{"description":"内存管理 从申请 --> 使用 --> 释放的一个过程。 垃圾回收与 GC 算法 JS 中内存管理是自动的，当对象不再被引用或不能从根上访问(全局作用域)时就被标记为垃圾。 可达对象：从根出发可访问到的对象。 GC 垃圾回收机制的简称，可以找到内存中的垃圾进行释放和回收。 不再需要使用的对象; 不能再访问到的对象; V8 引擎的垃圾回收 perform...","head":[["meta",{"property":"og:url","content":"https://dengcaocao.github.io/docs/performance_js/"}],["meta",{"property":"og:site_name","content":"Deng·草草"}],["meta",{"property":"og:description","content":"内存管理 从申请 --> 使用 --> 释放的一个过程。 垃圾回收与 GC 算法 JS 中内存管理是自动的，当对象不再被引用或不能从根上访问(全局作用域)时就被标记为垃圾。 可达对象：从根出发可访问到的对象。 GC 垃圾回收机制的简称，可以找到内存中的垃圾进行释放和回收。 不再需要使用的对象; 不能再访问到的对象; V8 引擎的垃圾回收 perform..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-02T05:34:09.000Z"}],["meta",{"property":"article:author","content":"Deng·草草"}],["meta",{"property":"article:modified_time","content":"2023-08-02T05:34:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-08-02T05:34:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Deng·草草\\",\\"url\\":\\"dengcaocao.github.io\\"}]}"]]},"headers":[{"level":2,"title":"内存管理","slug":"内存管理","link":"#内存管理","children":[]},{"level":2,"title":"垃圾回收与 GC 算法","slug":"垃圾回收与-gc-算法","link":"#垃圾回收与-gc-算法","children":[]},{"level":2,"title":"V8 引擎的垃圾回收","slug":"v8-引擎的垃圾回收","link":"#v8-引擎的垃圾回收","children":[]},{"level":2,"title":"performance 工具","slug":"performance-工具","link":"#performance-工具","children":[]},{"level":2,"title":"优化实例","slug":"优化实例","link":"#优化实例","children":[]}],"git":{"createdTime":1690954449000,"updatedTime":1690954449000,"contributors":[{"name":"dw","email":"1536698087@qq.com","commits":1}]},"readingTime":{"minutes":0.79,"words":238},"filePathRelative":"performance_js/README.md","localizedDate":"2023年8月2日","autoDesc":true,"excerpt":""}');export{e as data};
